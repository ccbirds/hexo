{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/images/images.png","path":"images/images.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"source/images/ubuntu中使用pycharm有些快捷键无法使用/setting.png","path":"images/ubuntu中使用pycharm有些快捷键无法使用/setting.png","modified":1,"renderable":0},{"_id":"source/images/ubuntu中使用pycharm有些快捷键无法使用/setting2.png","path":"images/ubuntu中使用pycharm有些快捷键无法使用/setting2.png","modified":1,"renderable":0},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","path":"lib/pace/pace-theme-flat-top.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","path":"lib/pace/pace-theme-material.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/LICENSE","path":"lib/three/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/README.md","path":"lib/three/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/gulpfile.js","path":"lib/three/gulpfile.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/package.json","path":"lib/three/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/renovate.json","path":"lib/three/renovate.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","path":"lib/fancybox/source/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","path":"lib/three/lib/CanvasRenderer.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/Projector.js","path":"lib/three/lib/Projector.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","path":"lib/three/src/canvas_lines.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","path":"lib/three/src/canvas_sphere.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/three-waves.js","path":"lib/three/src/three-waves.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/package-lock.json","path":"lib/three/package-lock.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","path":"lib/fancybox/source/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1584673167991},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1584673167991},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1584673167991},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1584673167991},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1584673167991},{"_id":"themes/next/_config.yml","hash":"9aedbcf7ed8ad506808f7e5803d5b3ed29c5a5e5","modified":1584956019717},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1584673167991},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1584673167995},{"_id":"themes/next/package.json","hash":"6be512ba52a3f9edb27f4db15c8cc166741af3e9","modified":1584673168003},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1584673167995},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1584673167995},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1584673167991},{"_id":"source/about/index.md","hash":"ea055eda1aa44e5268a29b058b84a9aceb9dfbf3","modified":1584685607247},{"_id":"source/archives/index.md","hash":"239fd7333c84bde0a48991adee7f1cead204b8ab","modified":1584685649942},{"_id":"source/categories/index.md","hash":"d78d63544ecc3381ac04edc5f98f765d459c8c55","modified":1584710505136},{"_id":"source/tags/index.md","hash":"40ed6d60bc5bccf4c0685b7bb6abd906e0e54766","modified":1584710672857},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1584673167991},{"_id":"themes/next/.github/config.yml","hash":"e4f4b9afe59bc508c4f7634895b33d7d460a7cb1","modified":1584673167991},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1584673167991},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1584673167991},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1584673167991},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1584673167991},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1584673167991},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1584673167991},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1584673167991},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1584673167991},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1584673167991},{"_id":"source/images/images.png","hash":"c5630a436d828a6365b2e46799b94d997654322d","modified":1579697269039},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1584673167995},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1584673167995},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1584673167995},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1584673167995},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1584673167995},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1584673167995},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1584673167995},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1584673167995},{"_id":"themes/next/layout/_layout.swig","hash":"6cf9fac4b488cc9cb4b54ef879a0ef147998acd1","modified":1584673167999},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1584673167995},{"_id":"themes/next/layout/archive.swig","hash":"26526c09a4334099e2141456697696fcd1f9783f","modified":1584673168003},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1584673168003},{"_id":"themes/next/layout/category.swig","hash":"c55debb2588e4746b02d31ec249bf0a84fdea260","modified":1584673168003},{"_id":"themes/next/layout/index.swig","hash":"3bc6fb1e9707d74b96e1346d3f03fe6584f764f4","modified":1584673168003},{"_id":"themes/next/layout/post.swig","hash":"382d9f9a9b35e1f369585f7f9f9b5dd6fa58d2f0","modified":1584673168003},{"_id":"themes/next/layout/tag.swig","hash":"7ff6e34d557a3da1c6a29ecd97842bf73ff213dc","modified":1584673168003},{"_id":"themes/next/layout/page.swig","hash":"3cf16115eb5bf3e0f0a1de54df67b5153ccfca66","modified":1584673168003},{"_id":"source/_posts/hexo-theme-beantech.md","hash":"815637c1b602004391cf60d526ec7a9afb05c232","modified":1584837516198},{"_id":"source/_posts/markedown云笔记，typora+坚果云+picgo+github图床+阿里云图床.md","hash":"fdd4ceec5670f5a6c1474fc15e1c259149b35193","modified":1584837537912},{"_id":"source/_posts/nanopi-neo2-black-上电使用.md","hash":"3b0c7ae52ce816b2996033cf8ba790b62cbd8064","modified":1584837596703},{"_id":"source/_posts/nanopi-neo2-black-防烧屏设置.md","hash":"55aaf38ecea130c5553a4102b9a82b073395643a","modified":1584837596700},{"_id":"source/_posts/nanopi-neo2-black-音乐闹钟.md","hash":"7e38f21965860932c0b343d33a10db731cb6cf21","modified":1584837628532},{"_id":"source/_posts/nanopi压力测试和散热能力.md","hash":"c5508364c8ba08104d1ef6b23668d20bd4c15c44","modified":1584837711539},{"_id":"source/_posts/ubuntu下将文件备份到github.md","hash":"9db3b974baa411841e5dbd57ed8aebd6a0ab670e","modified":1584837743730},{"_id":"source/_posts/nanopi性能测试UnixBench.md","hash":"965aa6cc0ee3bdc059640dcee2ecc6d02ec3609d","modified":1584837688253},{"_id":"source/_posts/nanopi安装oh_my_zsh.md","hash":"268c31c5e46f6bdd40acb1a52aec84bc51d5500c","modified":1584837656837},{"_id":"source/_posts/ubuntu中使用pycharm有些快捷键无法使用.md","hash":"6dcd69cfece0c1828c711419200e5a69d81ca15f","modified":1584837743735},{"_id":"source/_posts/为使用hexo搭建的博客加入评论系统gitalk.md","hash":"a0989b8ec5ff769408dc65276b44a3c112a01bc0","modified":1584837841910},{"_id":"source/_posts/将静态博客托管在nanopi上.md","hash":"35e55e7298f7e08fa60dfaca1158448cb9d1f738","modified":1584837784377},{"_id":"source/_posts/快速重装win10系统.md","hash":"c7c30984489b55f33d9bdd2d0a7680784e6ec5a9","modified":1584837815592},{"_id":"source/_posts/手机无线投屏win10.md","hash":"dc73986d0870f12900e115c7d0f8664dc9e4596b","modified":1584837827303},{"_id":"source/_posts/论文写作小工具推荐.md","hash":"0b93924bc439b448763c0d982ec04fd70c5aa470","modified":1584837815595},{"_id":"themes/next/languages/de.yml","hash":"109943f7adcd5cdbe4c6c95c9d279603f07edacb","modified":1584673167999},{"_id":"themes/next/languages/ar.yml","hash":"c5d6fa35b57fa2bfab4a8a3b66fc52b5673f1ba5","modified":1584673167999},{"_id":"themes/next/languages/default.yml","hash":"2fcb14e621a2c3424f4c1e711fb3858034c6fe00","modified":1584673167999},{"_id":"themes/next/languages/en.yml","hash":"2fcb14e621a2c3424f4c1e711fb3858034c6fe00","modified":1584673167999},{"_id":"themes/next/languages/es.yml","hash":"53ef4a621fd628748b8ed711fe86080e9c9c91c8","modified":1584673167999},{"_id":"themes/next/languages/fa.yml","hash":"a24e0cf28e9f137d0d2219498778693c3c3960b2","modified":1584673167999},{"_id":"themes/next/languages/hu.yml","hash":"074d069af9aed5ad34fa809bd058a3b9e2d01051","modified":1584673167999},{"_id":"themes/next/languages/fr.yml","hash":"578a30a51b9ecbbcb4c200362ad9a37ffd3272db","modified":1584673167999},{"_id":"themes/next/languages/id.yml","hash":"6037450ecd02796e08ca2e98037845b7c30c2807","modified":1584673167999},{"_id":"themes/next/languages/it.yml","hash":"ba2c8f51f2f719dabe71b6053c6fe6866161ec66","modified":1584673167999},{"_id":"themes/next/languages/ja.yml","hash":"5e13b521201944815665bd077b65d7ce69622b81","modified":1584673167999},{"_id":"themes/next/languages/ko.yml","hash":"4aa8f3bf06e02879863b19901476cb23ecd2d709","modified":1584673167999},{"_id":"themes/next/languages/nl.yml","hash":"e27b29c60d88ef4c30de291b595cf8cad639c5d1","modified":1584673167999},{"_id":"themes/next/languages/pt-BR.yml","hash":"0660471e067d01ec80962d5721ae282aafff274d","modified":1584673167999},{"_id":"themes/next/languages/pt.yml","hash":"f7516b9d86b52c80bf63d3efc7ee6fd985205001","modified":1584673167999},{"_id":"themes/next/languages/ru.yml","hash":"a5381aab2a94bc5599f5b427f7d5a1a39949c4ce","modified":1584673167999},{"_id":"themes/next/languages/uk.yml","hash":"df54b2149c70bd64f7bd375e5833fe07660da237","modified":1584673167999},{"_id":"themes/next/languages/vi.yml","hash":"ffc144f606e171fdd8cdb41808ac36e406015a54","modified":1584673167999},{"_id":"themes/next/languages/tr.yml","hash":"145d28f6f051129dc6393affe8f68cd7ba925078","modified":1584673167999},{"_id":"themes/next/languages/zh-HK.yml","hash":"2620632caa3c94022d9513ab1971d15512e737e7","modified":1584673167999},{"_id":"themes/next/languages/zh-TW.yml","hash":"0964e90406bbd495e901d6b9d5f10124c8cad950","modified":1584673167999},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f22d66ef7a93811ff932986e9e5d69a320db5d96","modified":1584673167999},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1584673167991},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1584673167991},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1584673167991},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1584673167991},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1584673167995},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1584673167995},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"815676d904f92748ddf4f529bed2baf066997bc6","modified":1584673167999},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"f29b50d83bcdc9e70696b6a8a8917d8b2ad4be10","modified":1584711005764},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1584673167999},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1584673167999},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1584673167999},{"_id":"themes/next/layout/_macro/post.swig","hash":"c75211e6f7cdc38d9496f65eb320249aa2e828e5","modified":1584711139743},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"487ae678c587d4df350fd45088165aabba82e43d","modified":1584673167999},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1584673167999},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1584673167999},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1584673167999},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1584673167999},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1584673168003},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1584673167999},{"_id":"themes/next/layout/_partials/footer.swig","hash":"bbfd5828a442ba01043f9ae5dcfa843973152055","modified":1584673167999},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1584673167999},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1584673168003},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1584673167999},{"_id":"themes/next/scripts/events/index.js","hash":"17dcb0a74abd4101a8319cacabbc43ad9291eb89","modified":1584673168003},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1584673168003},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1584673167999},{"_id":"themes/next/scripts/filters/locals.js","hash":"edb37a77079cdff2b196d0ff5192519a109486d5","modified":1584673168003},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1584673168003},{"_id":"themes/next/scripts/filters/post.js","hash":"f2f566f2577c554377fd704442399acdd14a8118","modified":1584673168003},{"_id":"themes/next/scripts/helpers/engine.js","hash":"b11626240c1a328c7b6efec83e7dd7adc47bdcbc","modified":1584673168003},{"_id":"themes/next/scripts/helpers/font.js","hash":"32268fb4c59c5b37c1eb1c9582ab630e09e5cc7d","modified":1584673168003},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1584673168003},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"58347687b02f7ab5e64bef07525c8efa97c9e8fb","modified":1584673168003},{"_id":"themes/next/source/css/_colors.styl","hash":"6a5ae9c02d12ee56a5b5222d676ac0a71d7aaa56","modified":1584673168003},{"_id":"themes/next/source/css/_mixins.styl","hash":"b79ff3debd5709397b122292fc7e551ae9d40782","modified":1584673168007},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1584673168007},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1584673167995},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1584673167995},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1584673167995},{"_id":"themes/next/source/images/avatar.png","hash":"84437721f92a789d9a21da0ccdb36d3ab70387ff","modified":1582678628797},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1584673168007},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1584673168007},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1584673168007},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1584673168007},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1584673168003},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1584673168007},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"84437721f92a789d9a21da0ccdb36d3ab70387ff","modified":1582678628797},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1584673168007},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1584673168007},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1584673167995},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1584673168007},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1584673168007},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1584673168007},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1584673168007},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1584673168007},{"_id":"themes/next/source/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1584673168007},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1584673168007},{"_id":"themes/next/source/js/local-search.js","hash":"5d6f4d28b121f42a5d633d3f19a3ea161f9dbb48","modified":1584673168007},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1584673168007},{"_id":"themes/next/source/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1584673168007},{"_id":"themes/next/source/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1584673168007},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1584673168007},{"_id":"themes/next/scripts/tags/button.js","hash":"946dd7beede408d1f090d5e9774d74763828b97c","modified":1584673168003},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1584673168003},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"0f133f27b61e8351cfd0959ba8a1b8551a9a8cc6","modified":1584673168003},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1584673168003},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1584673168003},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1584673168003},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1584673168003},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1584673168003},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1584673168003},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1584673168003},{"_id":"themes/next/source/images/logo.png","hash":"84437721f92a789d9a21da0ccdb36d3ab70387ff","modified":1582678628797},{"_id":"themes/next/source/images/alipay.jpg","hash":"0818a41ee5524b3e0e2e667827544ce0137210cc","modified":1579763920581},{"_id":"source/images/ubuntu中使用pycharm有些快捷键无法使用/setting.png","hash":"d59ac55c50c9da030993c909c8e24e4e221be227","modified":1579656992601},{"_id":"source/images/ubuntu中使用pycharm有些快捷键无法使用/setting2.png","hash":"0fc7415d14cfc76059d92336b645487d7fdb0dd4","modified":1579657045788},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1584673167999},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1584673167999},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1584673167999},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1584673167999},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1584673167999},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1584673167999},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1584673167999},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1584673167999},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1584673167999},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1584673167999},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1584673167999},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1584673167999},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1584673167999},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1584673167999},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1584673167999},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1584673168003},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1584673168003},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1584673167999},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1584673167999},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1584673168003},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1584673167999},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1584673168003},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1584673168003},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1584673168003},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1584673168003},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"5e6d3efbd4e57ebbde23d5aed8cddf203e4ab90c","modified":1584852585350},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1584673168003},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1584673168003},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1584673168003},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1584673168003},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1584673168003},{"_id":"themes/next/source/images/wechatpay.png","hash":"c5511b469f4a68129f7adef41ffcdf5767c00c0d","modified":1579764033073},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1584673168003},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"d3a16f0f343ea70b59e33e4b9cdecae3c8df91cd","modified":1584673167999},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"12aeb9ee0d1d49d347f82a91e6bab568e1b59037","modified":1584673167999},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"30528a8da30994b1ef9355a72b09b2cd85a7c0e9","modified":1584673167999},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"bbf0c8e42491fac70f4f8165224f1d7d92a040d7","modified":1584673167999},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1584673167999},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1584673167999},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"a56e4f6ad95c106f361d354f828d1ef4810b1d76","modified":1584673167999},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1584673167999},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1584673167999},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"12cd9adb0c33adc484201f9e8a4e64ccf3011bae","modified":1584673167999},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1584673167999},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1584673167999},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1584673167999},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1584673168003},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1584673168003},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1584673168003},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1584673168003},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1584673168003},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1584673168003},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1584673168003},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1584673168003},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"9c9399da67b47c1a0ebe195b4513b6f2db126911","modified":1584673167999},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"38597817ede20418e73ae4afc50047ea5088c73e","modified":1584673168007},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1584673168007},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b8d289f300e7cf84cdb440314990b2780ec7dd10","modified":1584673167999},{"_id":"themes/next/source/css/_variables/base.styl","hash":"64fb213996c22135276913ee1dec569a8078200f","modified":1584673168007},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b205d72a56b1827681f0a260c266e0c02065fd08","modified":1584673168003},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1584673168003},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1584673168003},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"ec20ff43845723e0ac2a245047c7a7e5aead6e88","modified":1584673167999},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"9840998e1a1fbcd419c52a1e38fa54a003eac963","modified":1584673168007},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1584673168007},{"_id":"themes/next/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1584673168007},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1584673168007},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1584953616747},{"_id":"themes/next/source/lib/fancybox/LICENSE","hash":"8624bcdae55baeef00cd11d5dfcfa60f68710a02","modified":1584953616747},{"_id":"themes/next/source/lib/fancybox/README.md","hash":"8286582ed7c338fce8bb03566b769fba378bce83","modified":1584953616747},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"d8bf9cb15d9d91c7ad022ba2954b5b4d326f17f7","modified":1584953616747},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1584673168007},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1584673168007},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1584673168007},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1584673168007},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1584673168007},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1584757118749},{"_id":"themes/next/source/lib/pace/README.md","hash":"168f57bb63563b9671d0c4f10c0940e7eec261f0","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","hash":"5e1c97e232b46e48592a8e4983ae5a89e0a7da6a","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1584757118749},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","hash":"f1ff83985c090f3a3236554c5ef69542dcceb049","modified":1584757118749},{"_id":"themes/next/source/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1584844377511},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"186c3bd6ae352d336cdbd0e555ee76a844854c94","modified":1584844377511},{"_id":"themes/next/source/lib/three/README.md","hash":"1e31051ce404eaa86df192b7000442bacd31e2b4","modified":1584844377511},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"ae6584edc0418d68731cab82c1494f26bd77c07d","modified":1584844377511},{"_id":"themes/next/source/lib/three/.gitignore","hash":"e691fe9e685cbd50bcd7e138f4ca3503e7b0eaa4","modified":1584844377511},{"_id":"themes/next/source/lib/three/gulpfile.js","hash":"e0e9e7051d9d82a37c2aba1df396d8b3916323c4","modified":1584844377511},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"329483be97cdda030779da9a6cd1e3eae645cf4f","modified":1584844377511},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1584673168011},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1584673168011},{"_id":"themes/next/source/lib/three/package.json","hash":"b8cd9b9c30b159a4a271e84b0ed11be5a98c2c7c","modified":1584844377511},{"_id":"themes/next/source/lib/three/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1584844377511},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"44fe82eadbdbb2f66adda37ac83ebd0f85876bfc","modified":1584673168003},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"8b9156ae47f4c58cf6cf7505cdd22bae7022481f","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"00d73105cb7b872e12d82d1dacbb15d5c2b58291","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b3bea92eef0e1fe2e7e294dac2184d16b5b8d666","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"3a2ecb6e32374a56f0ef059a6d3e3701339cf47b","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"2e52fa5c8f7de85d411733586405371a20a10c98","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1584673168007},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1584673168003},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"bb392700f04d956bb5f606efb052453efeade53d","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"ccb71d732b12acd02ac26ed6bbda4861d027857d","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"82025c3ad7af12e532e2e81be98deb0a74ff23ac","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1584673168007},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2229a30b712679fd3a592d938ce3ad531f558f4b","modified":1584868386710},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ca00748835f14bd7ff741cc54818216d2262b378","modified":1584868388406},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"4794bd45d5e32ea005c805bcbc65b871e9927d02","modified":1584673168007},{"_id":"themes/next/source/lib/fancybox/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1584953616695},{"_id":"themes/next/source/lib/fancybox/.git/config","hash":"20d66faedf1f14f990d90b16690e4030dbc56c70","modified":1584953616699},{"_id":"themes/next/source/lib/fancybox/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1584953616747},{"_id":"themes/next/source/lib/fancybox/.git/packed-refs","hash":"b6ffcdb23c4f9b3e5576fe104e8596ea71603c84","modified":1584953616695},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1584953616747},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1584953616747},{"_id":"themes/next/source/lib/fancybox/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1584953610055},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1584673168007},{"_id":"themes/next/source/lib/fancybox/.git/index","hash":"43d95df167879e7ab443fc582679e3ec1661f2d7","modified":1584953616751},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1584673168007},{"_id":"themes/next/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1584757118705},{"_id":"themes/next/source/lib/pace/.git/config","hash":"2d2d89ef45678eb4b801dd56299bb7b0216456e9","modified":1584757118709},{"_id":"themes/next/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1584757114753},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1584673168007},{"_id":"themes/next/source/lib/pace/.git/index","hash":"4572272f2b61a778ac92f72c4b8b04383cc9494a","modified":1584757118753},{"_id":"themes/next/source/lib/pace/.git/packed-refs","hash":"7728d474cdaa7943851d42c42eaa718b8afbab97","modified":1584757118705},{"_id":"themes/next/source/lib/pace/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1584757118749},{"_id":"themes/next/source/lib/three/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1584844377447},{"_id":"themes/next/source/lib/three/.git/config","hash":"250a00782b562964ece19407742221ae24e56aac","modified":1584844377447},{"_id":"themes/next/source/lib/three/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1584844372038},{"_id":"themes/next/source/lib/three/.git/packed-refs","hash":"b21d19ed32ed11f076f4e567b4b229669c52381c","modified":1584844377443},{"_id":"themes/next/source/lib/three/.git/index","hash":"c45dc2ae69a3a43e052387eb36945a79275c71b9","modified":1584844377519},{"_id":"themes/next/source/lib/three/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1584844377511},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1584844377511},{"_id":"themes/next/source/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1584844377511},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1584844377511},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1584844377511},{"_id":"themes/next/source/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1584844377511},{"_id":"themes/next/source/lib/three/package-lock.json","hash":"57c9bed50309a639b024f96a53c62e13e1fccca1","modified":1584844377511},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1584953616747},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1584673168011},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1584673168011},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"c1daeb60c23945f745703ac2c3f4bf99d0ea3d95","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"37e89462e614b734e13431d57a7d0e64331ccab6","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"e3ade812b5541eca5b863ad3ff234ea95925bf31","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"5d5c022aa3b2f89c2f2a178212338bb64804dd75","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"887aa8de61ae060150a6312d5cb00d4da065db77","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"796eb941ba0ca03fd5ca6d15a1f6a56afd9aa174","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"251606f9d8e55f7d39c26404cf8d889a3eff9f95","modified":1584708986317},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"555762730f1f31451113e8fdc84ec438ea738d90","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"0ec7bafed7eec36504df7781207ccd1ce4448536","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1584673168003},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1584673168003},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"9b3cce30c58e57b59e45d3f668a71a4129d3a8e4","modified":1584673168007},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1584673168003},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"5ac97054b302fe3ce47822a03a3b56aa3d582005","modified":1584673168007},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1584673168007},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1584673168003},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1584673168003},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1584673168007},{"_id":"themes/next/source/lib/fancybox/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1584953610099},{"_id":"themes/next/source/lib/fancybox/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1584953610111},{"_id":"themes/next/source/lib/fancybox/.git/hooks/fsmonitor-watchman.sample","hash":"55a762007dd48d229ef89fe8d0882256dcbee41a","modified":1584953610091},{"_id":"themes/next/source/lib/fancybox/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1584953610107},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1584953610111},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1584953610111},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1584953610111},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1584953610099},{"_id":"themes/next/source/lib/fancybox/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1584953610099},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1584953610079},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1584953610091},{"_id":"themes/next/source/lib/fancybox/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1584953610111},{"_id":"themes/next/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1584757114769},{"_id":"themes/next/source/lib/fancybox/.git/logs/HEAD","hash":"0bbeb226d2f3ec9a108174d9deec32617b52f354","modified":1584953616699},{"_id":"themes/next/source/lib/fancybox/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1584953610123},{"_id":"themes/next/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1584757114777},{"_id":"themes/next/source/lib/pace/.git/hooks/fsmonitor-watchman.sample","hash":"55a762007dd48d229ef89fe8d0882256dcbee41a","modified":1584757114765},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1584757114777},{"_id":"themes/next/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1584757114769},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1584757114777},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1584757114769},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1584757114777},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1584757114769},{"_id":"themes/next/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1584757114781},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1584757114765},{"_id":"themes/next/source/lib/pace/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1584757114769},{"_id":"themes/next/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1584757114789},{"_id":"themes/next/source/lib/pace/.git/logs/HEAD","hash":"149e43b31d198f5d939d3923f87967d19f41198a","modified":1584757118709},{"_id":"themes/next/source/lib/three/.git/hooks/fsmonitor-watchman.sample","hash":"55a762007dd48d229ef89fe8d0882256dcbee41a","modified":1584844372054},{"_id":"themes/next/source/lib/three/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1584844372070},{"_id":"themes/next/source/lib/three/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1584844372066},{"_id":"themes/next/source/lib/three/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1584844372066},{"_id":"themes/next/source/lib/three/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1584844372070},{"_id":"themes/next/source/lib/three/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1584844372070},{"_id":"themes/next/source/lib/three/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1584844372070},{"_id":"themes/next/source/lib/three/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1584844372066},{"_id":"themes/next/source/lib/three/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1584844372054},{"_id":"themes/next/source/lib/three/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1584844372054},{"_id":"themes/next/source/lib/three/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1584844372070},{"_id":"themes/next/source/lib/three/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1584844372082},{"_id":"themes/next/source/lib/three/.git/logs/HEAD","hash":"01d37402543a52768076fed00263b8495e7ffc16","modified":1584844377447},{"_id":"themes/next/source/lib/three/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1584844372066},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1584953616751},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1584673168011},{"_id":"themes/next/source/lib/fancybox/.git/objects/00/c03f6be011e8878608eec12f68caf42b73f38e","hash":"8516bd35bc8f9223e13de5877778c8d14d49d6db","modified":1584953616635},{"_id":"themes/next/source/lib/fancybox/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1584953613627},{"_id":"themes/next/source/lib/fancybox/.git/objects/16/b01254a56610f4c6b7721c534ed4fc40ae51dd","hash":"88ca5fd99322d3a4067e0711af79f41c078f2ef5","modified":1584953613643},{"_id":"themes/next/source/lib/fancybox/.git/objects/1f/a2c5f332b7e304431213aec21012e53f8781d7","hash":"7632806182aa989d3b7029579d5c03c34b113ee3","modified":1584953613583},{"_id":"themes/next/source/lib/fancybox/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1584953613627},{"_id":"themes/next/source/lib/fancybox/.git/objects/36/9bab09306448a2970d378b59bb21c059edad63","hash":"877e0c15623d0d6ff8f09bb627fc60a489f3c105","modified":1584953613631},{"_id":"themes/next/source/lib/fancybox/.git/objects/19/3567a3107003507fafacd255c349857e417926","hash":"ef5eab75e8c6998cb223edb4eb8a26c4cfc9415c","modified":1584953616515},{"_id":"themes/next/source/lib/fancybox/.git/objects/3d/521bfc64755e348870094e85323dc1b9c96a6b","hash":"e9660fc4f89ecb176b0ab6e4860579c1bfe9f9cb","modified":1584953613627},{"_id":"themes/next/source/lib/fancybox/.git/objects/40/9607f1ba381a64c3ccb8d5440299e8ef868ef8","hash":"a462f7a9efebb70c4051f92c09ccbd9885132c77","modified":1584953616635},{"_id":"themes/next/source/lib/fancybox/.git/objects/47/d427b6c52396bbab53a05f57aaa82b52c805b1","hash":"c5626bbb62f4d1d1e39034e7f44baf4c509410d6","modified":1584953615515},{"_id":"themes/next/source/lib/fancybox/.git/objects/51/cf05811ed7d35e92551db1ba5a6e267ce781a5","hash":"99c009035ea86e3876b586577677d4d62ae12379","modified":1584953613627},{"_id":"themes/next/source/lib/fancybox/.git/objects/53/ceaabe0f8677333c5be196778b3e40840a1869","hash":"7bc1c1c42059d5402335b5293bfb5e54bee22557","modified":1584953613627},{"_id":"themes/next/source/lib/fancybox/.git/objects/54/0a7b36ee26decfc3f0f34bf73bc85c48899128","hash":"2e5447a9dd879d71368e9dddd34d93849d00b934","modified":1584953616635},{"_id":"themes/next/source/lib/fancybox/.git/objects/63/c555caede30ab06d6dba16644a827e9574c8cb","hash":"846603220288272ad5d35ebdc3c917cc4adce424","modified":1584953613583},{"_id":"themes/next/source/lib/fancybox/.git/objects/64/c47e893a0fef71c8c0930975ef114d9812da56","hash":"eaad75fab15724f9c2b069fc1ce9b8216be149d7","modified":1584953613631},{"_id":"themes/next/source/lib/fancybox/.git/objects/7b/15d3cb03fda86241f8b2b335f04e9b9de0e1c4","hash":"d1fe3bd82c90f7d93874798a8ee8ebf1391d7207","modified":1584953616515},{"_id":"themes/next/source/lib/fancybox/.git/objects/7c/00ef8195b73793d477d22e723ecdac9553ebf3","hash":"fd8c4fd143b32fb3e86367f123feb7c35b305262","modified":1584953615507},{"_id":"themes/next/source/lib/fancybox/.git/objects/7c/c60b295fa2dcb82537a63792c9b3b3c2e74c33","hash":"b2dc23c71b13726c391aaefaa5312227a9b6ab7e","modified":1584953613647},{"_id":"themes/next/source/lib/fancybox/.git/objects/80/6b27034bd69d563e4243c2f12b43c7064b32dd","hash":"b7d3e8020767ae60a2029da8eccb0068623dc618","modified":1584953615515},{"_id":"themes/next/source/lib/fancybox/.git/objects/89/9d7a75b543fbed2a785f67d995bc77e06eb2e9","hash":"5651e2b80703225f642625c0fb2646543096d2cf","modified":1584953613583},{"_id":"themes/next/source/lib/fancybox/.git/objects/94/a9ed024d3859793618152ea559a168bbcbb5e2","hash":"1c2d080a86f03eb960e112a94910a5115addf57a","modified":1584953613631},{"_id":"themes/next/source/lib/fancybox/.git/objects/9b/fe9361836240600c1bcc3cab9d42b35e731fad","hash":"3d38ffc7ac1ae85224691ef15d7f32e40c40b3a2","modified":1584953613643},{"_id":"themes/next/source/lib/fancybox/.git/objects/78/068b93f813cecbbd50c8247de547035009d512","hash":"4bc2bee779bd7e3cca13ee34801cf1e12585e5ae","modified":1584953613631},{"_id":"themes/next/source/lib/fancybox/.git/objects/ad/569256343419017e8832a38faaa1c786716a1d","hash":"0538e4abd112b0a843035f28a511edabbe73f2ce","modified":1584953613583},{"_id":"themes/next/source/lib/fancybox/.git/objects/b3/b3098638624b56be968573e2dab1684f8a7f06","hash":"6fa11a2d904dff2b8f4ae1bd88bdbb66736438a1","modified":1584953614927},{"_id":"themes/next/source/lib/fancybox/.git/objects/b6/c361c8dcf2f5a7572e81b956272e4cfe1198c1","hash":"3e160c605dbd94dcef2b9692a4a5a82bddb76264","modified":1584953616639},{"_id":"themes/next/source/lib/fancybox/.git/objects/bd/e1f741357b44b49290d43fdd193125202fef81","hash":"9beefc75cc0c37d04e98dd13b51ad85df40e77b9","modified":1584953613627},{"_id":"themes/next/source/lib/fancybox/.git/objects/c2/fc5def1b6c38369e5e8b849adb956bd79b549e","hash":"27f03b9616e615b2724bac0fa4507d152697f3f1","modified":1584953613583},{"_id":"themes/next/source/lib/fancybox/.git/objects/ce/c0e316bee5d497ee834dbd29e0c5aad8331052","hash":"3d769fa5f55014841d10bb3bdf1b9725c43e9043","modified":1584953616635},{"_id":"themes/next/source/lib/fancybox/.git/objects/d5/d10f6be62acc10fec6e11e8dc4affe1184a17b","hash":"cec51b2539349d2aba1ec5d11eaded3815eccdc5","modified":1584953614931},{"_id":"themes/next/source/lib/fancybox/.git/objects/f6/bb280a0b2c68256a8e906b35c6976c80c1b3be","hash":"5daaee11fc384fbe0f02c7123036c954ee9a73fd","modified":1584953613627},{"_id":"themes/next/source/lib/fancybox/.git/refs/heads/master","hash":"0b56bdb897316a3b4ec6c120673249f65f4cb420","modified":1584953616699},{"_id":"themes/next/source/lib/fancybox/.git/objects/aa/654e17af8c354994f706c4e33bba6b5b70caeb","hash":"22b1bdf0b0974bf5e9022953ac26066056c235ff","modified":1584953616635},{"_id":"themes/next/source/lib/fancybox/.git/objects/92/4369c371444afb18fb86309229f5b4c24c6cf4","hash":"9eb6fa8ff9081e6650f6bee350d21567df105737","modified":1584953616515},{"_id":"themes/next/source/lib/fancybox/.git/objects/ac/97c2cc9f61c52753abe4174a4a74b2064e5af0","hash":"272e74036b0612de83d9d0aa9604d3edf888b249","modified":1584953616515},{"_id":"themes/next/source/lib/pace/.git/objects/1c/159365320ef5dde63906912f3df067376b40d0","hash":"1dd6b7373c3f9c67e34aa319c9c08fd0f667156a","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/00/13175fe71888324d9142744034e8296501174a","hash":"0ad0e50f7fe91fe14491924aa4b1e2e8f060a5cd","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/08/38a9623fabb4014d7ed7c0fa4ff8a5bc5e697e","hash":"aeee9d11c3a4c1dec1ad8414dca14e5aa9ca2b7d","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/23/4f9b3e93f06a85cb2ec01acc872ccdc2bec7cb","hash":"63f8640eceff35a80175a102fcbd8789e690cfaa","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/3e/dcd352d2a1a60dbb6a43e7e9f00bab8b55791a","hash":"725bf5094855cd943dd1cd351906fb1ebec1d861","modified":1584757118645},{"_id":"themes/next/source/lib/pace/.git/objects/35/a749d823ad0aae6111a76dc501a1170478f376","hash":"e757129fb6bca3170b62b05f3e850e4b55f3ae88","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/4d/fbb499a4f7b2f26a535c335cd66c966ff8b261","hash":"14e4cdcc137045c7efed32f796273d40c9fcef87","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/49/0db22b657dd64430d003fe2831905a54858b22","hash":"43694656c4c331cfa3667afca630bd486ac0d0fe","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/49/234ebf40b265bb9664d22bc391237ff856a3df","hash":"b527eb3cde1e78771ff68c5f633a3cf91816e274","modified":1584757118653},{"_id":"themes/next/source/lib/pace/.git/objects/41/28e69301ad36a283c0fc523f3aef89644d2467","hash":"d8b985cf431fbdc5b4fa3be89e27db7a3437c920","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/5f/2920b23993e6476c3edc77f76eba566e74dd7e","hash":"122d8ac05247282340317587435273e6f3c5a188","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/53/3d55db0342c2b011ac05703c3b42e88a25c1ed","hash":"c48454760d2e04602a5499188b33d38839c58aee","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/60/0378418401f2b0e7c58407a7bbc5a5196cfa51","hash":"20489d796247dda758599f40cbfcf14d194ef64a","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/60/8cf35556105f51783ede3fa1e6c2102e8945de","hash":"2c71f7a2ff047119ee898a8edec216238710b89b","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/61/fcbe3a99ad371eacdf3a3703883f8e95e072c8","hash":"480b60d684f9a077ade5dda0acfc75bcd9597aff","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/68/54b8cf544e974998061fb08ea2bd96b561ed68","hash":"1aa0706b6495a5ebd70c3822ac3533df41940fb7","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/6a/fa2f52022b00caac3817898d4338ce4d99aa45","hash":"1a6e249ff197293bc3733ddb7eb99d82a21b9342","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/7e/7e5cf8a2a18caf4e0262d1656dea658374d5ae","hash":"47eb39060193e0032e3223b4dfc1a6a55f6612fd","modified":1584757118653},{"_id":"themes/next/source/lib/pace/.git/objects/82/8dcba3c8a21de08d1eb38f2eee453b51543188","hash":"629aad2ee2e564790e78cd46e99ad396544960ab","modified":1584757118645},{"_id":"themes/next/source/lib/pace/.git/objects/86/ab4cb05d5132451e71dc4ecf6ef663f7404126","hash":"53f157552aa57d405ce6ab58c424bb948c2820d8","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/27/8da13dccb38df6bb34360d4919ee2ba81ea6c7","hash":"c5618315849061059ddd6cbea8e11252c561cf48","modified":1584757118653},{"_id":"themes/next/source/lib/pace/.git/objects/9b/3058068409f2282607ebb91717d7a6a1406230","hash":"651c5857021e11dc397df86dbe0f01e6c7dc7f16","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/8b/b4535a79cc15127f8906b24c4e0bb4a38a5947","hash":"9c2d65a63f18929b09f3592dda064f24309ff98b","modified":1584757118645},{"_id":"themes/next/source/lib/pace/.git/objects/a6/dbd9c99e726f621e2bdcd3c6fe2795a5d4272d","hash":"25350dd31f504af7206610ced355d162aabda8dd","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/84/a17ac7b4fe9cea559de91f00af88f810bff7f1","hash":"b41b6d3cbccd75b711f0523bba1c26bf19b0a862","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/97/1e8a1f2ad6d45f693980c106af0aead9d1c215","hash":"e45f0963920a53a57f6b53d178e5b05a8e315189","modified":1584757118641},{"_id":"themes/next/source/lib/pace/.git/objects/c0/05c71f1a000d8187df58083d215c962d7f5505","hash":"dffd212ca2ec705233fabe82a6f483d6be4b151d","modified":1584757118645},{"_id":"themes/next/source/lib/pace/.git/objects/aa/813c5a6398600e01b740696cd889eb3becad84","hash":"c62a1513ca820dc59fe1cd6d9ec16c92e0e2fbf0","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/d4/7aaf8effab41aa414596c56dff4d35ff8da1f5","hash":"33e758f44ad48eb1540363a06c31bed1ed929c60","modified":1584757118653},{"_id":"themes/next/source/lib/pace/.git/objects/de/79ab6539ac3702aaac64b879d95e6575f4eefa","hash":"0046fefd52ed4679e0fee757cc91ced94e3ddc12","modified":1584757118649},{"_id":"themes/next/source/lib/pace/.git/objects/da/79363b808519d44a7eda67d7bc81e1587a06e8","hash":"0dc5dc27991da9a09d705e488bc3f1fe5a4d4728","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/e8/83088ed2cfe69a983e9e277a6b54b7de226344","hash":"2386487a5933380ac3305ea6b5744d75bdd07292","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/f3/0e0a99bb016267bde55537dd47b3657ae59544","hash":"8bf0bc17a6111b6a82981073133f33cc8e815c41","modified":1584757118645},{"_id":"themes/next/source/lib/pace/.git/objects/db/d45db3a1d6c09fdf30fc1f0bdc2c6fab5a0680","hash":"5c0bc5c141068651fcb47ef549f556d67153eecf","modified":1584757118637},{"_id":"themes/next/source/lib/pace/.git/objects/ec/6708dc18a5dd312a6735d4d09eddbdb76e75c2","hash":"66e03a78b2f1d36feb9f9347dd5e68e344c3ee68","modified":1584757118653},{"_id":"themes/next/source/lib/three/.git/objects/03/c40a4b50e21c63a0e27b1fbcd014168ae3f6da","hash":"987ca2a1169e875a5ac73e8a1a906b9ae88d4d22","modified":1584844375579},{"_id":"themes/next/source/lib/three/.git/objects/03/eb19e6b3194a820c462bc63177b6fc2bda245f","hash":"0be88820832fa6ea30d56905e98b27798805dc92","modified":1584844375839},{"_id":"themes/next/source/lib/three/.git/objects/0b/de10292fcd5dd4b66d1bf60f62ea7d7a30b310","hash":"37710386189fe435ea20541a69c1a9b833b5f50b","modified":1584844375843},{"_id":"themes/next/source/lib/three/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/09/3d290f60c3b467d503633531d7ce7cdd42dd75","hash":"ab09bc8bfc9079e408dc6facc1bfd9aa5d6bdef9","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/15/e42465bbd9589d2112d7fe3328bd7f85c6b24f","hash":"c28f5e24b9b15ecfddd666711c6d6ef57317cb29","modified":1584844377007},{"_id":"themes/next/source/lib/three/.git/objects/19/65ef0ba0e2c1ad938cffdcbebed63048751ac6","hash":"75921c60b65a5606a85ab5cec185f430d844048d","modified":1584844377351},{"_id":"themes/next/source/lib/three/.git/objects/1f/0b95a965630f47a7264fe9e9456ed7da36c2aa","hash":"6e98b6d7740bf53074339ce383089320fe1962b9","modified":1584844376891},{"_id":"themes/next/source/lib/three/.git/objects/1b/3d1cd16f3e6ce99ea92c7e9c0b78ee30a8c346","hash":"16569e1c4912fd762f32b13de839d05b9c319e54","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/1a/f9d30697fd2194a4132a3a6647722be2eb75dc","hash":"0f686b4e26b1e751509ded8a2db697b1d7938004","modified":1584844375307},{"_id":"themes/next/source/lib/three/.git/objects/0e/f76c758387d59ca0221cd50564e9edf7080c99","hash":"874d6d28ce21ce2873016183dd9e22b91f71c750","modified":1584844377183},{"_id":"themes/next/source/lib/three/.git/objects/21/cbdd0d76bb18019bcb47aeec029fb13e211b09","hash":"c4466a47cecee06641b74dca59ed92665c24a5d7","modified":1584844377351},{"_id":"themes/next/source/lib/three/.git/objects/21/77c1416c8e91ed918b6d3cf7f333d99d659a24","hash":"7330016805a652c2153bfcfbdd4c3c50e5b5a642","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/34/cbb2a80da03e4d233dcfa3f11fed64894b2de5","hash":"ddf0c1fdb72ed14c50b1d1718a122f5f2a38a3ed","modified":1584844377347},{"_id":"themes/next/source/lib/three/.git/objects/29/4f11136ee13277ee96ec3bb56d810f43655298","hash":"a294c3770aa5e7ed386075202f5b88048e1d170d","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/3a/ae52073909b7ccdbd43538ee6c814691935c57","hash":"652619b1d76f267c1646b6167de80f58a520525e","modified":1584844377351},{"_id":"themes/next/source/lib/three/.git/objects/3a/4c8581b3aa0d4f9192de158bd4223a90d646b5","hash":"a64efe9f8e2db0ff3cfb7b5e71fedf229ce290fd","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/36/3db3ce197d25b8c64db663aa9000a181511461","hash":"f87bc2ce87e37d0ee60eceef8be89dae4c52e01d","modified":1584844375587},{"_id":"themes/next/source/lib/three/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/3c/6fef4314903036253335d4550346f6b927c721","hash":"1ee4e7d110363dc5e2676b675c7f7030731cf3a5","modified":1584844376971},{"_id":"themes/next/source/lib/three/.git/objects/3e/4151e56ef50d7ff46a1ce73156c35ac6f1224d","hash":"a47d2e1895903aa7e1b51d35731f212ffc6a1718","modified":1584844377007},{"_id":"themes/next/source/lib/three/.git/objects/3a/cef7449b991ee78bb5b7f2f121996b9ec9bba4","hash":"d9165d5939be17750b9edad5d0fc32029e4a23d6","modified":1584844375843},{"_id":"themes/next/source/lib/three/.git/objects/42/d67e32b0d5f676f7462ad5b013f4eb8cad2486","hash":"fb1c4d377401f2145cc721d96fdf40d89ac23434","modified":1584844377343},{"_id":"themes/next/source/lib/three/.git/objects/4f/f48fd861ac49dd98ce52052bf6214f0a91facf","hash":"ae4d7b9a38e8913c055d37a6f129378d089bfd65","modified":1584844377011},{"_id":"themes/next/source/lib/three/.git/objects/3f/f2616b188ab71e1abf2029d7d55834c5643fc5","hash":"65bbc360ee3cc66fba71b9fb0baa3cff744327b9","modified":1584844375579},{"_id":"themes/next/source/lib/three/.git/objects/53/c865f8ff0aaa7ae2c8da7324dce73756ffe7c0","hash":"2d1c2dcfa342f46910a5698023b2c208bf3336e0","modified":1584844377183},{"_id":"themes/next/source/lib/three/.git/objects/52/71f18c203d24b27ec7bd977c2d5c61300cea1a","hash":"cdae53ba376df246585a2f44a86d0c7da98bca1f","modified":1584844376959},{"_id":"themes/next/source/lib/three/.git/objects/67/6b9f6189356d0201fd72dd6f98db19628a2ff5","hash":"250795ea0af79524945e66b28f233eb8bd9ee7dd","modified":1584844376955},{"_id":"themes/next/source/lib/three/.git/objects/64/d845d3aed3dce9eab9de39793f1c4d1d6e0deb","hash":"1c7346386e8c3d8830bf36bff7011976ba326b3e","modified":1584844377187},{"_id":"themes/next/source/lib/three/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/6b/128053933889f264c239abe0d381523daa8fa5","hash":"23df1e6daed83528bc2f36980678ecc31e17f09e","modified":1584844375595},{"_id":"themes/next/source/lib/three/.git/objects/6e/a4473e91dc2dbc452ff446e7cb04cb2ff16da0","hash":"710066cce498e372a932ff272d3d0eb4345fe3cf","modified":1584844375307},{"_id":"themes/next/source/lib/three/.git/objects/6f/f9f6347d48d4bc18b07a813f9140d7287df7aa","hash":"46232e003a90f98c78af21c4898ab37c66fda385","modified":1584844377011},{"_id":"themes/next/source/lib/three/.git/objects/70/0960a662785b70b5c72909810794e1c18e9891","hash":"ea3c3330dd0a213a3cebdc42ee57d43fb8f9813c","modified":1584844376899},{"_id":"themes/next/source/lib/three/.git/objects/7d/2bcbb026e4a38ab45317d8b78bfed70ba25c51","hash":"05394b260c2c58ee38b7224bb4ecb52df1e7f354","modified":1584844377011},{"_id":"themes/next/source/lib/three/.git/objects/79/ae5f64ea4be7e1a108b2f1fc8afbca7bfa1fba","hash":"4e28517d80599b1a6051b1d3f657654aca6333b9","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/7b/a927a3390f9a6345039cdb5bc54c6a54297f69","hash":"0d10f821d9e61a27c3f9d9e03e923265693d68ab","modified":1584844377347},{"_id":"themes/next/source/lib/three/.git/objects/7d/d7c1e8f79dc9a9a99e290147528d7a47d46830","hash":"c2104c89bcf686b243061b456ddc86d916b84360","modified":1584844375843},{"_id":"themes/next/source/lib/pace/.git/refs/heads/master","hash":"22684435265b2bb504024b34b80ffbd6786a2411","modified":1584757118709},{"_id":"themes/next/source/lib/three/.git/objects/7f/6a7ddb8a04644dc980d83c9878b4621acf82f5","hash":"c517caf5d47c9f1eba2ced6800dab03e2e29a130","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/80/5e5d92b903742c45e359b26a06cf86376301d8","hash":"6d39f5d10ed1e3acaaef5ac5999945b65ab12b88","modified":1584844376891},{"_id":"themes/next/source/lib/three/.git/objects/87/782e1008d1f88a9cb63d59407b1cb9e47b0861","hash":"0af5c5e17b27d8114fddd53d7cae8bb3284ae9af","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/89/b7ae569312ae577534d7b58647232fb48bfb08","hash":"a265c0a7e24267bd82d11a48f091d2241edc0080","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/82/69b6fd29a514f9bd746497b298176228bd4061","hash":"cf527c08b5d88d72939a61446d128eba2fb94be2","modified":1584844376927},{"_id":"themes/next/source/lib/three/.git/objects/81/d7d11db23df8681d1a8242fb27252a9d2d7062","hash":"a294b374bb129cc8aaec9c01bf1df1c5addafe9d","modified":1584844377007},{"_id":"themes/next/source/lib/three/.git/objects/8e/3ea1a067348d2a9c066fbf201663b462a3ed6c","hash":"f3168176590ac08570ef75b73ecae2b4a455d753","modified":1584844375583},{"_id":"themes/next/source/lib/three/.git/objects/90/e94cbdbfd33fea8606d447d01011ff657478f1","hash":"df922aee3bc7eb3266134797efb6f888743c6a12","modified":1584844377191},{"_id":"themes/next/source/lib/three/.git/objects/8e/985e4c70f87248ecc33d93410d80d1632c552f","hash":"a1d2084dd43e026f1b93027221629f5cbb135c88","modified":1584844377011},{"_id":"themes/next/source/lib/three/.git/objects/8a/2159d7a0c70d394071e8dcc79502d5cd1fc5e4","hash":"58ff19b7a9a65c9e562b9e1c7ee0ed3ac005b15d","modified":1584844376971},{"_id":"themes/next/source/lib/three/.git/objects/94/1060002b98395a31cb47a33166f5568a20d4b5","hash":"c345981cd6097743cbb6f44d61b33ed37b110b31","modified":1584844377007},{"_id":"themes/next/source/lib/three/.git/objects/a9/27aca23c7f27f5d1ebf2c4baea3aa5d8676143","hash":"dc3e5c853a502fbe7ea3e35c2f7a2bf94318ade4","modified":1584844375307},{"_id":"themes/next/source/lib/three/.git/objects/ae/8fa980e909988af2ebd9423658213d2e7e6bba","hash":"9978e4f223de97e23a047986bf21cbf48663a150","modified":1584844375307},{"_id":"themes/next/source/lib/three/.git/objects/a4/6866ca175f7c27daaf6b39c94d930bc27d4ce5","hash":"fc416f7f3f62c338bda28bb56bfa6f8fb49421ff","modified":1584844376891},{"_id":"themes/next/source/lib/three/.git/objects/c3/e49d5369de034ff0788d11519bd9150b67ce74","hash":"256a3f0a7054a3e2cde1fc58f027565c87ad3d1b","modified":1584844377011},{"_id":"themes/next/source/lib/three/.git/objects/9d/b082c6081a7d8b8b752bc35ebcba85073f5fac","hash":"c240b76ccdb8552d6d4c75e55d5c4c93807756af","modified":1584844377007},{"_id":"themes/next/source/lib/three/.git/objects/b0/2d36d33210bc68d3e6451c663eb567ebc5721c","hash":"8d3bac2fa021a8f4609a134167edb84fd46254b2","modified":1584844375583},{"_id":"themes/next/source/lib/three/.git/objects/ce/175226253f7f31da632b93ab6560debab1bf6d","hash":"55c41b0948cb31fad3a52ab7ac91ba93e6c22751","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/d0/32ce3fe05be57b72cc925f86149497229cda13","hash":"59e5036e95b496852ad3b918eac2e4b28a5951f2","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/d8/8d5765694f92039daac0f944405d4cf61a0d13","hash":"70d2b236fcd955aa4fa95efc2e18c98919003ec6","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/d2/a00ca1067b93b81dae8ea7d0c9838e935595e8","hash":"4b1ecd5271cdf94c10c2e413c7378adb22e940bb","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/d9/90e2654ec49768cd50d630db99ee00bee2b13c","hash":"6c5cc041391cb5a6b3e0f2f15f30bd62735ac7fa","modified":1584844375843},{"_id":"themes/next/source/lib/three/.git/objects/db/fc5bb53f0ee561f55b18c9796e1e03a9781153","hash":"3cda0d28ce918db5b722db817e69ea522a4db9ce","modified":1584844377007},{"_id":"themes/next/source/lib/three/.git/objects/d9/0026fb76d55bba50ee4a221c887a0f1a8e8102","hash":"ac0ac5756be4b24f2249be101665ff29ed93d1f9","modified":1584844376971},{"_id":"themes/next/source/lib/three/.git/objects/df/932438893faefc6b9f5ba9191913dfeedc2a1c","hash":"ac939ae39ab04abc99c0caaef00849585ff4886d","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/e5/6e96bd99ebe3f0dc8f02c979703c3666f6dd9e","hash":"b971fcaae8424ea1b507379afdcdff74359a1525","modified":1584844377003},{"_id":"themes/next/source/lib/three/.git/objects/e0/52c7542703df4969a95779bd4dc58b568bcb5e","hash":"b1ccf1650011f74939f07233834bdff21baf4952","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/objects/e0/ced7e71c43a729f9653b1c4434b95724fc02ed","hash":"98c61b57d8e5e03cf30d402cfcb840c6e610aaa6","modified":1584844376967},{"_id":"themes/next/source/lib/three/.git/objects/ea/7a1bbd08eb930b5f777ec025493ae0c8cb12d4","hash":"3c428fd65f982afbabbf683163bcc88a4eb4cda0","modified":1584844375307},{"_id":"themes/next/source/lib/three/.git/objects/ec/00e107b97a0b7a9850219894bf4e533c68bf87","hash":"5b7f94788c3c19c8a0f73f1b712d5d79e0236668","modified":1584844375843},{"_id":"themes/next/source/lib/three/.git/objects/f4/5d8f110c3034162a1091dafe4b03d2e56b323e","hash":"963dad8248030a8d7b185f4726e40a65a0583c0e","modified":1584844375843},{"_id":"themes/next/source/lib/three/.git/objects/fa/be1d6949c228188d07df0f4b99b217c7b7f92e","hash":"de53b76740aff0953bcd79853d8addfabfc29f95","modified":1584844375311},{"_id":"themes/next/source/lib/three/.git/refs/heads/master","hash":"34eb0c5e0b55679faf9d23c848367ac5ba51e568","modified":1584844377447},{"_id":"themes/next/source/lib/three/.git/objects/fe/47fa8f2d9edef52a8ea859537c9286363ee168","hash":"dfaa57c592a229b220a7241bbd0567ec38f4e578","modified":1584844375583},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/heads/master","hash":"0bbeb226d2f3ec9a108174d9deec32617b52f354","modified":1584953616699},{"_id":"themes/next/source/lib/fancybox/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1584953616695},{"_id":"themes/next/source/lib/pace/.git/logs/refs/heads/master","hash":"149e43b31d198f5d939d3923f87967d19f41198a","modified":1584757118709},{"_id":"themes/next/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1584757118705},{"_id":"themes/next/source/lib/three/.git/logs/refs/heads/master","hash":"01d37402543a52768076fed00263b8495e7ffc16","modified":1584844377447},{"_id":"themes/next/source/lib/three/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1584844377447},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/remotes/origin/HEAD","hash":"0bbeb226d2f3ec9a108174d9deec32617b52f354","modified":1584953616695},{"_id":"themes/next/source/lib/three/.git/objects/76/310b5a7e93e66e7d98aaab2960d6354b2288c5","hash":"84de52193b47c83d01eb8800b063ccd83ad42cf9","modified":1584844376791},{"_id":"themes/next/source/lib/three/.git/logs/refs/remotes/origin/HEAD","hash":"01d37402543a52768076fed00263b8495e7ffc16","modified":1584844377447},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1584844377519},{"_id":"themes/next/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"149e43b31d198f5d939d3923f87967d19f41198a","modified":1584757118705},{"_id":"public/baidu_urls.txt","hash":"5c7f8b04fd822a8f70d9f33ed7038680ce09a2bf","modified":1584956151730},{"_id":"public/atom.xml","hash":"d572b321cd0407e8ca066e155b7730730eb245ae","modified":1584956151730},{"_id":"public/search.xml","hash":"1aa2a8bf377845031120d89bb21eacc87b6a4668","modified":1584956151730},{"_id":"public/archives/2017/index.html","hash":"e5f5a4e2b74b10f66b90ec2d532771108232c304","modified":1584956151730},{"_id":"public/archives/2017/03/index.html","hash":"53e85efb6c914c84a6cff5d3cf8971699351ff91","modified":1584956151730},{"_id":"public/tags/Hexo/index.html","hash":"da6f154d612d4c0b6ce9036f56ba9e6c6577f98a","modified":1584956151730},{"_id":"public/tags/Blog/index.html","hash":"bdf88ea8a6d770fbb57a3dc67d4468426f9c2a00","modified":1584956151730},{"_id":"public/tags/图床/index.html","hash":"4c89edea42ec51bf60640e253e2ca9829bb6c503","modified":1584956151730},{"_id":"public/tags/typroa/index.html","hash":"d68911b034bac4ad8076855fed80d12f33a27fcf","modified":1584956151730},{"_id":"public/tags/picgo/index.html","hash":"defb041df22e94eae3eee301cf16a3355bb3bcd8","modified":1584956151730},{"_id":"public/tags/github-图床/index.html","hash":"8e172895620cee784ef000a2acc43ef1c46fd6e0","modified":1584956151730},{"_id":"public/tags/坚果云/index.html","hash":"192e927df5b38eb6c8dc7f5af5922954668ac72d","modified":1584956151730},{"_id":"public/tags/云笔记/index.html","hash":"3f1948126489f025f93983ca8d2c87450c81037b","modified":1584956151730},{"_id":"public/tags/SSH/index.html","hash":"0f841a0476b51b7994146353e3da084862b8eadd","modified":1584956151730},{"_id":"public/tags/oled/index.html","hash":"8d0631a6a6c1861b107a9b11655cfa45c76b1d7e","modified":1584956151730},{"_id":"public/tags/音乐闹钟/index.html","hash":"88af00c89299dd0bce7ef3d07a4ca8e5ac4296b9","modified":1584956151730},{"_id":"public/tags/H5-cpu/index.html","hash":"a7da558e70251165034120dcda8838b400c62883","modified":1584956151730},{"_id":"public/tags/压力测试/index.html","hash":"ec349639299722ed15d322e8ade439ca82d89c7a","modified":1584956151730},{"_id":"public/tags/unixbench/index.html","hash":"5df0baa732ef7d9e4a427b66b7c214c106355b85","modified":1584956151730},{"_id":"public/tags/git/index.html","hash":"40fea76626b9df20af00bae6deaf3e4ef2b2bfa5","modified":1584956151730},{"_id":"public/tags/github/index.html","hash":"0c4a5e83ad1bca72ac46a33ed6ec9e2b2307d35e","modified":1584956151730},{"_id":"public/tags/oh-my-zsh/index.html","hash":"4119042aacb22e34f3e1ea4691b9fdc30ef8287e","modified":1584956151730},{"_id":"public/tags/pcharm/index.html","hash":"159455fa10b660eb3bec2e37063c6313de1eacf3","modified":1584956151730},{"_id":"public/tags/hexo/index.html","hash":"5ef582bf098968f4591b0051561fc374bbce5e89","modified":1584956151730},{"_id":"public/tags/gitalk/index.html","hash":"cf944c694577ff64f324dbb8afc59be6a4901633","modified":1584956151730},{"_id":"public/tags/博客托管/index.html","hash":"40ee2e4f3874e1d7b0e71dc68da49ee813bd300a","modified":1584956151730},{"_id":"public/tags/win10/index.html","hash":"b99e8b3b551bab6de537a562627dd94942cc8e16","modified":1584956151730},{"_id":"public/tags/系统重装/index.html","hash":"f982d4a1ea6e7a52095d9c3311f73f20b7f6933f","modified":1584956151730},{"_id":"public/tags/投屏/index.html","hash":"58d93a96f29dd8b9ec3f398f6a0aebbb18d449c1","modified":1584956151730},{"_id":"public/tags/工具/index.html","hash":"1d008238037cff75a7352c4078af24e4b78df5b1","modified":1584956151730},{"_id":"public/tags/写论文/index.html","hash":"ec8ed2786bc89db7b7acd9c83b224171b77363f6","modified":1584956151730},{"_id":"public/about/index.html","hash":"e4ee739f143f780afff138e1838af3766e73f6ec","modified":1584956151730},{"_id":"public/archives/index.html","hash":"86ab8597218d50a87e4c2add9036d1947aac343f","modified":1584956151730},{"_id":"public/categories/index.html","hash":"372fb2335c06e1074ac5b690587dd33eb6865826","modified":1584956151730},{"_id":"public/tags/index.html","hash":"0045075c740dd2a9a86ad62dbcbab3bc00c8e650","modified":1584956151730},{"_id":"public/2020/03/18/快速重装win10系统/index.html","hash":"666c977c3215ac8470fad543114abff8c79de7d4","modified":1584956151730},{"_id":"public/2020/03/15/论文写作小工具推荐/index.html","hash":"28589bd56a5900794385a7dd403769acac4483a0","modified":1584956151730},{"_id":"public/2020/03/12/nanopi性能测试UnixBench/index.html","hash":"9333ba6983957b953d3e9e8b219803ec7a3e8938","modified":1584956151730},{"_id":"public/2020/03/10/nanopi安装oh_my_zsh/index.html","hash":"6cdb262fd6e2cedcee26bccd8ab6e255231f85fa","modified":1584956151730},{"_id":"public/2020/03/04/nanopi压力测试和散热能力/index.html","hash":"47132cd108c9e62f1288b309c0f0fd43385c0b8d","modified":1584956151730},{"_id":"public/2020/03/01/将静态博客托管在nanopi上/index.html","hash":"1ae5672784e4ba8cdf049978ec650d9f235f8a60","modified":1584956151730},{"_id":"public/2020/03/01/markedown云笔记，typora+坚果云+picgo+github图床+阿里云图床/index.html","hash":"c10152699ac1dd5aa3e8a37099e9ee5e6ab33d99","modified":1584956151730},{"_id":"public/2020/02/28/nanopi-neo2-black-防烧屏设置/index.html","hash":"c2428b6990a7939e61fdc35af32de522ce341b96","modified":1584956151730},{"_id":"public/2020/02/28/nanopi-neo2-black-音乐闹钟/index.html","hash":"b3d4aa956ab7201c66fe3007badc8b5b7c4e6b3d","modified":1584956151730},{"_id":"public/2020/02/27/nanopi-neo2-black-上电使用/index.html","hash":"6b33cceaf5162c1a141f8de996212eec60022c5b","modified":1584956151730},{"_id":"public/2020/02/27/ubuntu下将文件备份到github/index.html","hash":"544cbf1c20fbffd605827bfd93a79e212e2008e4","modified":1584956151730},{"_id":"public/2020/02/27/为使用hexo搭建的博客加入评论系统gitalk/index.html","hash":"8c6800d2ff362e2476ab2a575a72df7c4d7cabb3","modified":1584956151730},{"_id":"public/2020/02/27/手机无线投屏win10/index.html","hash":"9a62b5c739c18763d93651ad3935fd0447a1890b","modified":1584956151730},{"_id":"public/2020/02/27/ubuntu中使用pycharm有些快捷键无法使用/index.html","hash":"7c26a5f420ff1a519afa44cc00014546d605bf5c","modified":1584956151730},{"_id":"public/2017/03/18/hexo-theme-beantech/index.html","hash":"6dbcb183357843a2400fbc477bbadf8b26d5129c","modified":1584956151730},{"_id":"public/archives/archives/2/index.html","hash":"ec95afa91a95643016cce220c598bdbe4c18c9a9","modified":1584956151730},{"_id":"public/archives/2020/index.html","hash":"c664d8e14bd063580c866b1a767f048b6dd7978e","modified":1584956151730},{"_id":"public/archives/2020/archives/2/index.html","hash":"832d66d5a824c22ab0c232214bc3915e1d68c281","modified":1584956151730},{"_id":"public/archives/2020/02/index.html","hash":"9d76b49e3d92b66f762c628276538f1cd61212e5","modified":1584956151730},{"_id":"public/archives/2020/03/index.html","hash":"7a063783784b151b2be3a9a586cbb5d39684452d","modified":1584956151730},{"_id":"public/categories/经验分享/index.html","hash":"65c53340fb32f56e70215c31786603fbe8a9dce8","modified":1584956151730},{"_id":"public/categories/nanopi/index.html","hash":"1ff4ddba78e22d30a0c02a68c0710cb6c19f469f","modified":1584956151730},{"_id":"public/index.html","hash":"d9bb29f8e40da7632bde2c69a82f807a7fb885f1","modified":1584956151730},{"_id":"public/archives/2/index.html","hash":"e50775309af8958d495967479ff00c6bef031cf6","modified":1584956151730},{"_id":"public/tags/nanopi/index.html","hash":"43ec35f449646bc3e28657242370884b3afc0f30","modified":1584956151730},{"_id":"public/tags/ubuntu/index.html","hash":"5c8e9bbbb10db5bbe3e0642d160b241d4a902f1e","modified":1584956151730},{"_id":"public/tags/python/index.html","hash":"e198bf8509ca2720abb6c9f5718b74a131381699","modified":1584956151730},{"_id":"public/images/images.png","hash":"c5630a436d828a6365b2e46799b94d997654322d","modified":1584956151730},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1584956151730},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1584956151730},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1584956151730},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1584956151730},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1584956151730},{"_id":"public/images/apple-touch-icon-next.png","hash":"84437721f92a789d9a21da0ccdb36d3ab70387ff","modified":1584956151730},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1584956151730},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1584956151730},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1584956151730},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1584956151730},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1584956151730},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1584956151730},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1584956151730},{"_id":"public/images/logo.png","hash":"84437721f92a789d9a21da0ccdb36d3ab70387ff","modified":1584956151730},{"_id":"public/images/alipay.jpg","hash":"0818a41ee5524b3e0e2e667827544ce0137210cc","modified":1584956151730},{"_id":"public/lib/fancybox/LICENSE","hash":"8624bcdae55baeef00cd11d5dfcfa60f68710a02","modified":1584956151730},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1584956151730},{"_id":"public/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1584956151730},{"_id":"public/images/avatar.png","hash":"84437721f92a789d9a21da0ccdb36d3ab70387ff","modified":1584956151730},{"_id":"public/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1584956151730},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1584956151730},{"_id":"public/images/wechatpay.png","hash":"c5511b469f4a68129f7adef41ffcdf5767c00c0d","modified":1584956151730},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1584956151730},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1584956151730},{"_id":"public/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1584956151730},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1584956151730},{"_id":"public/js/local-search.js","hash":"5d6f4d28b121f42a5d633d3f19a3ea161f9dbb48","modified":1584956151730},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1584956151730},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1584956151730},{"_id":"public/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1584956151730},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1584956151730},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1584956151730},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-flat-top.min.css","hash":"5e1c97e232b46e48592a8e4983ae5a89e0a7da6a","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1584956151730},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1584956151730},{"_id":"public/lib/three/gulpfile.js","hash":"e0e9e7051d9d82a37c2aba1df396d8b3916323c4","modified":1584956151730},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1584956151730},{"_id":"public/lib/three/package.json","hash":"b26242f5b3aa082ae137c437e2e9ee2a7094028b","modified":1584956151730},{"_id":"public/lib/three/renovate.json","hash":"94990e0ad04ce4a7c6f0ac3543318d9e02db1264","modified":1584956151730},{"_id":"public/lib/fancybox/source/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1584956151730},{"_id":"public/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1584956151730},{"_id":"public/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1584956151730},{"_id":"public/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1584956151730},{"_id":"public/lib/fancybox/README.html","hash":"ef332d1b78e923c8ba02c84f37e966c0fd8bb6c5","modified":1584956151730},{"_id":"public/lib/pace/README.html","hash":"e1909ab93f97012da3506bd7aaf184e390ffff16","modified":1584956151730},{"_id":"public/lib/three/README.html","hash":"e3bdcbca539556c09f3bcfa9e77589a0a519af82","modified":1584956151730},{"_id":"public/css/main.css","hash":"18db32ee8e805a9d1e5e66fff999f74d35aabb63","modified":1584956151730},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1584956151730},{"_id":"public/lib/pace/pace-theme-material.min.css","hash":"f1ff83985c090f3a3236554c5ef69542dcceb049","modified":1584956151730},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"186c3bd6ae352d336cdbd0e555ee76a844854c94","modified":1584956151730},{"_id":"public/lib/three/canvas_lines.min.js","hash":"ae6584edc0418d68731cab82c1494f26bd77c07d","modified":1584956151730},{"_id":"public/lib/three/three-waves.min.js","hash":"329483be97cdda030779da9a6cd1e3eae645cf4f","modified":1584956151730},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1584956151730},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1584956151730},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1584956151730},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1584956151730},{"_id":"public/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1584956151730},{"_id":"public/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1584956151730},{"_id":"public/lib/three/package-lock.json","hash":"18a22a7eadc46729ed033b9318a9dc9b8aed5ba0","modified":1584956151730},{"_id":"public/lib/fancybox/source/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1584956151730},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1584956151730},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1584956151730},{"_id":"public/images/ubuntu中使用pycharm有些快捷键无法使用/setting.png","hash":"d59ac55c50c9da030993c909c8e24e4e221be227","modified":1584956151730},{"_id":"public/images/ubuntu中使用pycharm有些快捷键无法使用/setting2.png","hash":"0fc7415d14cfc76059d92336b645487d7fdb0dd4","modified":1584956151730},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1584956151730}],"Category":[{"name":"经验分享","_id":"ck849yzdk0008pmjx1vh3gvjd"},{"name":"nanopi","_id":"ck849yzel000dpmjx5omg9m8g"}],"Data":[],"Page":[{"title":"About","date":"2020-03-20T06:26:47.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: About\ndate: 2020-03-20 14:26:47\n---\n","updated":"2020-03-20T06:26:47.247Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck849yz3i0000pmjxhu8pfvr9","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"Archives","date":"2020-03-20T06:27:29.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: Archives\ndate: 2020-03-20 14:27:29\n---\n","updated":"2020-03-20T06:27:29.942Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ck849yz4a0001pmjx2j9udvn8","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"Categories","date":"2020-03-20T06:27:04.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: Categories\ndate: 2020-03-20 14:27:04\ntype: \"categories\"\n---\n","updated":"2020-03-20T13:21:45.136Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck849yz4b0002pmjx1avido7s","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","type":"tags","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\ntype: \"tags\"\n---\n","date":"2020-03-20T13:24:32.857Z","updated":"2020-03-20T13:24:32.857Z","path":"tags/index.html","comments":1,"_id":"ck849yz4d0003pmjxhwxcbe8v","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"[Hexo] Theme BeanTech","catalog":true,"date":"2017-03-18T02:51:24.000Z","subtitle":"This is hexo theme Demo.","catagories":["Hexo"],"_content":"> Ported Theme of [Hux Blog](https://github.com/Huxpro/huxpro.github.io), Thank [Huxpro](https://github.com/Huxpro) for designing such a flawless theme.\n> \n> This BeanTech theme created by [YuHsuan](http://beantech.org) modified from the original Porter [Kaijun](http://kaijun.rocks/hexo-theme-huxblog/)\n\n# [Live Demo](http://beantech.org)\n---\n![BeanTech Desktop](http://beantech.org/img/beantech-desktop.png)\n\n# Usage\n---\nI publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!\n\nLet's begin!!!\n\n## Init\n---\n```bash\ngit clone https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech\ncd hexo-beantech\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](home_posts_tag-true.png)\n```yml\nhome_posts_tag: false\n```\n![home_posts_tag-false](home_posts_tag-false.png)\n\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" aria-label=\"Follow @YenYuHsuan on GitHub\">Follow</a> would also be appreciated!\nPeace!\n\n\n\n\n","source":"_posts/hexo-theme-beantech.md","raw":"---\ntitle: \"[Hexo] Theme BeanTech\"\ncatalog: true\ndate: 2017-03-18 10:51:24\nsubtitle: \"This is hexo theme Demo.\"\ntags:\n- Hexo\n- Blog\ncatagories:\n- Hexo\n---\n> Ported Theme of [Hux Blog](https://github.com/Huxpro/huxpro.github.io), Thank [Huxpro](https://github.com/Huxpro) for designing such a flawless theme.\n> \n> This BeanTech theme created by [YuHsuan](http://beantech.org) modified from the original Porter [Kaijun](http://kaijun.rocks/hexo-theme-huxblog/)\n\n# [Live Demo](http://beantech.org)\n---\n![BeanTech Desktop](http://beantech.org/img/beantech-desktop.png)\n\n# Usage\n---\nI publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!\n\nLet's begin!!!\n\n## Init\n---\n```bash\ngit clone https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech\ncd hexo-beantech\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](home_posts_tag-true.png)\n```yml\nhome_posts_tag: false\n```\n![home_posts_tag-false](home_posts_tag-false.png)\n\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" aria-label=\"Follow @YenYuHsuan on GitHub\">Follow</a> would also be appreciated!\nPeace!\n\n\n\n\n","slug":"hexo-theme-beantech","published":1,"updated":"2020-03-22T00:38:36.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzc70004pmjxh6oraz6e","content":"<blockquote>\n<p>Ported Theme of <a href=\"https://github.com/Huxpro/huxpro.github.io\" target=\"_blank\" rel=\"noopener\">Hux Blog</a>, Thank <a href=\"https://github.com/Huxpro\" target=\"_blank\" rel=\"noopener\">Huxpro</a> for designing such a flawless theme.</p>\n<p>This BeanTech theme created by <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> modified from the original Porter <a href=\"http://kaijun.rocks/hexo-theme-huxblog/\" target=\"_blank\" rel=\"noopener\">Kaijun</a></p>\n</blockquote>\n<h1 id=\"Live-Demo\"><a href=\"#Live-Demo\" class=\"headerlink\" title=\"Live Demo\"></a><a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">Live Demo</a></h1><hr>\n<p><img src=\"http://beantech.org/img/beantech-desktop.png\" alt=\"BeanTech Desktop\"></p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><hr>\n<p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p>\n<p>Let’s begin!!!</p>\n<h2 id=\"Init\"><a href=\"#Init\" class=\"headerlink\" title=\"Init\"></a>Init</h2><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech<br><span class=\"hljs-built_in\">cd</span> hexo-beantech<br>npm install<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Modify\"><a href=\"#Modify\" class=\"headerlink\" title=\"Modify\"></a>Modify</h2><hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>Especially the section:</p>\n<h3 id=\"Deployment\"><a href=\"#Deployment\" class=\"headerlink\" title=\"Deployment\"></a>Deployment</h3><p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">deploy:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">git</span><br>  <span class=\"hljs-attr\">repo:</span> <span class=\"hljs-string\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span><br>  <span class=\"hljs-attr\">branch:</span> <span class=\"hljs-string\">&lt;your-branch&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Sidebar-settings\"><a href=\"#Sidebar-settings\" class=\"headerlink\" title=\"Sidebar settings\"></a>Sidebar settings</h3><p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">sidebar:</span> <span class=\"hljs-literal\">true</span>    <span class=\"hljs-comment\"># whether or not using Sidebar.</span><br><span class=\"hljs-attr\">sidebar-about-description:</span> <span class=\"hljs-string\">\"&lt;your description&gt;\"</span><br><span class=\"hljs-attr\">sidebar-avatar:</span> <span class=\"hljs-string\">img/&lt;your</span> <span class=\"hljs-string\">avatar</span> <span class=\"hljs-string\">path&gt;</span><br></code></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">widgets:</span>         <span class=\"hljs-comment\"># here are widget you can use, you can comment out</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">featured-tags</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">short-about</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">recent-posts</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">friends-blog</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">archive</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">category</span><br></code></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3 id=\"Signature-Setup\"><a href=\"#Signature-Setup\" class=\"headerlink\" title=\"Signature Setup\"></a>Signature Setup</h3><p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">signature:</span> <span class=\"hljs-literal\">true</span>   <span class=\"hljs-comment\"># show signature</span><br><span class=\"hljs-attr\">signature-img:</span> <span class=\"hljs-string\">img/signature/&lt;your-signature-ID&gt;</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"Go-to-top-icon-Setup\"><a href=\"#Go-to-top-icon-Setup\" class=\"headerlink\" title=\"Go to top icon Setup\"></a>Go to top icon Setup</h3><p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3 id=\"Post-tag\"><a href=\"#Post-tag\" class=\"headerlink\" title=\"Post tag\"></a>Post tag</h3><p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">home_posts_tag:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<p><img src=\"/.cn//home_posts_tag-true.png\" alt=\"home_posts_tag-true\"></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">home_posts_tag:</span> <span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<p><img src=\"/.cn//home_posts_tag-false.png\" alt=\"home_posts_tag-false\"></p>\n<h3 id=\"Markdown-render\"><a href=\"#Markdown-render\" class=\"headerlink\" title=\"Markdown render\"></a>Markdown render</h3><p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Markdown-it config</span><br><span class=\"hljs-comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span><br><span class=\"hljs-attr\">markdown:</span><br>  <span class=\"hljs-attr\">render:</span><br>    <span class=\"hljs-attr\">html:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">xhtmlOut:</span> <span class=\"hljs-literal\">false</span><br>    <span class=\"hljs-attr\">breaks:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">linkify:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">typographer:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">quotes:</span> <span class=\"hljs-string\">'“”‘’'</span><br></code></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span>(<span class=\"hljs-string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;<br>        anchors.options = &#123;<br>          <span class=\"hljs-attr\">visible</span>: <span class=\"hljs-string\">'hover'</span>,<br>          <span class=\"hljs-attr\">placement</span>: <span class=\"hljs-string\">'left'</span>,<br>          <span class=\"hljs-attr\">icon</span>: ℬ <span class=\"hljs-comment\">// this is the header anchor \"unicode\" icon</span><br>        &#125;;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo-Basics\"><a href=\"#Hexo-Basics\" class=\"headerlink\" title=\"Hexo Basics\"></a>Hexo Basics</h2><hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new post <span class=\"hljs-string\">\"&lt;post name&gt;\"</span> <span class=\"hljs-comment\"># you can change post to another layout if you want</span><br>hexo clean &amp;&amp; hexo generate <span class=\"hljs-comment\"># generate the static file</span><br>hexo server <span class=\"hljs-comment\"># run hexo in local environment</span><br>hexo deploy <span class=\"hljs-comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"Have-fun\"><a href=\"#Have-fun\" class=\"headerlink\" title=\"Have fun ^_^\"></a>Have fun ^_^</h1><hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\n<p>Please <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" target=\"_blank\" rel=\"noopener\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" target=\"_blank\" rel=\"noopener\" aria-label=\"Follow @YenYuHsuan on GitHub\">Follow</a> would also be appreciated!<br>Peace!</p>\n","site":{"data":{}},"length":2211,"excerpt":"","more":"<blockquote>\n<p>Ported Theme of <a href=\"https://github.com/Huxpro/huxpro.github.io\" target=\"_blank\" rel=\"noopener\">Hux Blog</a>, Thank <a href=\"https://github.com/Huxpro\" target=\"_blank\" rel=\"noopener\">Huxpro</a> for designing such a flawless theme.</p>\n<p>This BeanTech theme created by <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> modified from the original Porter <a href=\"http://kaijun.rocks/hexo-theme-huxblog/\" target=\"_blank\" rel=\"noopener\">Kaijun</a></p>\n</blockquote>\n<h1 id=\"Live-Demo\"><a href=\"#Live-Demo\" class=\"headerlink\" title=\"Live Demo\"></a><a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">Live Demo</a></h1><hr>\n<p><img src=\"http://beantech.org/img/beantech-desktop.png\" alt=\"BeanTech Desktop\"></p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><hr>\n<p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p>\n<p>Let’s begin!!!</p>\n<h2 id=\"Init\"><a href=\"#Init\" class=\"headerlink\" title=\"Init\"></a>Init</h2><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech<br><span class=\"hljs-built_in\">cd</span> hexo-beantech<br>npm install<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Modify\"><a href=\"#Modify\" class=\"headerlink\" title=\"Modify\"></a>Modify</h2><hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>Especially the section:</p>\n<h3 id=\"Deployment\"><a href=\"#Deployment\" class=\"headerlink\" title=\"Deployment\"></a>Deployment</h3><p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">deploy:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">git</span><br>  <span class=\"hljs-attr\">repo:</span> <span class=\"hljs-string\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span><br>  <span class=\"hljs-attr\">branch:</span> <span class=\"hljs-string\">&lt;your-branch&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Sidebar-settings\"><a href=\"#Sidebar-settings\" class=\"headerlink\" title=\"Sidebar settings\"></a>Sidebar settings</h3><p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">sidebar:</span> <span class=\"hljs-literal\">true</span>    <span class=\"hljs-comment\"># whether or not using Sidebar.</span><br><span class=\"hljs-attr\">sidebar-about-description:</span> <span class=\"hljs-string\">\"&lt;your description&gt;\"</span><br><span class=\"hljs-attr\">sidebar-avatar:</span> <span class=\"hljs-string\">img/&lt;your</span> <span class=\"hljs-string\">avatar</span> <span class=\"hljs-string\">path&gt;</span><br></code></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">widgets:</span>         <span class=\"hljs-comment\"># here are widget you can use, you can comment out</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">featured-tags</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">short-about</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">recent-posts</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">friends-blog</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">archive</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">category</span><br></code></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3 id=\"Signature-Setup\"><a href=\"#Signature-Setup\" class=\"headerlink\" title=\"Signature Setup\"></a>Signature Setup</h3><p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">signature:</span> <span class=\"hljs-literal\">true</span>   <span class=\"hljs-comment\"># show signature</span><br><span class=\"hljs-attr\">signature-img:</span> <span class=\"hljs-string\">img/signature/&lt;your-signature-ID&gt;</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"Go-to-top-icon-Setup\"><a href=\"#Go-to-top-icon-Setup\" class=\"headerlink\" title=\"Go to top icon Setup\"></a>Go to top icon Setup</h3><p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3 id=\"Post-tag\"><a href=\"#Post-tag\" class=\"headerlink\" title=\"Post tag\"></a>Post tag</h3><p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">home_posts_tag:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<p><img src=\"/.cn//home_posts_tag-true.png\" alt=\"home_posts_tag-true\"></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">home_posts_tag:</span> <span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<p><img src=\"/.cn//home_posts_tag-false.png\" alt=\"home_posts_tag-false\"></p>\n<h3 id=\"Markdown-render\"><a href=\"#Markdown-render\" class=\"headerlink\" title=\"Markdown render\"></a>Markdown render</h3><p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Markdown-it config</span><br><span class=\"hljs-comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span><br><span class=\"hljs-attr\">markdown:</span><br>  <span class=\"hljs-attr\">render:</span><br>    <span class=\"hljs-attr\">html:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">xhtmlOut:</span> <span class=\"hljs-literal\">false</span><br>    <span class=\"hljs-attr\">breaks:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">linkify:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">typographer:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">quotes:</span> <span class=\"hljs-string\">'“”‘’'</span><br></code></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">async</span>(<span class=\"hljs-string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;<br>        anchors.options = &#123;<br>          <span class=\"hljs-attr\">visible</span>: <span class=\"hljs-string\">'hover'</span>,<br>          <span class=\"hljs-attr\">placement</span>: <span class=\"hljs-string\">'left'</span>,<br>          <span class=\"hljs-attr\">icon</span>: ℬ <span class=\"hljs-comment\">// this is the header anchor \"unicode\" icon</span><br>        &#125;;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo-Basics\"><a href=\"#Hexo-Basics\" class=\"headerlink\" title=\"Hexo Basics\"></a>Hexo Basics</h2><hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new post <span class=\"hljs-string\">\"&lt;post name&gt;\"</span> <span class=\"hljs-comment\"># you can change post to another layout if you want</span><br>hexo clean &amp;&amp; hexo generate <span class=\"hljs-comment\"># generate the static file</span><br>hexo server <span class=\"hljs-comment\"># run hexo in local environment</span><br>hexo deploy <span class=\"hljs-comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"Have-fun\"><a href=\"#Have-fun\" class=\"headerlink\" title=\"Have fun ^_^\"></a>Have fun ^_^</h1><hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\n<p>Please <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" target=\"_blank\" rel=\"noopener\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" target=\"_blank\" rel=\"noopener\" aria-label=\"Follow @YenYuHsuan on GitHub\">Follow</a> would also be appreciated!<br>Peace!</p>\n"},{"title":"markedown云笔记，typora+坚果云+picgo+github图床+阿里云图床","catalog":true,"date":"2020-03-01T06:51:24.000Z","subtitle":null,"_content":"\n\n平时在弄一些东西想记一些笔记，要不等弄完也就弄完了，几乎忘了怎么弄的，最好用笔记记录一下。首先尝试了一下印象笔记，免费用户可以两个设备同步，每个月还有流量限制，主要是照片比较多，一个月的流量很可能不来够，果断放弃。\n\n考虑用markdown来记录一些东西，因为写博客也是用的markdown，写点代码什么的比较方便。上网搜了一下，使用typroa和坚果云可以实现云同步。typroa界面十分简洁清爽，非常舒服。坚果云的空间没有其他网盘大，但主打的是同步，每个月有1G的上传和3G的下载，对于只是同步 一下md文档，完全够用了。可是又有一个新的问题。图片怎么办？对于我这个时不时就截图的人来说，这个问题很致命。很巧typroa支持使用picgo上传图片。picgo是一个上传图片到图床的一个软件。图床的选择，免费的是Github，不过毕竟是免费的，大家都懂，七牛云，据说用的比较多，不过因为域名只能用一段时间，这后就需要使用自己备案过的域名，感觉不方便，所以考虑到阿里云和腾讯云，比较了一下，价钱的话差不多，实际上都用不了多少钱。个人感觉阿里云做的比较好。所以使用typora+坚果云+picgo+github图床+阿里云图床。这样即解决了笔记问题也解决了博客图床的问题。\n\n最重要的是typroa、坚果云、picgo都是支持windows macos 和linux。\n\n下面以windows为例介绍一下。\n<!--more-->\n---\n\n### typroa\n\n---\n\n[下载地址](https://typora.io/)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroadownload.png)\n\n选择对应的版本，下载安装。\n\n安装后，打开 文件->偏好设置->图像\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-img1.png)\n\n选择上传图片，上传服务选择PicGo（app），路径选择一会安装PicGo的路径。\n\n其他设置，大家可以根据自己的喜好设置。\n\n---\n\n### 坚果云\n\n---\n\n[下载地址](https://www.jianguoyun.com/s/downloads)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/坚果云下载.png)\n\n选择对应的版本下载，安装（安装过程没有截图，大家按照提示安装就可以）。最后把typroa的md文件保存在坚果云的同步文件夹下就可以了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/坚果云.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/坚果云同步.png)\n\n\n\n---\n\n### PicGo\n\n---\n\n[下载地址](https://molunerfinn.com/PicGo/)\n\npicgo是Github开源项目，大家下载自己需要的版本，其他平台大家可以参考文档安装。windows选择exe文件。安装后启动，刚开始不会有界面，右下角图标单击或者右键可以打开界面。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo—download.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo1.png)\n\n到这里不要忘了去typroa上找一下picgo的安装路径。\n\n---\n\n### Github图床\n\n---\n\n[github.com](https://github.com/)\n\n新建一个仓库，用做图床。（一定要公开不要私密，要不别人看不到图片）\n\nsetting->developer setting->personal access tokens\n\n点generate new token\n\nnote 随便填，下面不知道每个选项都是什么意思，跟我一样全选上。\n\n最后generate token\n\n记住生成的token秘钥，\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting2.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting3.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting4.png)\n\n---\n\n打开picgo，选择Github图床。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-github.png)\n\n仓库名：用户名/仓库名\n\n分支名：master\n\ntoken：刚才生成的token秘钥\n\n存储路径：是仓库下新建一个文件夹来作为图床，后面要有/\n\n自定义域名;https://raw.githubsercontent.com/用户名/仓库名/分支\n\n点确定即可。Github图床设置完成，可以上传一个图片试试。\n\nGithub主要是免费的，速度什么的就不行了。\n\n---\n\n### 阿里云图床\n\n---\n\n[阿里云网址](https://cn.aliyun.com/)\n\n选择对象存储OSS，或者直接搜索也可以。购买的话，40GB一年才9元，现在买还有折扣，一年7.2元。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss2.png)\n\n下单后，在控制台找到OSS。进入BUcket列表，创建bucket。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss3.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss5.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss6.png)\n\nbucket的名称大家自己想一个。读写权限改为公共读。\n\n确定。记住外网的两个域名。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss7.png)\n\n下面来生成key。点击概览，右侧有一个常用入口，下面有一个Access Key。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss8.png)\n\n进入后，点击   创建Accesskey   验证手机，会造成ID和key，最好是保存一下。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss9.png)\n\n---\n\n打开picgo，进入阿里云oss设置。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-aliyun.png)\n\nkeyid和keysecrect是刚才生成的ID和key。\n\n存储空间名是bucket的名\n\n存储区域是全世外网访问节点 去掉aliyuncs.com 前面的一串。\n\n存储路径什么的大家根据自己的喜好来。\n\n---\n\n### 问题：\n\ntyproa验证上传时，不成功\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa_upload.png)\n\n原因：应该是typroa的端口与picgo的端口不对应。修改一下picgo的server端口就行。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-server.png)\n\n测试一下，成功了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-upload1.png)\n\n---\n\n到这里就完事了！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n\n\n","source":"_posts/markedown云笔记，typora+坚果云+picgo+github图床+阿里云图床.md","raw":"---\ntitle: \"markedown云笔记，typora+坚果云+picgo+github图床+阿里云图床\"\ncatalog: true\ndate: 2020-03-01 14:51:24\nsubtitle: \ntags:\n- 图床\n- typroa\n- picgo \n- github 图床\n- 坚果云\n- 云笔记\ncategories:\n- 经验分享\n---\n\n\n平时在弄一些东西想记一些笔记，要不等弄完也就弄完了，几乎忘了怎么弄的，最好用笔记记录一下。首先尝试了一下印象笔记，免费用户可以两个设备同步，每个月还有流量限制，主要是照片比较多，一个月的流量很可能不来够，果断放弃。\n\n考虑用markdown来记录一些东西，因为写博客也是用的markdown，写点代码什么的比较方便。上网搜了一下，使用typroa和坚果云可以实现云同步。typroa界面十分简洁清爽，非常舒服。坚果云的空间没有其他网盘大，但主打的是同步，每个月有1G的上传和3G的下载，对于只是同步 一下md文档，完全够用了。可是又有一个新的问题。图片怎么办？对于我这个时不时就截图的人来说，这个问题很致命。很巧typroa支持使用picgo上传图片。picgo是一个上传图片到图床的一个软件。图床的选择，免费的是Github，不过毕竟是免费的，大家都懂，七牛云，据说用的比较多，不过因为域名只能用一段时间，这后就需要使用自己备案过的域名，感觉不方便，所以考虑到阿里云和腾讯云，比较了一下，价钱的话差不多，实际上都用不了多少钱。个人感觉阿里云做的比较好。所以使用typora+坚果云+picgo+github图床+阿里云图床。这样即解决了笔记问题也解决了博客图床的问题。\n\n最重要的是typroa、坚果云、picgo都是支持windows macos 和linux。\n\n下面以windows为例介绍一下。\n<!--more-->\n---\n\n### typroa\n\n---\n\n[下载地址](https://typora.io/)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroadownload.png)\n\n选择对应的版本，下载安装。\n\n安装后，打开 文件->偏好设置->图像\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-img1.png)\n\n选择上传图片，上传服务选择PicGo（app），路径选择一会安装PicGo的路径。\n\n其他设置，大家可以根据自己的喜好设置。\n\n---\n\n### 坚果云\n\n---\n\n[下载地址](https://www.jianguoyun.com/s/downloads)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/坚果云下载.png)\n\n选择对应的版本下载，安装（安装过程没有截图，大家按照提示安装就可以）。最后把typroa的md文件保存在坚果云的同步文件夹下就可以了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/坚果云.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/坚果云同步.png)\n\n\n\n---\n\n### PicGo\n\n---\n\n[下载地址](https://molunerfinn.com/PicGo/)\n\npicgo是Github开源项目，大家下载自己需要的版本，其他平台大家可以参考文档安装。windows选择exe文件。安装后启动，刚开始不会有界面，右下角图标单击或者右键可以打开界面。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo—download.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo1.png)\n\n到这里不要忘了去typroa上找一下picgo的安装路径。\n\n---\n\n### Github图床\n\n---\n\n[github.com](https://github.com/)\n\n新建一个仓库，用做图床。（一定要公开不要私密，要不别人看不到图片）\n\nsetting->developer setting->personal access tokens\n\n点generate new token\n\nnote 随便填，下面不知道每个选项都是什么意思，跟我一样全选上。\n\n最后generate token\n\n记住生成的token秘钥，\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting2.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting3.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting4.png)\n\n---\n\n打开picgo，选择Github图床。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-github.png)\n\n仓库名：用户名/仓库名\n\n分支名：master\n\ntoken：刚才生成的token秘钥\n\n存储路径：是仓库下新建一个文件夹来作为图床，后面要有/\n\n自定义域名;https://raw.githubsercontent.com/用户名/仓库名/分支\n\n点确定即可。Github图床设置完成，可以上传一个图片试试。\n\nGithub主要是免费的，速度什么的就不行了。\n\n---\n\n### 阿里云图床\n\n---\n\n[阿里云网址](https://cn.aliyun.com/)\n\n选择对象存储OSS，或者直接搜索也可以。购买的话，40GB一年才9元，现在买还有折扣，一年7.2元。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss2.png)\n\n下单后，在控制台找到OSS。进入BUcket列表，创建bucket。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss3.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss5.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss6.png)\n\nbucket的名称大家自己想一个。读写权限改为公共读。\n\n确定。记住外网的两个域名。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss7.png)\n\n下面来生成key。点击概览，右侧有一个常用入口，下面有一个Access Key。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss8.png)\n\n进入后，点击   创建Accesskey   验证手机，会造成ID和key，最好是保存一下。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss9.png)\n\n---\n\n打开picgo，进入阿里云oss设置。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-aliyun.png)\n\nkeyid和keysecrect是刚才生成的ID和key。\n\n存储空间名是bucket的名\n\n存储区域是全世外网访问节点 去掉aliyuncs.com 前面的一串。\n\n存储路径什么的大家根据自己的喜好来。\n\n---\n\n### 问题：\n\ntyproa验证上传时，不成功\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa_upload.png)\n\n原因：应该是typroa的端口与picgo的端口不对应。修改一下picgo的server端口就行。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-server.png)\n\n测试一下，成功了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-upload1.png)\n\n---\n\n到这里就完事了！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n\n\n","slug":"markedown云笔记，typora+坚果云+picgo+github图床+阿里云图床","published":1,"updated":"2020-03-22T00:38:57.912Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzce0005pmjx9lmialr3","content":"<p>平时在弄一些东西想记一些笔记，要不等弄完也就弄完了，几乎忘了怎么弄的，最好用笔记记录一下。首先尝试了一下印象笔记，免费用户可以两个设备同步，每个月还有流量限制，主要是照片比较多，一个月的流量很可能不来够，果断放弃。</p>\n<p>考虑用markdown来记录一些东西，因为写博客也是用的markdown，写点代码什么的比较方便。上网搜了一下，使用typroa和坚果云可以实现云同步。typroa界面十分简洁清爽，非常舒服。坚果云的空间没有其他网盘大，但主打的是同步，每个月有1G的上传和3G的下载，对于只是同步 一下md文档，完全够用了。可是又有一个新的问题。图片怎么办？对于我这个时不时就截图的人来说，这个问题很致命。很巧typroa支持使用picgo上传图片。picgo是一个上传图片到图床的一个软件。图床的选择，免费的是Github，不过毕竟是免费的，大家都懂，七牛云，据说用的比较多，不过因为域名只能用一段时间，这后就需要使用自己备案过的域名，感觉不方便，所以考虑到阿里云和腾讯云，比较了一下，价钱的话差不多，实际上都用不了多少钱。个人感觉阿里云做的比较好。所以使用typora+坚果云+picgo+github图床+阿里云图床。这样即解决了笔记问题也解决了博客图床的问题。</p>\n<p>最重要的是typroa、坚果云、picgo都是支持windows macos 和linux。</p>\n<p>下面以windows为例介绍一下。</p>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"typroa\"><a href=\"#typroa\" class=\"headerlink\" title=\"typroa\"></a>typroa</h3><hr>\n<p><a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroadownload.png\" alt></p>\n<p>选择对应的版本，下载安装。</p>\n<p>安装后，打开 文件-&gt;偏好设置-&gt;图像</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-img1.png\" alt></p>\n<p>选择上传图片，上传服务选择PicGo（app），路径选择一会安装PicGo的路径。</p>\n<p>其他设置，大家可以根据自己的喜好设置。</p>\n<hr>\n<h3 id=\"坚果云\"><a href=\"#坚果云\" class=\"headerlink\" title=\"坚果云\"></a>坚果云</h3><hr>\n<p><a href=\"https://www.jianguoyun.com/s/downloads\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8B%E8%BD%BD.png\" alt></p>\n<p>选择对应的版本下载，安装（安装过程没有截图，大家按照提示安装就可以）。最后把typroa的md文件保存在坚果云的同步文件夹下就可以了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91%E5%90%8C%E6%AD%A5.png\" alt></p>\n<hr>\n<h3 id=\"PicGo\"><a href=\"#PicGo\" class=\"headerlink\" title=\"PicGo\"></a>PicGo</h3><hr>\n<p><a href=\"https://molunerfinn.com/PicGo/\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p>picgo是Github开源项目，大家下载自己需要的版本，其他平台大家可以参考文档安装。windows选择exe文件。安装后启动，刚开始不会有界面，右下角图标单击或者右键可以打开界面。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo%E2%80%94download.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo1.png\" alt></p>\n<p>到这里不要忘了去typroa上找一下picgo的安装路径。</p>\n<hr>\n<h3 id=\"Github图床\"><a href=\"#Github图床\" class=\"headerlink\" title=\"Github图床\"></a>Github图床</h3><hr>\n<p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github.com</a></p>\n<p>新建一个仓库，用做图床。（一定要公开不要私密，要不别人看不到图片）</p>\n<p>setting-&gt;developer setting-&gt;personal access tokens</p>\n<p>点generate new token</p>\n<p>note 随便填，下面不知道每个选项都是什么意思，跟我一样全选上。</p>\n<p>最后generate token</p>\n<p>记住生成的token秘钥，</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting2.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting3.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting4.png\" alt></p>\n<hr>\n<p>打开picgo，选择Github图床。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-github.png\" alt></p>\n<p>仓库名：用户名/仓库名</p>\n<p>分支名：master</p>\n<p>token：刚才生成的token秘钥</p>\n<p>存储路径：是仓库下新建一个文件夹来作为图床，后面要有/</p>\n<p>自定义域名;<a href=\"https://raw.githubsercontent.com/用户名/仓库名/分支\" target=\"_blank\" rel=\"noopener\">https://raw.githubsercontent.com/用户名/仓库名/分支</a></p>\n<p>点确定即可。Github图床设置完成，可以上传一个图片试试。</p>\n<p>Github主要是免费的，速度什么的就不行了。</p>\n<hr>\n<h3 id=\"阿里云图床\"><a href=\"#阿里云图床\" class=\"headerlink\" title=\"阿里云图床\"></a>阿里云图床</h3><hr>\n<p><a href=\"https://cn.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云网址</a></p>\n<p>选择对象存储OSS，或者直接搜索也可以。购买的话，40GB一年才9元，现在买还有折扣，一年7.2元。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss2.png\" alt></p>\n<p>下单后，在控制台找到OSS。进入BUcket列表，创建bucket。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss3.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss5.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss6.png\" alt></p>\n<p>bucket的名称大家自己想一个。读写权限改为公共读。</p>\n<p>确定。记住外网的两个域名。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss7.png\" alt></p>\n<p>下面来生成key。点击概览，右侧有一个常用入口，下面有一个Access Key。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss8.png\" alt></p>\n<p>进入后，点击   创建Accesskey   验证手机，会造成ID和key，最好是保存一下。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss9.png\" alt></p>\n<hr>\n<p>打开picgo，进入阿里云oss设置。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-aliyun.png\" alt></p>\n<p>keyid和keysecrect是刚才生成的ID和key。</p>\n<p>存储空间名是bucket的名</p>\n<p>存储区域是全世外网访问节点 去掉aliyuncs.com 前面的一串。</p>\n<p>存储路径什么的大家根据自己的喜好来。</p>\n<hr>\n<h3 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h3><p>typroa验证上传时，不成功</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa_upload.png\" alt></p>\n<p>原因：应该是typroa的端口与picgo的端口不对应。修改一下picgo的server端口就行。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-server.png\" alt></p>\n<p>测试一下，成功了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-upload1.png\" alt></p>\n<hr>\n<p>到这里就完事了！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":1714,"excerpt":"<p>平时在弄一些东西想记一些笔记，要不等弄完也就弄完了，几乎忘了怎么弄的，最好用笔记记录一下。首先尝试了一下印象笔记，免费用户可以两个设备同步，每个月还有流量限制，主要是照片比较多，一个月的流量很可能不来够，果断放弃。</p>\n<p>考虑用markdown来记录一些东西，因为写博客也是用的markdown，写点代码什么的比较方便。上网搜了一下，使用typroa和坚果云可以实现云同步。typroa界面十分简洁清爽，非常舒服。坚果云的空间没有其他网盘大，但主打的是同步，每个月有1G的上传和3G的下载，对于只是同步 一下md文档，完全够用了。可是又有一个新的问题。图片怎么办？对于我这个时不时就截图的人来说，这个问题很致命。很巧typroa支持使用picgo上传图片。picgo是一个上传图片到图床的一个软件。图床的选择，免费的是Github，不过毕竟是免费的，大家都懂，七牛云，据说用的比较多，不过因为域名只能用一段时间，这后就需要使用自己备案过的域名，感觉不方便，所以考虑到阿里云和腾讯云，比较了一下，价钱的话差不多，实际上都用不了多少钱。个人感觉阿里云做的比较好。所以使用typora+坚果云+picgo+github图床+阿里云图床。这样即解决了笔记问题也解决了博客图床的问题。</p>\n<p>最重要的是typroa、坚果云、picgo都是支持windows macos 和linux。</p>\n<p>下面以windows为例介绍一下。</p>","more":"<hr>\n<h3 id=\"typroa\"><a href=\"#typroa\" class=\"headerlink\" title=\"typroa\"></a>typroa</h3><hr>\n<p><a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroadownload.png\" alt></p>\n<p>选择对应的版本，下载安装。</p>\n<p>安装后，打开 文件-&gt;偏好设置-&gt;图像</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-img1.png\" alt></p>\n<p>选择上传图片，上传服务选择PicGo（app），路径选择一会安装PicGo的路径。</p>\n<p>其他设置，大家可以根据自己的喜好设置。</p>\n<hr>\n<h3 id=\"坚果云\"><a href=\"#坚果云\" class=\"headerlink\" title=\"坚果云\"></a>坚果云</h3><hr>\n<p><a href=\"https://www.jianguoyun.com/s/downloads\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8B%E8%BD%BD.png\" alt></p>\n<p>选择对应的版本下载，安装（安装过程没有截图，大家按照提示安装就可以）。最后把typroa的md文件保存在坚果云的同步文件夹下就可以了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91%E5%90%8C%E6%AD%A5.png\" alt></p>\n<hr>\n<h3 id=\"PicGo\"><a href=\"#PicGo\" class=\"headerlink\" title=\"PicGo\"></a>PicGo</h3><hr>\n<p><a href=\"https://molunerfinn.com/PicGo/\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p>picgo是Github开源项目，大家下载自己需要的版本，其他平台大家可以参考文档安装。windows选择exe文件。安装后启动，刚开始不会有界面，右下角图标单击或者右键可以打开界面。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo%E2%80%94download.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo1.png\" alt></p>\n<p>到这里不要忘了去typroa上找一下picgo的安装路径。</p>\n<hr>\n<h3 id=\"Github图床\"><a href=\"#Github图床\" class=\"headerlink\" title=\"Github图床\"></a>Github图床</h3><hr>\n<p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github.com</a></p>\n<p>新建一个仓库，用做图床。（一定要公开不要私密，要不别人看不到图片）</p>\n<p>setting-&gt;developer setting-&gt;personal access tokens</p>\n<p>点generate new token</p>\n<p>note 随便填，下面不知道每个选项都是什么意思，跟我一样全选上。</p>\n<p>最后generate token</p>\n<p>记住生成的token秘钥，</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting2.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting3.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting4.png\" alt></p>\n<hr>\n<p>打开picgo，选择Github图床。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-github.png\" alt></p>\n<p>仓库名：用户名/仓库名</p>\n<p>分支名：master</p>\n<p>token：刚才生成的token秘钥</p>\n<p>存储路径：是仓库下新建一个文件夹来作为图床，后面要有/</p>\n<p>自定义域名;<a href=\"https://raw.githubsercontent.com/用户名/仓库名/分支\" target=\"_blank\" rel=\"noopener\">https://raw.githubsercontent.com/用户名/仓库名/分支</a></p>\n<p>点确定即可。Github图床设置完成，可以上传一个图片试试。</p>\n<p>Github主要是免费的，速度什么的就不行了。</p>\n<hr>\n<h3 id=\"阿里云图床\"><a href=\"#阿里云图床\" class=\"headerlink\" title=\"阿里云图床\"></a>阿里云图床</h3><hr>\n<p><a href=\"https://cn.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云网址</a></p>\n<p>选择对象存储OSS，或者直接搜索也可以。购买的话，40GB一年才9元，现在买还有折扣，一年7.2元。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss2.png\" alt></p>\n<p>下单后，在控制台找到OSS。进入BUcket列表，创建bucket。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss3.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss5.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss6.png\" alt></p>\n<p>bucket的名称大家自己想一个。读写权限改为公共读。</p>\n<p>确定。记住外网的两个域名。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss7.png\" alt></p>\n<p>下面来生成key。点击概览，右侧有一个常用入口，下面有一个Access Key。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss8.png\" alt></p>\n<p>进入后，点击   创建Accesskey   验证手机，会造成ID和key，最好是保存一下。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss9.png\" alt></p>\n<hr>\n<p>打开picgo，进入阿里云oss设置。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-aliyun.png\" alt></p>\n<p>keyid和keysecrect是刚才生成的ID和key。</p>\n<p>存储空间名是bucket的名</p>\n<p>存储区域是全世外网访问节点 去掉aliyuncs.com 前面的一串。</p>\n<p>存储路径什么的大家根据自己的喜好来。</p>\n<hr>\n<h3 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h3><p>typroa验证上传时，不成功</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa_upload.png\" alt></p>\n<p>原因：应该是typroa的端口与picgo的端口不对应。修改一下picgo的server端口就行。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-server.png\" alt></p>\n<p>测试一下，成功了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-upload1.png\" alt></p>\n<hr>\n<p>到这里就完事了！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"nanopi neo2 black 上电使用","date":"2020-02-27T12:39:55.000Z","subtitle":null,"_content":"最近上手一个小东西，nanopi neo2 black，非常精致，可以运行linux core ，可以运行Ubuntu 内核，感兴趣可以淘宝，或者[官网](http://nanopi.org/)看看。\n\n---\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一1.png)\n<!--more-->\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一2.jpg)\n我买这个板子的时候，赠送了16GB的TF卡，里面有系统，所以我没有编译系统，关于系统的制作可以参考官方[文档](http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2_Black#Configure_System_with_npi-config)\n\n---\n### 1. 通过ssh连接\n\n---\n登录方式有有三种：串口、HDMI、ssh\n串口需要使用debug UART引脚，然而板子出厂时这个引脚是不焊的，所以暂时没有办法使用串口登录。\nHDMI是使用提供的模块，也是通过串口debug UART连接，所以暂时也无法使用。\n只能使用SSH登录。\n由于身边没有路由器，无法使用有线网络。只能使用无线网卡连接网络。\n插上网卡，接上键盘，没有显示输出，只能盲打（大家如果能使用有线，nanopi会直接获取ip，就可以跳过这步了）\n```bash\n$ su root\nfa\n$ nmcli r wifi on //打开wifi\n$ nmcli dev //显示网络设备，无线网卡是wlan0\n$ nmcli dev wifi //扫描wifi信号\n$ nmcli dev wifi connect \"SSID\" password \"PASSWORD\" ifname wlan0 //连接无线网，SSID是无线网名称，PASSWORD是密码\n```\n等一会就会从oled上看到IP了，使用xshell能过ssh就可以登录了，登录名pi，密码pi。root的密码fa。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一3.png)\n这样就连接成功了。\n\n---\n### 2. 更新\n\n---\n更改更新源为国内源\n```bash\n$ sudo vim /etc/apt/sources.list\n//加入以下源\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe\n```\n有点慢，大家耐心等待（也可以是我的网慢）\n执行更新命令\n```bash\n$ sudo apt-get update\n$ sudo apt-get upgrade\n```\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一4.png)\n\n---\n### 3.测网速\n---\n```bash\n$ sudo apt install speedtest-cli //安装\n$ sudo speedtest-cli //测试，有时可能测不出来\nRetrieving speedtest.net configuration...\nRetrieving speedtest.net server list...\nTesting from China Mobile Guangdong (223.104.236.97)...\nSelecting best server based on latency...\nHosted by ChinaMobile, Liaoning Branch,Dalian (Dalian) [247.24 km]: 75.654 ms\nTesting download speed........................................\nDownload: 2.42 Mbit/s\nTesting upload speed..................................................\nUpload: 0.76 Mbit/s\n我是热点连接，手机又被限速了所以很慢\n```\n我是热点连接，手机又被限速了所以很慢\n\n---\n大家可以为所欲为了，哈哈。\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","source":"_posts/nanopi-neo2-black-上电使用.md","raw":"---\ntitle: nanopi neo2 black 上电使用\ndate: 2020-02-27 20:39:55\nsubtitle:\ntags:\n- nanopi\n- ubuntu\n- SSH\ncategories:\n- nanopi\n---\n最近上手一个小东西，nanopi neo2 black，非常精致，可以运行linux core ，可以运行Ubuntu 内核，感兴趣可以淘宝，或者[官网](http://nanopi.org/)看看。\n\n---\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一1.png)\n<!--more-->\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一2.jpg)\n我买这个板子的时候，赠送了16GB的TF卡，里面有系统，所以我没有编译系统，关于系统的制作可以参考官方[文档](http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2_Black#Configure_System_with_npi-config)\n\n---\n### 1. 通过ssh连接\n\n---\n登录方式有有三种：串口、HDMI、ssh\n串口需要使用debug UART引脚，然而板子出厂时这个引脚是不焊的，所以暂时没有办法使用串口登录。\nHDMI是使用提供的模块，也是通过串口debug UART连接，所以暂时也无法使用。\n只能使用SSH登录。\n由于身边没有路由器，无法使用有线网络。只能使用无线网卡连接网络。\n插上网卡，接上键盘，没有显示输出，只能盲打（大家如果能使用有线，nanopi会直接获取ip，就可以跳过这步了）\n```bash\n$ su root\nfa\n$ nmcli r wifi on //打开wifi\n$ nmcli dev //显示网络设备，无线网卡是wlan0\n$ nmcli dev wifi //扫描wifi信号\n$ nmcli dev wifi connect \"SSID\" password \"PASSWORD\" ifname wlan0 //连接无线网，SSID是无线网名称，PASSWORD是密码\n```\n等一会就会从oled上看到IP了，使用xshell能过ssh就可以登录了，登录名pi，密码pi。root的密码fa。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一3.png)\n这样就连接成功了。\n\n---\n### 2. 更新\n\n---\n更改更新源为国内源\n```bash\n$ sudo vim /etc/apt/sources.list\n//加入以下源\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe\n```\n有点慢，大家耐心等待（也可以是我的网慢）\n执行更新命令\n```bash\n$ sudo apt-get update\n$ sudo apt-get upgrade\n```\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi一4.png)\n\n---\n### 3.测网速\n---\n```bash\n$ sudo apt install speedtest-cli //安装\n$ sudo speedtest-cli //测试，有时可能测不出来\nRetrieving speedtest.net configuration...\nRetrieving speedtest.net server list...\nTesting from China Mobile Guangdong (223.104.236.97)...\nSelecting best server based on latency...\nHosted by ChinaMobile, Liaoning Branch,Dalian (Dalian) [247.24 km]: 75.654 ms\nTesting download speed........................................\nDownload: 2.42 Mbit/s\nTesting upload speed..................................................\nUpload: 0.76 Mbit/s\n我是热点连接，手机又被限速了所以很慢\n```\n我是热点连接，手机又被限速了所以很慢\n\n---\n大家可以为所欲为了，哈哈。\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","slug":"nanopi-neo2-black-上电使用","published":1,"updated":"2020-03-22T00:39:56.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzd60007pmjxa1we5p4i","content":"<p>最近上手一个小东西，nanopi neo2 black，非常精致，可以运行linux core ，可以运行Ubuntu 内核，感兴趣可以淘宝，或者<a href=\"http://nanopi.org/\" target=\"_blank\" rel=\"noopener\">官网</a>看看。</p>\n<hr>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%801.png\" alt></p>\n<a id=\"more\"></a>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%802.jpg\" alt><br>我买这个板子的时候，赠送了16GB的TF卡，里面有系统，所以我没有编译系统，关于系统的制作可以参考官方<a href=\"http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2_Black#Configure_System_with_npi-config\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<hr>\n<h3 id=\"1-通过ssh连接\"><a href=\"#1-通过ssh连接\" class=\"headerlink\" title=\"1. 通过ssh连接\"></a>1. 通过ssh连接</h3><hr>\n<p>登录方式有有三种：串口、HDMI、ssh<br>串口需要使用debug UART引脚，然而板子出厂时这个引脚是不焊的，所以暂时没有办法使用串口登录。<br>HDMI是使用提供的模块，也是通过串口debug UART连接，所以暂时也无法使用。<br>只能使用SSH登录。<br>由于身边没有路由器，无法使用有线网络。只能使用无线网卡连接网络。<br>插上网卡，接上键盘，没有显示输出，只能盲打（大家如果能使用有线，nanopi会直接获取ip，就可以跳过这步了）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ su root<br>fa<br>$ nmcli r wifi on //打开wifi<br>$ nmcli dev //显示网络设备，无线网卡是wlan0<br>$ nmcli dev wifi //扫描wifi信号<br>$ nmcli dev wifi connect <span class=\"hljs-string\">\"SSID\"</span> password <span class=\"hljs-string\">\"PASSWORD\"</span> ifname wlan0 //连接无线网，SSID是无线网名称，PASSWORD是密码<br></code></pre></td></tr></table></figure>\n<p>等一会就会从oled上看到IP了，使用xshell能过ssh就可以登录了，登录名pi，密码pi。root的密码fa。<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%803.png\" alt><br>这样就连接成功了。</p>\n<hr>\n<h3 id=\"2-更新\"><a href=\"#2-更新\" class=\"headerlink\" title=\"2. 更新\"></a>2. 更新</h3><hr>\n<p>更改更新源为国内源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo vim /etc/apt/sources.list<br>//加入以下源<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe<br></code></pre></td></tr></table></figure>\n<p>有点慢，大家耐心等待（也可以是我的网慢）<br>执行更新命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get update<br>$ sudo apt-get upgrade<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%804.png\" alt></p>\n<hr>\n<h3 id=\"3-测网速\"><a href=\"#3-测网速\" class=\"headerlink\" title=\"3.测网速\"></a>3.测网速</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt install speedtest-cli //安装<br>$ sudo speedtest-cli //测试，有时可能测不出来<br>Retrieving speedtest.net configuration...<br>Retrieving speedtest.net server list...<br>Testing from China Mobile Guangdong (223.104.236.97)...<br>Selecting best server based on latency...<br>Hosted by ChinaMobile, Liaoning Branch,Dalian (Dalian) [247.24 km]: 75.654 ms<br>Testing download speed........................................<br>Download: 2.42 Mbit/s<br>Testing upload speed..................................................<br>Upload: 0.76 Mbit/s<br>我是热点连接，手机又被限速了所以很慢<br></code></pre></td></tr></table></figure>\n<p>我是热点连接，手机又被限速了所以很慢</p>\n<hr>\n<p>大家可以为所欲为了，哈哈。</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":2169,"excerpt":"<p>最近上手一个小东西，nanopi neo2 black，非常精致，可以运行linux core ，可以运行Ubuntu 内核，感兴趣可以淘宝，或者<a href=\"http://nanopi.org/\" target=\"_blank\" rel=\"noopener\">官网</a>看看。</p>\n<hr>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%801.png\" alt></p>","more":"<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%802.jpg\" alt><br>我买这个板子的时候，赠送了16GB的TF卡，里面有系统，所以我没有编译系统，关于系统的制作可以参考官方<a href=\"http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2_Black#Configure_System_with_npi-config\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<hr>\n<h3 id=\"1-通过ssh连接\"><a href=\"#1-通过ssh连接\" class=\"headerlink\" title=\"1. 通过ssh连接\"></a>1. 通过ssh连接</h3><hr>\n<p>登录方式有有三种：串口、HDMI、ssh<br>串口需要使用debug UART引脚，然而板子出厂时这个引脚是不焊的，所以暂时没有办法使用串口登录。<br>HDMI是使用提供的模块，也是通过串口debug UART连接，所以暂时也无法使用。<br>只能使用SSH登录。<br>由于身边没有路由器，无法使用有线网络。只能使用无线网卡连接网络。<br>插上网卡，接上键盘，没有显示输出，只能盲打（大家如果能使用有线，nanopi会直接获取ip，就可以跳过这步了）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ su root<br>fa<br>$ nmcli r wifi on //打开wifi<br>$ nmcli dev //显示网络设备，无线网卡是wlan0<br>$ nmcli dev wifi //扫描wifi信号<br>$ nmcli dev wifi connect <span class=\"hljs-string\">\"SSID\"</span> password <span class=\"hljs-string\">\"PASSWORD\"</span> ifname wlan0 //连接无线网，SSID是无线网名称，PASSWORD是密码<br></code></pre></td></tr></table></figure>\n<p>等一会就会从oled上看到IP了，使用xshell能过ssh就可以登录了，登录名pi，密码pi。root的密码fa。<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%803.png\" alt><br>这样就连接成功了。</p>\n<hr>\n<h3 id=\"2-更新\"><a href=\"#2-更新\" class=\"headerlink\" title=\"2. 更新\"></a>2. 更新</h3><hr>\n<p>更改更新源为国内源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo vim /etc/apt/sources.list<br>//加入以下源<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe<br></code></pre></td></tr></table></figure>\n<p>有点慢，大家耐心等待（也可以是我的网慢）<br>执行更新命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get update<br>$ sudo apt-get upgrade<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%804.png\" alt></p>\n<hr>\n<h3 id=\"3-测网速\"><a href=\"#3-测网速\" class=\"headerlink\" title=\"3.测网速\"></a>3.测网速</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt install speedtest-cli //安装<br>$ sudo speedtest-cli //测试，有时可能测不出来<br>Retrieving speedtest.net configuration...<br>Retrieving speedtest.net server list...<br>Testing from China Mobile Guangdong (223.104.236.97)...<br>Selecting best server based on latency...<br>Hosted by ChinaMobile, Liaoning Branch,Dalian (Dalian) [247.24 km]: 75.654 ms<br>Testing download speed........................................<br>Download: 2.42 Mbit/s<br>Testing upload speed..................................................<br>Upload: 0.76 Mbit/s<br>我是热点连接，手机又被限速了所以很慢<br></code></pre></td></tr></table></figure>\n<p>我是热点连接，手机又被限速了所以很慢</p>\n<hr>\n<p>大家可以为所欲为了，哈哈。</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"nanopi_neo2_black_防烧屏设置","catalog":true,"date":"2020-02-28T07:07:46.000Z","subtitle":null,"_content":"oled长时间点亮一个点，付出现烧屏现象，为了避免烧屏。我们将oled设置为闪屏。\n\n---\n关于oled模块驱动的安装，可以参考[官方文档](http://wiki.friendlyarm.com/wiki/index.php/NanoHat_OLED)\n```bash\n$ git clone https://github.com/friendlyarm/NanoHatOLED.git\n$ cd NanoHatOLED\n$ sudo -H ./install.sh\n```\n<!--more-->\n---\n#### cd到oled源文件目录,修改两个文件\n```bash\n$ cd /root/NanoHatOLED/BakeBit/Software/Python\n//使用python控制\n$ sudo vim bakebit_nanohat_oled.py\n//加入一条语句\nwhile True:\n    try:        \n        oled.clear_raw() //加入这个语句，其他语句不变\n        draw_page()\n        lock.acquire()\n        page_index = pageIndex\n        lock.release()\n   \n$ sudo vim bakebit_128_64_oled.py\n//加入下面的函数\ndef clear_raw():\n    for j in range(8):\n        setTextXY(0,j)    \n        for i in range(16):  #clear all columns\n            putChar(' ')  \n```\n\n#### 清除原进程，启动新进程\n```bash\n$ ps aux | grep python //查看进程\nroot     25913  3.8  1.4  22380 14648 pts/0    S    14:23   0:35 python bakebit_nanohat_oled.py\npi       26617  0.0  0.0   7284   544 pts/0    S+   14:39   0:00 grep --color=auto python\n$ sudo pkill -f bakebit_nanohat_oled.py \n//结束进程\n$ sudo python bakebit_nanohat_oled.py\n// 重启进程 \n$ sudo python bakebit_nanohat_oled.py &\n// 重启进程 后台运行\n```\n\n---\n这样就不会烧屏了！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n","source":"_posts/nanopi-neo2-black-防烧屏设置.md","raw":"---\ntitle: nanopi_neo2_black_防烧屏设置\ncatalog: true\ndate: 2020-02-28 15:07:46\nsubtitle:\n\ntags:\n- nanopi\n- python\n- oled\ncategories:\n- nanopi\n---\noled长时间点亮一个点，付出现烧屏现象，为了避免烧屏。我们将oled设置为闪屏。\n\n---\n关于oled模块驱动的安装，可以参考[官方文档](http://wiki.friendlyarm.com/wiki/index.php/NanoHat_OLED)\n```bash\n$ git clone https://github.com/friendlyarm/NanoHatOLED.git\n$ cd NanoHatOLED\n$ sudo -H ./install.sh\n```\n<!--more-->\n---\n#### cd到oled源文件目录,修改两个文件\n```bash\n$ cd /root/NanoHatOLED/BakeBit/Software/Python\n//使用python控制\n$ sudo vim bakebit_nanohat_oled.py\n//加入一条语句\nwhile True:\n    try:        \n        oled.clear_raw() //加入这个语句，其他语句不变\n        draw_page()\n        lock.acquire()\n        page_index = pageIndex\n        lock.release()\n   \n$ sudo vim bakebit_128_64_oled.py\n//加入下面的函数\ndef clear_raw():\n    for j in range(8):\n        setTextXY(0,j)    \n        for i in range(16):  #clear all columns\n            putChar(' ')  \n```\n\n#### 清除原进程，启动新进程\n```bash\n$ ps aux | grep python //查看进程\nroot     25913  3.8  1.4  22380 14648 pts/0    S    14:23   0:35 python bakebit_nanohat_oled.py\npi       26617  0.0  0.0   7284   544 pts/0    S+   14:39   0:00 grep --color=auto python\n$ sudo pkill -f bakebit_nanohat_oled.py \n//结束进程\n$ sudo python bakebit_nanohat_oled.py\n// 重启进程 \n$ sudo python bakebit_nanohat_oled.py &\n// 重启进程 后台运行\n```\n\n---\n这样就不会烧屏了！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n","slug":"nanopi-neo2-black-防烧屏设置","published":1,"updated":"2020-03-22T00:39:56.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzdl0009pmjxd1ga4j2t","content":"<p>oled长时间点亮一个点，付出现烧屏现象，为了避免烧屏。我们将oled设置为闪屏。</p>\n<hr>\n<p>关于oled模块驱动的安装，可以参考<a href=\"http://wiki.friendlyarm.com/wiki/index.php/NanoHat_OLED\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git <span class=\"hljs-built_in\">clone</span> https://github.com/friendlyarm/NanoHatOLED.git<br>$ <span class=\"hljs-built_in\">cd</span> NanoHatOLED<br>$ sudo -H ./install.sh<br></code></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<hr>\n<h4 id=\"cd到oled源文件目录-修改两个文件\"><a href=\"#cd到oled源文件目录-修改两个文件\" class=\"headerlink\" title=\"cd到oled源文件目录,修改两个文件\"></a>cd到oled源文件目录,修改两个文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> /root/NanoHatOLED/BakeBit/Software/Python<br>//使用python控制<br>$ sudo vim bakebit_nanohat_oled.py<br>//加入一条语句<br><span class=\"hljs-keyword\">while</span> True:<br>    try:        <br>        oled.clear_raw() //加入这个语句，其他语句不变<br>        draw_page()<br>        lock.acquire()<br>        page_index = pageIndex<br>        lock.release()<br>   <br>$ sudo vim bakebit_128_64_oled.py<br>//加入下面的函数<br>def clear_raw():<br>    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> range(8):<br>        setTextXY(0,j)    <br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(16):  <span class=\"hljs-comment\">#clear all columns</span><br>            putChar(<span class=\"hljs-string\">' '</span>)<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"清除原进程，启动新进程\"><a href=\"#清除原进程，启动新进程\" class=\"headerlink\" title=\"清除原进程，启动新进程\"></a>清除原进程，启动新进程</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ps aux | grep python //查看进程<br>root     25913  3.8  1.4  22380 14648 pts/0    S    14:23   0:35 python bakebit_nanohat_oled.py<br>pi       26617  0.0  0.0   7284   544 pts/0    S+   14:39   0:00 grep --color=auto python<br>$ sudo pkill -f bakebit_nanohat_oled.py <br>//结束进程<br>$ sudo python bakebit_nanohat_oled.py<br>// 重启进程 <br>$ sudo python bakebit_nanohat_oled.py &amp;<br>// 重启进程 后台运行<br></code></pre></td></tr></table></figure>\n\n<hr>\n<p>这样就不会烧屏了！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":868,"excerpt":"<p>oled长时间点亮一个点，付出现烧屏现象，为了避免烧屏。我们将oled设置为闪屏。</p>\n<hr>\n<p>关于oled模块驱动的安装，可以参考<a href=\"http://wiki.friendlyarm.com/wiki/index.php/NanoHat_OLED\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git <span class=\"hljs-built_in\">clone</span> https://github.com/friendlyarm/NanoHatOLED.git<br>$ <span class=\"hljs-built_in\">cd</span> NanoHatOLED<br>$ sudo -H ./install.sh<br></code></pre></td></tr></table></figure>","more":"<hr>\n<h4 id=\"cd到oled源文件目录-修改两个文件\"><a href=\"#cd到oled源文件目录-修改两个文件\" class=\"headerlink\" title=\"cd到oled源文件目录,修改两个文件\"></a>cd到oled源文件目录,修改两个文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> /root/NanoHatOLED/BakeBit/Software/Python<br>//使用python控制<br>$ sudo vim bakebit_nanohat_oled.py<br>//加入一条语句<br><span class=\"hljs-keyword\">while</span> True:<br>    try:        <br>        oled.clear_raw() //加入这个语句，其他语句不变<br>        draw_page()<br>        lock.acquire()<br>        page_index = pageIndex<br>        lock.release()<br>   <br>$ sudo vim bakebit_128_64_oled.py<br>//加入下面的函数<br>def clear_raw():<br>    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> range(8):<br>        setTextXY(0,j)    <br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(16):  <span class=\"hljs-comment\">#clear all columns</span><br>            putChar(<span class=\"hljs-string\">' '</span>)<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"清除原进程，启动新进程\"><a href=\"#清除原进程，启动新进程\" class=\"headerlink\" title=\"清除原进程，启动新进程\"></a>清除原进程，启动新进程</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ps aux | grep python //查看进程<br>root     25913  3.8  1.4  22380 14648 pts/0    S    14:23   0:35 python bakebit_nanohat_oled.py<br>pi       26617  0.0  0.0   7284   544 pts/0    S+   14:39   0:00 grep --color=auto python<br>$ sudo pkill -f bakebit_nanohat_oled.py <br>//结束进程<br>$ sudo python bakebit_nanohat_oled.py<br>// 重启进程 <br>$ sudo python bakebit_nanohat_oled.py &amp;<br>// 重启进程 后台运行<br></code></pre></td></tr></table></figure>\n\n<hr>\n<p>这样就不会烧屏了！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"nanopi neo2 black 音乐闹钟","catalog":true,"date":"2020-02-28T02:37:00.000Z","subtitle":null,"_content":"nanopi neo2 black 有音频接口，可以用它来放个音乐，折腾一下做个音乐闹钟吧。\n\n---\n### 首先查看cron是否运行\n---\n```bash\n$ ps -ef | grep cron //查看cron是否运行\nroot       561     1  0 15:52 ?        00:00:00 /usr/sbin/cron -f\npi       18668 18655  0 21:07 pts/0    00:00:00 grep --color=auto cron\n```\n<!--more-->\n没有运行的话，启动一下\n```bash\n$ sudo service cron start //启动命令\n$ sudo service cron stop  //停止命令\n$ sudo service cron restart  //重启命令\n\n```\n---\n### 设置定时播放音乐\n\n---\n安装sox用来播放mp3音乐\n```bash\n$ sudo apt-get install sox libsox-fmt-all\n//libsox-fmt-all包含解码器\n```\n可以先播放一个音乐试试\n```bash\n$ play XXX.mp3\n```\n设置定时播放音乐\n```bash\n$ crontab -e //第一次使用会让你选择编辑器，选择vim就可以\n//在文件末尾加\n30 21 * * * play /home/pi/Music/XXX.mp3\n//每天21:30播放音乐XXX.mp3\n```\n五个* * * * *\n对应的分别是 分 时 天 月 周\n重启一个cron服务就可以了\n```bash\n$ sudo service cron restart\n$ service cron restart\n```\n---\n大家每天定时听音乐吧！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","source":"_posts/nanopi-neo2-black-音乐闹钟.md","raw":"---\ntitle: nanopi neo2 black 音乐闹钟\ncatalog: true\ndate: 2020-02-28 10:37:00\nsubtitle:\n\ntags:\n- nanopi\n- ubuntu\n- 音乐闹钟\ncategories:\n- nanopi\n---\nnanopi neo2 black 有音频接口，可以用它来放个音乐，折腾一下做个音乐闹钟吧。\n\n---\n### 首先查看cron是否运行\n---\n```bash\n$ ps -ef | grep cron //查看cron是否运行\nroot       561     1  0 15:52 ?        00:00:00 /usr/sbin/cron -f\npi       18668 18655  0 21:07 pts/0    00:00:00 grep --color=auto cron\n```\n<!--more-->\n没有运行的话，启动一下\n```bash\n$ sudo service cron start //启动命令\n$ sudo service cron stop  //停止命令\n$ sudo service cron restart  //重启命令\n\n```\n---\n### 设置定时播放音乐\n\n---\n安装sox用来播放mp3音乐\n```bash\n$ sudo apt-get install sox libsox-fmt-all\n//libsox-fmt-all包含解码器\n```\n可以先播放一个音乐试试\n```bash\n$ play XXX.mp3\n```\n设置定时播放音乐\n```bash\n$ crontab -e //第一次使用会让你选择编辑器，选择vim就可以\n//在文件末尾加\n30 21 * * * play /home/pi/Music/XXX.mp3\n//每天21:30播放音乐XXX.mp3\n```\n五个* * * * *\n对应的分别是 分 时 天 月 周\n重启一个cron服务就可以了\n```bash\n$ sudo service cron restart\n$ service cron restart\n```\n---\n大家每天定时听音乐吧！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","slug":"nanopi-neo2-black-音乐闹钟","published":1,"updated":"2020-03-22T00:40:28.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzeg000apmjxcfd474ed","content":"<p>nanopi neo2 black 有音频接口，可以用它来放个音乐，折腾一下做个音乐闹钟吧。</p>\n<hr>\n<h3 id=\"首先查看cron是否运行\"><a href=\"#首先查看cron是否运行\" class=\"headerlink\" title=\"首先查看cron是否运行\"></a>首先查看cron是否运行</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ps -ef | grep cron //查看cron是否运行<br>root       561     1  0 15:52 ?        00:00:00 /usr/sbin/cron -f<br>pi       18668 18655  0 21:07 pts/0    00:00:00 grep --color=auto cron<br></code></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>没有运行的话，启动一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo service cron start //启动命令<br>$ sudo service cron stop  //停止命令<br>$ sudo service cron restart  //重启命令<br></code></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"设置定时播放音乐\"><a href=\"#设置定时播放音乐\" class=\"headerlink\" title=\"设置定时播放音乐\"></a>设置定时播放音乐</h3><hr>\n<p>安装sox用来播放mp3音乐</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install sox libsox-fmt-all<br>//libsox-fmt-all包含解码器<br></code></pre></td></tr></table></figure>\n<p>可以先播放一个音乐试试</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ play XXX.mp3<br></code></pre></td></tr></table></figure>\n<p>设置定时播放音乐</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ crontab -e //第一次使用会让你选择编辑器，选择vim就可以<br>//在文件末尾加<br>30 21 * * * play /home/pi/Music/XXX.mp3<br>//每天21:30播放音乐XXX.mp3<br></code></pre></td></tr></table></figure>\n<p>五个* * * * *<br>对应的分别是 分 时 天 月 周<br>重启一个cron服务就可以了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo service cron restart<br>$ service cron restart<br></code></pre></td></tr></table></figure>\n<hr>\n<p>大家每天定时听音乐吧！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":602,"excerpt":"<p>nanopi neo2 black 有音频接口，可以用它来放个音乐，折腾一下做个音乐闹钟吧。</p>\n<hr>\n<h3 id=\"首先查看cron是否运行\"><a href=\"#首先查看cron是否运行\" class=\"headerlink\" title=\"首先查看cron是否运行\"></a>首先查看cron是否运行</h3><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ps -ef | grep cron //查看cron是否运行<br>root       561     1  0 15:52 ?        00:00:00 /usr/sbin/cron -f<br>pi       18668 18655  0 21:07 pts/0    00:00:00 grep --color=auto cron<br></code></pre></td></tr></table></figure>","more":"<p>没有运行的话，启动一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo service cron start //启动命令<br>$ sudo service cron stop  //停止命令<br>$ sudo service cron restart  //重启命令<br></code></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"设置定时播放音乐\"><a href=\"#设置定时播放音乐\" class=\"headerlink\" title=\"设置定时播放音乐\"></a>设置定时播放音乐</h3><hr>\n<p>安装sox用来播放mp3音乐</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install sox libsox-fmt-all<br>//libsox-fmt-all包含解码器<br></code></pre></td></tr></table></figure>\n<p>可以先播放一个音乐试试</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ play XXX.mp3<br></code></pre></td></tr></table></figure>\n<p>设置定时播放音乐</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ crontab -e //第一次使用会让你选择编辑器，选择vim就可以<br>//在文件末尾加<br>30 21 * * * play /home/pi/Music/XXX.mp3<br>//每天21:30播放音乐XXX.mp3<br></code></pre></td></tr></table></figure>\n<p>五个* * * * *<br>对应的分别是 分 时 天 月 周<br>重启一个cron服务就可以了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo service cron restart<br>$ service cron restart<br></code></pre></td></tr></table></figure>\n<hr>\n<p>大家每天定时听音乐吧！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"nanopi压力测试和散热能力","catalog":true,"date":"2020-03-04T12:11:50.000Z","subtitle":null,"_content":"上手nanopi后，一直好奇它的H5cpu性能怎么样和铝壳散热能力怎么样，下面我们来大概看一下。做一下压力测试。\n\n---\n\n### 安装两个软件\n\n---\n\n==stress==：对CPU施压\n\n```bash\n$ sudo apt-get install stress\n```\n\n<!--more-->\n\n==htop==:CPU监控\n\n```bash\n$ sudo apt-get install htop\n```\n\n最好是更新一下系统。\n\n---\n\n### 开始测试\n\n---\n\n先连接一个ssh\n\n```bash\n$ sudo stress -c 4 -t 10000 -m 2 -d 2   \n//4代表核数，10000代表时间,2代表内存进程，2代表硬盘进程\nstress: info: [11352] dispatching hogs: 4 cpu, 0 io, 2 vm, 2 hdd\n```\n\n\n\n内存和硬盘设置为2 个，如果设置为4 的话就会影响nanopi的ssh进程。\n\n查看CPU情况，新打开一个SSH，\n\n```bash\n$ htop\n```\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu1.png)\n\n这是没有压力测试时候的情况，正常温度23左右，下面我们来进行压力测试。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu2.png)\n\n一段时间后，温度稳定在60度，4个CPU均跑满了，内存用了一半。铝壳的散热现在还是压的住的。功率增加了一倍多。\n\n```bash\n$ sudo stress -c 4 -t 10000 -m 3 -d 2 \n```\n\n此时oled程序基本卡住，cpu跑满，内存700M左右，温度的话，铝壳散热是盖住了，大约70度，具体的就不知道了，oled显示已经乱了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu3.png)\n\n开始真正的烧机。\n\n```bash\n$ sudo stress -c 4 -t 10000 -m 4 -d 4 \n```\n\nssh已经开始连接不稳定，oled彻底罢工。温度还可以，\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu4.png)\n\n作死跑了一个5cpu进程，还在运行，但其他进程已经不能正常工作了。\n\n总体来说，这个nanopi还可以，铝壳散热完全盖的住。4核的H5也是完全ok。\n\n---\n\n【参考】[https://blog.csdn.net/qq_42869041/article/details/83834584](https://blog.csdn.net/qq_42869041/article/details/83834584)\n\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n","source":"_posts/nanopi压力测试和散热能力.md","raw":"---\ntitle: \"nanopi压力测试和散热能力\"\ncatalog: true\ndate: 2020-03-04 20:11:50\nsubtitle: \n\ntags:\n- nanopi\n- H5 cpu\n- 压力测试\ncategories:\n- nanopi\n---\n上手nanopi后，一直好奇它的H5cpu性能怎么样和铝壳散热能力怎么样，下面我们来大概看一下。做一下压力测试。\n\n---\n\n### 安装两个软件\n\n---\n\n==stress==：对CPU施压\n\n```bash\n$ sudo apt-get install stress\n```\n\n<!--more-->\n\n==htop==:CPU监控\n\n```bash\n$ sudo apt-get install htop\n```\n\n最好是更新一下系统。\n\n---\n\n### 开始测试\n\n---\n\n先连接一个ssh\n\n```bash\n$ sudo stress -c 4 -t 10000 -m 2 -d 2   \n//4代表核数，10000代表时间,2代表内存进程，2代表硬盘进程\nstress: info: [11352] dispatching hogs: 4 cpu, 0 io, 2 vm, 2 hdd\n```\n\n\n\n内存和硬盘设置为2 个，如果设置为4 的话就会影响nanopi的ssh进程。\n\n查看CPU情况，新打开一个SSH，\n\n```bash\n$ htop\n```\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu1.png)\n\n这是没有压力测试时候的情况，正常温度23左右，下面我们来进行压力测试。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu2.png)\n\n一段时间后，温度稳定在60度，4个CPU均跑满了，内存用了一半。铝壳的散热现在还是压的住的。功率增加了一倍多。\n\n```bash\n$ sudo stress -c 4 -t 10000 -m 3 -d 2 \n```\n\n此时oled程序基本卡住，cpu跑满，内存700M左右，温度的话，铝壳散热是盖住了，大约70度，具体的就不知道了，oled显示已经乱了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu3.png)\n\n开始真正的烧机。\n\n```bash\n$ sudo stress -c 4 -t 10000 -m 4 -d 4 \n```\n\nssh已经开始连接不稳定，oled彻底罢工。温度还可以，\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu4.png)\n\n作死跑了一个5cpu进程，还在运行，但其他进程已经不能正常工作了。\n\n总体来说，这个nanopi还可以，铝壳散热完全盖的住。4核的H5也是完全ok。\n\n---\n\n【参考】[https://blog.csdn.net/qq_42869041/article/details/83834584](https://blog.csdn.net/qq_42869041/article/details/83834584)\n\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n","slug":"nanopi压力测试和散热能力","published":1,"updated":"2020-03-22T00:41:51.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzek000cpmjxbr205n9p","content":"<p>上手nanopi后，一直好奇它的H5cpu性能怎么样和铝壳散热能力怎么样，下面我们来大概看一下。做一下压力测试。</p>\n<hr>\n<h3 id=\"安装两个软件\"><a href=\"#安装两个软件\" class=\"headerlink\" title=\"安装两个软件\"></a>安装两个软件</h3><hr>\n<p>==stress==：对CPU施压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install stress<br></code></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>==htop==:CPU监控</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install htop<br></code></pre></td></tr></table></figure>\n\n<p>最好是更新一下系统。</p>\n<hr>\n<h3 id=\"开始测试\"><a href=\"#开始测试\" class=\"headerlink\" title=\"开始测试\"></a>开始测试</h3><hr>\n<p>先连接一个ssh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo stress -c 4 -t 10000 -m 2 -d 2   <br>//4代表核数，10000代表时间,2代表内存进程，2代表硬盘进程<br>stress: info: [11352] dispatching hogs: 4 cpu, 0 io, 2 vm, 2 hdd<br></code></pre></td></tr></table></figure>\n\n\n\n<p>内存和硬盘设置为2 个，如果设置为4 的话就会影响nanopi的ssh进程。</p>\n<p>查看CPU情况，新打开一个SSH，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ htop<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu1.png\" alt></p>\n<p>这是没有压力测试时候的情况，正常温度23左右，下面我们来进行压力测试。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu2.png\" alt></p>\n<p>一段时间后，温度稳定在60度，4个CPU均跑满了，内存用了一半。铝壳的散热现在还是压的住的。功率增加了一倍多。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo stress -c 4 -t 10000 -m 3 -d 2<br></code></pre></td></tr></table></figure>\n\n<p>此时oled程序基本卡住，cpu跑满，内存700M左右，温度的话，铝壳散热是盖住了，大约70度，具体的就不知道了，oled显示已经乱了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu3.png\" alt></p>\n<p>开始真正的烧机。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo stress -c 4 -t 10000 -m 4 -d 4<br></code></pre></td></tr></table></figure>\n\n<p>ssh已经开始连接不稳定，oled彻底罢工。温度还可以，</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu4.png\" alt></p>\n<p>作死跑了一个5cpu进程，还在运行，但其他进程已经不能正常工作了。</p>\n<p>总体来说，这个nanopi还可以，铝壳散热完全盖的住。4核的H5也是完全ok。</p>\n<hr>\n<p>【参考】<a href=\"https://blog.csdn.net/qq_42869041/article/details/83834584\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_42869041/article/details/83834584</a></p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":755,"excerpt":"<p>上手nanopi后，一直好奇它的H5cpu性能怎么样和铝壳散热能力怎么样，下面我们来大概看一下。做一下压力测试。</p>\n<hr>\n<h3 id=\"安装两个软件\"><a href=\"#安装两个软件\" class=\"headerlink\" title=\"安装两个软件\"></a>安装两个软件</h3><hr>\n<p>==stress==：对CPU施压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install stress<br></code></pre></td></tr></table></figure>","more":"<p>==htop==:CPU监控</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install htop<br></code></pre></td></tr></table></figure>\n\n<p>最好是更新一下系统。</p>\n<hr>\n<h3 id=\"开始测试\"><a href=\"#开始测试\" class=\"headerlink\" title=\"开始测试\"></a>开始测试</h3><hr>\n<p>先连接一个ssh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo stress -c 4 -t 10000 -m 2 -d 2   <br>//4代表核数，10000代表时间,2代表内存进程，2代表硬盘进程<br>stress: info: [11352] dispatching hogs: 4 cpu, 0 io, 2 vm, 2 hdd<br></code></pre></td></tr></table></figure>\n\n\n\n<p>内存和硬盘设置为2 个，如果设置为4 的话就会影响nanopi的ssh进程。</p>\n<p>查看CPU情况，新打开一个SSH，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ htop<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu1.png\" alt></p>\n<p>这是没有压力测试时候的情况，正常温度23左右，下面我们来进行压力测试。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu2.png\" alt></p>\n<p>一段时间后，温度稳定在60度，4个CPU均跑满了，内存用了一半。铝壳的散热现在还是压的住的。功率增加了一倍多。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo stress -c 4 -t 10000 -m 3 -d 2<br></code></pre></td></tr></table></figure>\n\n<p>此时oled程序基本卡住，cpu跑满，内存700M左右，温度的话，铝壳散热是盖住了，大约70度，具体的就不知道了，oled显示已经乱了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu3.png\" alt></p>\n<p>开始真正的烧机。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo stress -c 4 -t 10000 -m 4 -d 4<br></code></pre></td></tr></table></figure>\n\n<p>ssh已经开始连接不稳定，oled彻底罢工。温度还可以，</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu4.png\" alt></p>\n<p>作死跑了一个5cpu进程，还在运行，但其他进程已经不能正常工作了。</p>\n<p>总体来说，这个nanopi还可以，铝壳散热完全盖的住。4核的H5也是完全ok。</p>\n<hr>\n<p>【参考】<a href=\"https://blog.csdn.net/qq_42869041/article/details/83834584\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_42869041/article/details/83834584</a></p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"nanopi性能测试unixbench","catalog":true,"date":"2020-03-12T12:11:50.000Z","subtitle":null,"_content":"入手nanopi不知道它的性能怎么样，下面我们来使用unixbench，对nanopi跑分测试一下\n\n---\n\n只需要简单的三个命令就可以\n\n```zsh\n$ wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh\n$ chmod +x unixbench.sh\n$ sudo ./unixbench.sh  //会自动检查依赖\n```\n<!--more-->\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench1.png)\n\n时间有点长，稍等一会\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench2.png)\n\n```zsh\n========================================================================\n   BYTE UNIX Benchmarks (Version 5.1.3)\n\n   System: NanoPi-NEO2-Black: GNU/Linux\n   OS: GNU/Linux -- 4.14.111 -- #1 SMP Thu Dec 19 19:12:27 CST 2019\n   Machine: aarch64 (aarch64)\n   Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\")\n   10:22:26 up 18 min,  3 users,  load average: 0.68, 0.52, 0.32; runlevel 5\n\n------------------------------------------------------------------------\nBenchmark Run: Fri Mar 13 2020 10:22:26 - 10:50:55\n0 CPUs in system; running 1 parallel copy of tests\n\nDhrystone 2 using register variables        6580436.9 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     1155.9 MWIPS (10.0 s, 7 samples)\nExecl Throughput                               1316.7 lps   (29.9 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        145034.8 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks           45162.1 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks        351000.7 KBps  (30.0 s, 2 samples)\nPipe Throughput                              440132.8 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                  66182.3 lps   (10.0 s, 7 samples)\nProcess Creation                               2560.7 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   1991.9 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                    656.1 lpm   (60.1 s, 2 samples)\nSystem Call Overhead                         785715.5 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0    6580436.9    563.9\nDouble-Precision Whetstone                       55.0       1155.9    210.2\nExecl Throughput                                 43.0       1316.7    306.2\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     145034.8    366.2\nFile Copy 256 bufsize 500 maxblocks            1655.0      45162.1    272.9\nFile Copy 4096 bufsize 8000 maxblocks          5800.0     351000.7    605.2\nPipe Throughput                               12440.0     440132.8    353.8\nPipe-based Context Switching                   4000.0      66182.3    165.5\nProcess Creation                                126.0       2560.7    203.2\nShell Scripts (1 concurrent)                     42.4       1991.9    469.8\nShell Scripts (8 concurrent)                      6.0        656.1   1093.5\nSystem Call Overhead                          15000.0     785715.5    523.8\n                                                                   ========\nSystem Benchmarks Index Score                                         372.0\n\n\n\n======= Script description and score comparison completed! ======= \n\n```\n\n这是结果，分不是很高。\n\n---\n\n\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","source":"_posts/nanopi性能测试UnixBench.md","raw":"---\ntitle: \"nanopi性能测试unixbench\"\ncatalog: true\ndate: 2020-03-12 20:11:50\nsubtitle: \n\ntags:\n- unixbench\n- nanopi\ncategories:\n- nanopi\n---\n入手nanopi不知道它的性能怎么样，下面我们来使用unixbench，对nanopi跑分测试一下\n\n---\n\n只需要简单的三个命令就可以\n\n```zsh\n$ wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh\n$ chmod +x unixbench.sh\n$ sudo ./unixbench.sh  //会自动检查依赖\n```\n<!--more-->\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench1.png)\n\n时间有点长，稍等一会\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench2.png)\n\n```zsh\n========================================================================\n   BYTE UNIX Benchmarks (Version 5.1.3)\n\n   System: NanoPi-NEO2-Black: GNU/Linux\n   OS: GNU/Linux -- 4.14.111 -- #1 SMP Thu Dec 19 19:12:27 CST 2019\n   Machine: aarch64 (aarch64)\n   Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\")\n   10:22:26 up 18 min,  3 users,  load average: 0.68, 0.52, 0.32; runlevel 5\n\n------------------------------------------------------------------------\nBenchmark Run: Fri Mar 13 2020 10:22:26 - 10:50:55\n0 CPUs in system; running 1 parallel copy of tests\n\nDhrystone 2 using register variables        6580436.9 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     1155.9 MWIPS (10.0 s, 7 samples)\nExecl Throughput                               1316.7 lps   (29.9 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        145034.8 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks           45162.1 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks        351000.7 KBps  (30.0 s, 2 samples)\nPipe Throughput                              440132.8 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                  66182.3 lps   (10.0 s, 7 samples)\nProcess Creation                               2560.7 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   1991.9 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                    656.1 lpm   (60.1 s, 2 samples)\nSystem Call Overhead                         785715.5 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0    6580436.9    563.9\nDouble-Precision Whetstone                       55.0       1155.9    210.2\nExecl Throughput                                 43.0       1316.7    306.2\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     145034.8    366.2\nFile Copy 256 bufsize 500 maxblocks            1655.0      45162.1    272.9\nFile Copy 4096 bufsize 8000 maxblocks          5800.0     351000.7    605.2\nPipe Throughput                               12440.0     440132.8    353.8\nPipe-based Context Switching                   4000.0      66182.3    165.5\nProcess Creation                                126.0       2560.7    203.2\nShell Scripts (1 concurrent)                     42.4       1991.9    469.8\nShell Scripts (8 concurrent)                      6.0        656.1   1093.5\nSystem Call Overhead                          15000.0     785715.5    523.8\n                                                                   ========\nSystem Benchmarks Index Score                                         372.0\n\n\n\n======= Script description and score comparison completed! ======= \n\n```\n\n这是结果，分不是很高。\n\n---\n\n\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","slug":"nanopi性能测试UnixBench","published":1,"updated":"2020-03-22T00:41:28.253Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzem000epmjx0eog3kjx","content":"<p>入手nanopi不知道它的性能怎么样，下面我们来使用unixbench，对nanopi跑分测试一下</p>\n<hr>\n<p>只需要简单的三个命令就可以</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs zsh\">$ wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh<br>$ chmod +x unixbench.sh<br>$ sudo ./unixbench.sh  //会自动检查依赖<br></code></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench1.png\" alt></p>\n<p>时间有点长，稍等一会</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench2.png\" alt></p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs zsh\">========================================================================<br>   BYTE UNIX Benchmarks (Version 5.1.3)<br><br>   System: NanoPi-NEO2-Black: GNU/Linux<br>   OS: GNU/Linux -- 4.14.111 -- <span class=\"hljs-comment\">#1 SMP Thu Dec 19 19:12:27 CST 2019</span><br>   Machine: aarch64 (aarch64)<br>   Language: en_US.utf8 (charmap=<span class=\"hljs-string\">\"UTF-8\"</span>, collate=<span class=\"hljs-string\">\"UTF-8\"</span>)<br>   10:22:26 up 18 min,  3 users,  load average: 0.68, 0.52, 0.32; runlevel 5<br><br>------------------------------------------------------------------------<br>Benchmark Run: Fri Mar 13 2020 10:22:26 - 10:50:55<br>0 CPUs <span class=\"hljs-keyword\">in</span> system; running 1 parallel copy of tests<br><br>Dhrystone 2 using register variables        6580436.9 lps   (10.0 s, 7 samples)<br>Double-Precision Whetstone                     1155.9 MWIPS (10.0 s, 7 samples)<br>Execl Throughput                               1316.7 lps   (29.9 s, 2 samples)<br>File Copy 1024 bufsize 2000 maxblocks        145034.8 KBps  (30.0 s, 2 samples)<br>File Copy 256 bufsize 500 maxblocks           45162.1 KBps  (30.0 s, 2 samples)<br>File Copy 4096 bufsize 8000 maxblocks        351000.7 KBps  (30.0 s, 2 samples)<br>Pipe Throughput                              440132.8 lps   (10.0 s, 7 samples)<br>Pipe-based Context Switching                  66182.3 lps   (10.0 s, 7 samples)<br>Process Creation                               2560.7 lps   (30.0 s, 2 samples)<br>Shell Scripts (1 concurrent)                   1991.9 lpm   (60.0 s, 2 samples)<br>Shell Scripts (8 concurrent)                    656.1 lpm   (60.1 s, 2 samples)<br>System Call Overhead                         785715.5 lps   (10.0 s, 7 samples)<br><br>System Benchmarks Index Values               BASELINE       RESULT    INDEX<br>Dhrystone 2 using register variables         116700.0    6580436.9    563.9<br>Double-Precision Whetstone                       55.0       1155.9    210.2<br>Execl Throughput                                 43.0       1316.7    306.2<br>File Copy 1024 bufsize 2000 maxblocks          3960.0     145034.8    366.2<br>File Copy 256 bufsize 500 maxblocks            1655.0      45162.1    272.9<br>File Copy 4096 bufsize 8000 maxblocks          5800.0     351000.7    605.2<br>Pipe Throughput                               12440.0     440132.8    353.8<br>Pipe-based Context Switching                   4000.0      66182.3    165.5<br>Process Creation                                126.0       2560.7    203.2<br>Shell Scripts (1 concurrent)                     42.4       1991.9    469.8<br>Shell Scripts (8 concurrent)                      6.0        656.1   1093.5<br>System Call Overhead                          15000.0     785715.5    523.8<br>                                                                   ========<br>System Benchmarks Index Score                                         372.0<br><br><br><br>======= Script description and score comparison completed! =======<br></code></pre></td></tr></table></figure>\n\n<p>这是结果，分不是很高。</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":2062,"excerpt":"<p>入手nanopi不知道它的性能怎么样，下面我们来使用unixbench，对nanopi跑分测试一下</p>\n<hr>\n<p>只需要简单的三个命令就可以</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs zsh\">$ wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh<br>$ chmod +x unixbench.sh<br>$ sudo ./unixbench.sh  //会自动检查依赖<br></code></pre></td></tr></table></figure>","more":"<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench1.png\" alt></p>\n<p>时间有点长，稍等一会</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench2.png\" alt></p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs zsh\">========================================================================<br>   BYTE UNIX Benchmarks (Version 5.1.3)<br><br>   System: NanoPi-NEO2-Black: GNU/Linux<br>   OS: GNU/Linux -- 4.14.111 -- <span class=\"hljs-comment\">#1 SMP Thu Dec 19 19:12:27 CST 2019</span><br>   Machine: aarch64 (aarch64)<br>   Language: en_US.utf8 (charmap=<span class=\"hljs-string\">\"UTF-8\"</span>, collate=<span class=\"hljs-string\">\"UTF-8\"</span>)<br>   10:22:26 up 18 min,  3 users,  load average: 0.68, 0.52, 0.32; runlevel 5<br><br>------------------------------------------------------------------------<br>Benchmark Run: Fri Mar 13 2020 10:22:26 - 10:50:55<br>0 CPUs <span class=\"hljs-keyword\">in</span> system; running 1 parallel copy of tests<br><br>Dhrystone 2 using register variables        6580436.9 lps   (10.0 s, 7 samples)<br>Double-Precision Whetstone                     1155.9 MWIPS (10.0 s, 7 samples)<br>Execl Throughput                               1316.7 lps   (29.9 s, 2 samples)<br>File Copy 1024 bufsize 2000 maxblocks        145034.8 KBps  (30.0 s, 2 samples)<br>File Copy 256 bufsize 500 maxblocks           45162.1 KBps  (30.0 s, 2 samples)<br>File Copy 4096 bufsize 8000 maxblocks        351000.7 KBps  (30.0 s, 2 samples)<br>Pipe Throughput                              440132.8 lps   (10.0 s, 7 samples)<br>Pipe-based Context Switching                  66182.3 lps   (10.0 s, 7 samples)<br>Process Creation                               2560.7 lps   (30.0 s, 2 samples)<br>Shell Scripts (1 concurrent)                   1991.9 lpm   (60.0 s, 2 samples)<br>Shell Scripts (8 concurrent)                    656.1 lpm   (60.1 s, 2 samples)<br>System Call Overhead                         785715.5 lps   (10.0 s, 7 samples)<br><br>System Benchmarks Index Values               BASELINE       RESULT    INDEX<br>Dhrystone 2 using register variables         116700.0    6580436.9    563.9<br>Double-Precision Whetstone                       55.0       1155.9    210.2<br>Execl Throughput                                 43.0       1316.7    306.2<br>File Copy 1024 bufsize 2000 maxblocks          3960.0     145034.8    366.2<br>File Copy 256 bufsize 500 maxblocks            1655.0      45162.1    272.9<br>File Copy 4096 bufsize 8000 maxblocks          5800.0     351000.7    605.2<br>Pipe Throughput                               12440.0     440132.8    353.8<br>Pipe-based Context Switching                   4000.0      66182.3    165.5<br>Process Creation                                126.0       2560.7    203.2<br>Shell Scripts (1 concurrent)                     42.4       1991.9    469.8<br>Shell Scripts (8 concurrent)                      6.0        656.1   1093.5<br>System Call Overhead                          15000.0     785715.5    523.8<br>                                                                   ========<br>System Benchmarks Index Score                                         372.0<br><br><br><br>======= Script description and score comparison completed! =======<br></code></pre></td></tr></table></figure>\n\n<p>这是结果，分不是很高。</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"ubuntu下将文件备份到github","date":"2020-02-27T07:34:12.000Z","catalog":true,"subtitle":null,"_content":"将hexo博客目录备份到github，以防意外删除文件，这样也方便在其他设备上写博客\n\n---\n\n\n### 1. 安装git\n\n```bash\n$ sudo apt-get install git\n```\n<!--more-->\n### 2.生成ssh key \n使用命令\n```bash\n$ ssh-keygen -t rsa -C “github username”\n```\n会生成下面三个文件\n\n```bash\nid_rsa  id_rsa.pub  known_hosts\n```\n### 3.github setting\n登录github，setting,左边有SSH and GPG keys 选项，点new\nssh key。title随便写，key 填写id_rsa.pub文件中的内容。\n新建一个仓库用来备份。\n测试ssh key是否成功\n\n```bash\n$ ssh -T git@github.com\nHi ccbirds! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n### 4.在需要备份的目录下初始化git\n```bash\n$ git init\nReinitialized existing Git repository in /home/czq/blog/.git/\n```\n### 5.设置git\n```bash\n$ git config user.name “github user name” \n$ git config user.email “github email”\n$ git config user.name //查看设置的name\n$ git config user.email //查看设置的邮箱\n$ git remote add origin https://github.com/ccbirds/hexo.git //github 仓库地址 \n```\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Github1.png)\n如果显示origin已经存在,删除origin，并重新设置origin\n```bash\n$ git remote rm origin \n$ git remote add origin https://github.com/ccbirds/hexo.git\n```\n### 6.添加文件\n```bash\n$ git add test.txt //指定一个文件\n$ git add .    //目录下的所有文件\n$ git commit -m \"2020-02-27\" //备注\n$ git push origin master\nUsername for 'https://github.com': ccbirds //输入用户名\nPassword for 'https://ccbirds@github.com':  //输入密码，密码不会显示\nWriting objects: 100% (3/3), 277 bytes | 277.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo https://github.com/ccbirds/hexo.git\n   da79977..341a1a4  master -> master\n```\n### 这样就成功啦\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","source":"_posts/ubuntu下将文件备份到github.md","raw":"---\ntitle: ubuntu下将文件备份到github\ndate: 2020-02-27 15:34:12\ncatalog: true\nsubtitle:\ncategories:\n- 经验分享\ntags:\n- ubuntu\n- git\n- github\n---\n将hexo博客目录备份到github，以防意外删除文件，这样也方便在其他设备上写博客\n\n---\n\n\n### 1. 安装git\n\n```bash\n$ sudo apt-get install git\n```\n<!--more-->\n### 2.生成ssh key \n使用命令\n```bash\n$ ssh-keygen -t rsa -C “github username”\n```\n会生成下面三个文件\n\n```bash\nid_rsa  id_rsa.pub  known_hosts\n```\n### 3.github setting\n登录github，setting,左边有SSH and GPG keys 选项，点new\nssh key。title随便写，key 填写id_rsa.pub文件中的内容。\n新建一个仓库用来备份。\n测试ssh key是否成功\n\n```bash\n$ ssh -T git@github.com\nHi ccbirds! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n### 4.在需要备份的目录下初始化git\n```bash\n$ git init\nReinitialized existing Git repository in /home/czq/blog/.git/\n```\n### 5.设置git\n```bash\n$ git config user.name “github user name” \n$ git config user.email “github email”\n$ git config user.name //查看设置的name\n$ git config user.email //查看设置的邮箱\n$ git remote add origin https://github.com/ccbirds/hexo.git //github 仓库地址 \n```\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Github1.png)\n如果显示origin已经存在,删除origin，并重新设置origin\n```bash\n$ git remote rm origin \n$ git remote add origin https://github.com/ccbirds/hexo.git\n```\n### 6.添加文件\n```bash\n$ git add test.txt //指定一个文件\n$ git add .    //目录下的所有文件\n$ git commit -m \"2020-02-27\" //备注\n$ git push origin master\nUsername for 'https://github.com': ccbirds //输入用户名\nPassword for 'https://ccbirds@github.com':  //输入密码，密码不会显示\nWriting objects: 100% (3/3), 277 bytes | 277.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo https://github.com/ccbirds/hexo.git\n   da79977..341a1a4  master -> master\n```\n### 这样就成功啦\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","slug":"ubuntu下将文件备份到github","published":1,"updated":"2020-03-22T00:42:23.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzf7000gpmjxej055wfh","content":"<p>将hexo博客目录备份到github，以防意外删除文件，这样也方便在其他设备上写博客</p>\n<hr>\n<h3 id=\"1-安装git\"><a href=\"#1-安装git\" class=\"headerlink\" title=\"1. 安装git\"></a>1. 安装git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install git<br></code></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"2-生成ssh-key\"><a href=\"#2-生成ssh-key\" class=\"headerlink\" title=\"2.生成ssh key\"></a>2.生成ssh key</h3><p>使用命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ssh-keygen -t rsa -C “github username”<br></code></pre></td></tr></table></figure>\n<p>会生成下面三个文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">id_rsa  id_rsa.pub  known_hosts<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-github-setting\"><a href=\"#3-github-setting\" class=\"headerlink\" title=\"3.github setting\"></a>3.github setting</h3><p>登录github，setting,左边有SSH and GPG keys 选项，点new<br>ssh key。title随便写，key 填写id_rsa.pub文件中的内容。<br>新建一个仓库用来备份。<br>测试ssh key是否成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ssh -T git@github.com<br>Hi ccbirds! You<span class=\"hljs-string\">'ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-在需要备份的目录下初始化git\"><a href=\"#4-在需要备份的目录下初始化git\" class=\"headerlink\" title=\"4.在需要备份的目录下初始化git\"></a>4.在需要备份的目录下初始化git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git init<br>Reinitialized existing Git repository <span class=\"hljs-keyword\">in</span> /home/czq/blog/.git/<br></code></pre></td></tr></table></figure>\n<h3 id=\"5-设置git\"><a href=\"#5-设置git\" class=\"headerlink\" title=\"5.设置git\"></a>5.设置git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git config user.name “github user name” <br>$ git config user.email “github email”<br>$ git config user.name //查看设置的name<br>$ git config user.email //查看设置的邮箱<br>$ git remote add origin https://github.com/ccbirds/hexo.git //github 仓库地址<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Github1.png\" alt><br>如果显示origin已经存在,删除origin，并重新设置origin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git remote rm origin <br>$ git remote add origin https://github.com/ccbirds/hexo.git<br></code></pre></td></tr></table></figure>\n<h3 id=\"6-添加文件\"><a href=\"#6-添加文件\" class=\"headerlink\" title=\"6.添加文件\"></a>6.添加文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git add test.txt //指定一个文件<br>$ git add .    //目录下的所有文件<br>$ git commit -m <span class=\"hljs-string\">\"2020-02-27\"</span> //备注<br>$ git push origin master<br>Username <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">'https://github.com'</span>: ccbirds //输入用户名<br>Password <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">'https://ccbirds@github.com'</span>:  //输入密码，密码不会显示<br>Writing objects: 100% (3/3), 277 bytes | 277.00 KiB/s, <span class=\"hljs-keyword\">done</span>.<br>Total 3 (delta 0), reused 0 (delta 0)<br>To https://github.com/ccbirds/hexo.git<br>   da79977..341a1a4  master -&gt; master<br></code></pre></td></tr></table></figure>\n<h3 id=\"这样就成功啦\"><a href=\"#这样就成功啦\" class=\"headerlink\" title=\"这样就成功啦\"></a>这样就成功啦</h3><p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":1164,"excerpt":"<p>将hexo博客目录备份到github，以防意外删除文件，这样也方便在其他设备上写博客</p>\n<hr>\n<h3 id=\"1-安装git\"><a href=\"#1-安装git\" class=\"headerlink\" title=\"1. 安装git\"></a>1. 安装git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install git<br></code></pre></td></tr></table></figure>","more":"<h3 id=\"2-生成ssh-key\"><a href=\"#2-生成ssh-key\" class=\"headerlink\" title=\"2.生成ssh key\"></a>2.生成ssh key</h3><p>使用命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ssh-keygen -t rsa -C “github username”<br></code></pre></td></tr></table></figure>\n<p>会生成下面三个文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">id_rsa  id_rsa.pub  known_hosts<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-github-setting\"><a href=\"#3-github-setting\" class=\"headerlink\" title=\"3.github setting\"></a>3.github setting</h3><p>登录github，setting,左边有SSH and GPG keys 选项，点new<br>ssh key。title随便写，key 填写id_rsa.pub文件中的内容。<br>新建一个仓库用来备份。<br>测试ssh key是否成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ ssh -T git@github.com<br>Hi ccbirds! You<span class=\"hljs-string\">'ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-在需要备份的目录下初始化git\"><a href=\"#4-在需要备份的目录下初始化git\" class=\"headerlink\" title=\"4.在需要备份的目录下初始化git\"></a>4.在需要备份的目录下初始化git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git init<br>Reinitialized existing Git repository <span class=\"hljs-keyword\">in</span> /home/czq/blog/.git/<br></code></pre></td></tr></table></figure>\n<h3 id=\"5-设置git\"><a href=\"#5-设置git\" class=\"headerlink\" title=\"5.设置git\"></a>5.设置git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git config user.name “github user name” <br>$ git config user.email “github email”<br>$ git config user.name //查看设置的name<br>$ git config user.email //查看设置的邮箱<br>$ git remote add origin https://github.com/ccbirds/hexo.git //github 仓库地址<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Github1.png\" alt><br>如果显示origin已经存在,删除origin，并重新设置origin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git remote rm origin <br>$ git remote add origin https://github.com/ccbirds/hexo.git<br></code></pre></td></tr></table></figure>\n<h3 id=\"6-添加文件\"><a href=\"#6-添加文件\" class=\"headerlink\" title=\"6.添加文件\"></a>6.添加文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git add test.txt //指定一个文件<br>$ git add .    //目录下的所有文件<br>$ git commit -m <span class=\"hljs-string\">\"2020-02-27\"</span> //备注<br>$ git push origin master<br>Username <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">'https://github.com'</span>: ccbirds //输入用户名<br>Password <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">'https://ccbirds@github.com'</span>:  //输入密码，密码不会显示<br>Writing objects: 100% (3/3), 277 bytes | 277.00 KiB/s, <span class=\"hljs-keyword\">done</span>.<br>Total 3 (delta 0), reused 0 (delta 0)<br>To https://github.com/ccbirds/hexo.git<br>   da79977..341a1a4  master -&gt; master<br></code></pre></td></tr></table></figure>\n<h3 id=\"这样就成功啦\"><a href=\"#这样就成功啦\" class=\"headerlink\" title=\"这样就成功啦\"></a>这样就成功啦</h3><p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"nanopi安装oh my zsh","catalog":true,"date":"2020-03-10T07:00:00.000Z","subtitle":null,"_content":"\nnanopi是基于ubuntu16.04LTS，自带的bash终端总觉的有点不舒服，有一款终端不错还可以更换主题。oh my zsh。[https://ohmyz.sh/](https://ohmyz.sh/) \n\n下面我们来反nanopi的终端美化一下。\n\n---\n\n首先安装zsh，我们先看一下，我们有没有zsh。\n\n```bash\n$ cat /etc/shells\n/bin/sh\n/bin/dash\n/bin/bash\n/bin/rbash\n$ echo $SHELL  //查看我们当前使用的shell\n/bin/bash\n```\n\n当前，我们是没有安装zsh的。使用的是默认的bash。\n<!--more-->\n---\n\n### 安装\n\n---\n\n先安装zsh\n\n```bash\n$ sudo apt-get install zsh\nReading package lists... Done\nBuilding dependency tree \nReading state information... Done\nThe following packages were automatically installed and are no longer required:\n  aspell aspell-en dictionaries-common emacsen-common libaspell15 libenca0 libfaad2 libjack-jackd2-0 libmodplug1\n  libmpcdec6 libopus0 libopusfile0 librcc0 librcd0 libresid-builder0c2a libsidplay2v5 libsidutils0 libspeex1\n  libtag1v5 libtag1v5-vanilla libtagc0 libtext-iconv-perl\nUse 'sudo apt autoremove' to remove them.\nThe following additional packages will be installed:\n  zsh-common\nSuggested packages:\n  zsh-doc\nThe following NEW packages will be installed:\n  zsh zsh-common\n0 upgraded, 2 newly installed, 0 to remove and 250 not upgraded.\nNeed to get 3,724 kB of archives.\nAfter this operation, 14.0 MB of additional disk space will be used.\nDo you want to continue? [Y/n] y\nGet:1 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh-common all 5.1.1-1ubuntu2.3 [3,182 kB]\nGet:2 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh arm64 5.1.1-1ubuntu2.3 [542 kB]\nFetched 3,724 kB in 5s (648 kB/s)\ndebconf: delaying package configuration, since apt-utils is not installed\nSelecting previously unselected package zsh-common.\n(Reading database ... 45962 files and directories currently installed.)\nPreparing to unpack .../zsh-common_5.1.1-1ubuntu2.3_all.deb ...\nUnpacking zsh-common (5.1.1-1ubuntu2.3) ...\nSelecting previously unselected package zsh.\nPreparing to unpack .../zsh_5.1.1-1ubuntu2.3_arm64.deb ...\nUnpacking zsh (5.1.1-1ubuntu2.3) ...\nSetting up zsh-common (5.1.1-1ubuntu2.3) ...\nSetting up zsh (5.1.1-1ubuntu2.3) ...\nupdate-alternatives: using /bin/zsh5 to provide /bin/zsh (zsh) in auto mode\nupdate-alternatives: using /bin/zsh5 to provide /bin/rzsh (rzsh) in auto mode\n```\n\n查看一下有没有安装上，\n\n```bash\n$ cat /etc/shells\n/bin/sh\n/bin/dash\n/bin/bash\n/bin/rbash\n/bin/zsh\n/usr/bin/zsh   //已经有zsh了\n```\n\n把zsh修改为默认shell\n\n```bash\n$ chsh -s /bin/zsh\n```\n\n安装oh my zsh\n\n```bash\n$ sh -c \"$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)\"\n\n```\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_ohmyzsh.png)\n\n这样就安装上了\n\n---\n\n### 修改主题\n\n---\n\n更改主题和加插件，编辑文件==~/.zshrc==\n\n```bash\n$ vim ~/.zshrc\nZSH_THEME=\"ys\"   //更改主题，我比较喜欢ys\n$ source ~/.zshrc\n```\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/ohmyzsh1.png)\n\n\n\n可以在==~/.oh-my-zsh/themes==查看都有什么主题\n\n---\n\n### 安装插件\n\n---\n\n#### 安装autojump插件\n\n```bash\n$ sudo apt-get install autojump\n$ vim ~/.zshrc\n#在最后一行加入\n. /usr/share/autojump/autojump.sh\n$ source ~/.zshrc   生效\n```\n\n#### 安装自动补齐插件\n\n```bash\n$ cd ~/.oh-my-zsh/plugins/\n$ mkdir incr\n$ cd incr\n$ wget http://mimosa-pudica.net/src/incr-0.2.zsh\n$ vim ~/.zshrc\n#在最后加入 \nsource ~/.oh-my-zsh/plugins/incr/incr-0.2.zsh\n$ source ~/.zshrc 生效\n```\n\n#### 安装语法高亮zsh-syntax-highlighting\n\n```bash\n$ cd ~/.oh-my-zsh/plugins\n$ vim ~/.zshrc\n$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git\n#在最后加入\nsource ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n$ source ~./zshrc \n```\n\n#### 安装语法历史记录\n\n```bash\n$ git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n$ vim ~/.zshrc\n# 修改\nplugins=(git extract z zsh-autosuggestions)\n$ source ~/.xshrc\n```\n\n现在终端好看了许多\n\n---\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n","source":"_posts/nanopi安装oh_my_zsh.md","raw":"---\ntitle: \"nanopi安装oh my zsh\"\ncatalog: true\ndate: 2020-03-10 15:00:00\nsubtitle: \n\ntags:\n- nanopi\n- oh my zsh\ncategories:\n- nanopi\n---\n\nnanopi是基于ubuntu16.04LTS，自带的bash终端总觉的有点不舒服，有一款终端不错还可以更换主题。oh my zsh。[https://ohmyz.sh/](https://ohmyz.sh/) \n\n下面我们来反nanopi的终端美化一下。\n\n---\n\n首先安装zsh，我们先看一下，我们有没有zsh。\n\n```bash\n$ cat /etc/shells\n/bin/sh\n/bin/dash\n/bin/bash\n/bin/rbash\n$ echo $SHELL  //查看我们当前使用的shell\n/bin/bash\n```\n\n当前，我们是没有安装zsh的。使用的是默认的bash。\n<!--more-->\n---\n\n### 安装\n\n---\n\n先安装zsh\n\n```bash\n$ sudo apt-get install zsh\nReading package lists... Done\nBuilding dependency tree \nReading state information... Done\nThe following packages were automatically installed and are no longer required:\n  aspell aspell-en dictionaries-common emacsen-common libaspell15 libenca0 libfaad2 libjack-jackd2-0 libmodplug1\n  libmpcdec6 libopus0 libopusfile0 librcc0 librcd0 libresid-builder0c2a libsidplay2v5 libsidutils0 libspeex1\n  libtag1v5 libtag1v5-vanilla libtagc0 libtext-iconv-perl\nUse 'sudo apt autoremove' to remove them.\nThe following additional packages will be installed:\n  zsh-common\nSuggested packages:\n  zsh-doc\nThe following NEW packages will be installed:\n  zsh zsh-common\n0 upgraded, 2 newly installed, 0 to remove and 250 not upgraded.\nNeed to get 3,724 kB of archives.\nAfter this operation, 14.0 MB of additional disk space will be used.\nDo you want to continue? [Y/n] y\nGet:1 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh-common all 5.1.1-1ubuntu2.3 [3,182 kB]\nGet:2 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh arm64 5.1.1-1ubuntu2.3 [542 kB]\nFetched 3,724 kB in 5s (648 kB/s)\ndebconf: delaying package configuration, since apt-utils is not installed\nSelecting previously unselected package zsh-common.\n(Reading database ... 45962 files and directories currently installed.)\nPreparing to unpack .../zsh-common_5.1.1-1ubuntu2.3_all.deb ...\nUnpacking zsh-common (5.1.1-1ubuntu2.3) ...\nSelecting previously unselected package zsh.\nPreparing to unpack .../zsh_5.1.1-1ubuntu2.3_arm64.deb ...\nUnpacking zsh (5.1.1-1ubuntu2.3) ...\nSetting up zsh-common (5.1.1-1ubuntu2.3) ...\nSetting up zsh (5.1.1-1ubuntu2.3) ...\nupdate-alternatives: using /bin/zsh5 to provide /bin/zsh (zsh) in auto mode\nupdate-alternatives: using /bin/zsh5 to provide /bin/rzsh (rzsh) in auto mode\n```\n\n查看一下有没有安装上，\n\n```bash\n$ cat /etc/shells\n/bin/sh\n/bin/dash\n/bin/bash\n/bin/rbash\n/bin/zsh\n/usr/bin/zsh   //已经有zsh了\n```\n\n把zsh修改为默认shell\n\n```bash\n$ chsh -s /bin/zsh\n```\n\n安装oh my zsh\n\n```bash\n$ sh -c \"$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)\"\n\n```\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_ohmyzsh.png)\n\n这样就安装上了\n\n---\n\n### 修改主题\n\n---\n\n更改主题和加插件，编辑文件==~/.zshrc==\n\n```bash\n$ vim ~/.zshrc\nZSH_THEME=\"ys\"   //更改主题，我比较喜欢ys\n$ source ~/.zshrc\n```\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/ohmyzsh1.png)\n\n\n\n可以在==~/.oh-my-zsh/themes==查看都有什么主题\n\n---\n\n### 安装插件\n\n---\n\n#### 安装autojump插件\n\n```bash\n$ sudo apt-get install autojump\n$ vim ~/.zshrc\n#在最后一行加入\n. /usr/share/autojump/autojump.sh\n$ source ~/.zshrc   生效\n```\n\n#### 安装自动补齐插件\n\n```bash\n$ cd ~/.oh-my-zsh/plugins/\n$ mkdir incr\n$ cd incr\n$ wget http://mimosa-pudica.net/src/incr-0.2.zsh\n$ vim ~/.zshrc\n#在最后加入 \nsource ~/.oh-my-zsh/plugins/incr/incr-0.2.zsh\n$ source ~/.zshrc 生效\n```\n\n#### 安装语法高亮zsh-syntax-highlighting\n\n```bash\n$ cd ~/.oh-my-zsh/plugins\n$ vim ~/.zshrc\n$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git\n#在最后加入\nsource ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n$ source ~./zshrc \n```\n\n#### 安装语法历史记录\n\n```bash\n$ git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n$ vim ~/.zshrc\n# 修改\nplugins=(git extract z zsh-autosuggestions)\n$ source ~/.xshrc\n```\n\n现在终端好看了许多\n\n---\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n","slug":"nanopi安装oh_my_zsh","published":1,"updated":"2020-03-22T00:40:56.837Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzfb000kpmjxes7s7l7s","content":"<p>nanopi是基于ubuntu16.04LTS，自带的bash终端总觉的有点不舒服，有一款终端不错还可以更换主题。oh my zsh。<a href=\"https://ohmyz.sh/\" target=\"_blank\" rel=\"noopener\">https://ohmyz.sh/</a> </p>\n<p>下面我们来反nanopi的终端美化一下。</p>\n<hr>\n<p>首先安装zsh，我们先看一下，我们有没有zsh。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ cat /etc/shells<br>/bin/sh<br>/bin/dash<br>/bin/bash<br>/bin/rbash<br>$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$SHELL</span>  //查看我们当前使用的shell<br>/bin/bash<br></code></pre></td></tr></table></figure>\n\n<p>当前，我们是没有安装zsh的。使用的是默认的bash。</p>\n<a id=\"more\"></a>\n<hr>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><hr>\n<p>先安装zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install zsh<br>Reading package lists... Done<br>Building dependency tree <br>Reading state information... Done<br>The following packages were automatically installed and are no longer required:<br>  aspell aspell-en dictionaries-common emacsen-common libaspell15 libenca0 libfaad2 libjack-jackd2-0 libmodplug1<br>  libmpcdec6 libopus0 libopusfile0 librcc0 librcd0 libresid-builder0c2a libsidplay2v5 libsidutils0 libspeex1<br>  libtag1v5 libtag1v5-vanilla libtagc0 libtext-iconv-perl<br>Use <span class=\"hljs-string\">'sudo apt autoremove'</span> to remove them.<br>The following additional packages will be installed:<br>  zsh-common<br>Suggested packages:<br>  zsh-doc<br>The following NEW packages will be installed:<br>  zsh zsh-common<br>0 upgraded, 2 newly installed, 0 to remove and 250 not upgraded.<br>Need to get 3,724 kB of archives.<br>After this operation, 14.0 MB of additional disk space will be used.<br>Do you want to <span class=\"hljs-built_in\">continue</span>? [Y/n] y<br>Get:1 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh-common all 5.1.1-1ubuntu2.3 [3,182 kB]<br>Get:2 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh arm64 5.1.1-1ubuntu2.3 [542 kB]<br>Fetched 3,724 kB <span class=\"hljs-keyword\">in</span> 5s (648 kB/s)<br>debconf: delaying package configuration, since apt-utils is not installed<br>Selecting previously unselected package zsh-common.<br>(Reading database ... 45962 files and directories currently installed.)<br>Preparing to unpack .../zsh-common_5.1.1-1ubuntu2.3_all.deb ...<br>Unpacking zsh-common (5.1.1-1ubuntu2.3) ...<br>Selecting previously unselected package zsh.<br>Preparing to unpack .../zsh_5.1.1-1ubuntu2.3_arm64.deb ...<br>Unpacking zsh (5.1.1-1ubuntu2.3) ...<br>Setting up zsh-common (5.1.1-1ubuntu2.3) ...<br>Setting up zsh (5.1.1-1ubuntu2.3) ...<br>update-alternatives: using /bin/zsh5 to provide /bin/zsh (zsh) <span class=\"hljs-keyword\">in</span> auto mode<br>update-alternatives: using /bin/zsh5 to provide /bin/rzsh (rzsh) <span class=\"hljs-keyword\">in</span> auto mode<br></code></pre></td></tr></table></figure>\n\n<p>查看一下有没有安装上，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ cat /etc/shells<br>/bin/sh<br>/bin/dash<br>/bin/bash<br>/bin/rbash<br>/bin/zsh<br>/usr/bin/zsh   //已经有zsh了<br></code></pre></td></tr></table></figure>\n\n<p>把zsh修改为默认shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ chsh -s /bin/zsh<br></code></pre></td></tr></table></figure>\n\n<p>安装oh my zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)</span>\"</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_ohmyzsh.png\" alt></p>\n<p>这样就安装上了</p>\n<hr>\n<h3 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h3><hr>\n<p>更改主题和加插件，编辑文件==~/.zshrc==</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ vim ~/.zshrc<br>ZSH_THEME=<span class=\"hljs-string\">\"ys\"</span>   //更改主题，我比较喜欢ys<br>$ <span class=\"hljs-built_in\">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/ohmyzsh1.png\" alt></p>\n<p>可以在==~/.oh-my-zsh/themes==查看都有什么主题</p>\n<hr>\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><hr>\n<h4 id=\"安装autojump插件\"><a href=\"#安装autojump插件\" class=\"headerlink\" title=\"安装autojump插件\"></a>安装autojump插件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install autojump<br>$ vim ~/.zshrc<br><span class=\"hljs-comment\">#在最后一行加入</span><br>. /usr/share/autojump/autojump.sh<br>$ <span class=\"hljs-built_in\">source</span> ~/.zshrc   生效<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装自动补齐插件\"><a href=\"#安装自动补齐插件\" class=\"headerlink\" title=\"安装自动补齐插件\"></a>安装自动补齐插件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> ~/.oh-my-zsh/plugins/<br>$ mkdir incr<br>$ <span class=\"hljs-built_in\">cd</span> incr<br>$ wget http://mimosa-pudica.net/src/incr-0.2.zsh<br>$ vim ~/.zshrc<br><span class=\"hljs-comment\">#在最后加入 </span><br><span class=\"hljs-built_in\">source</span> ~/.oh-my-zsh/plugins/incr/incr-0.2.zsh<br>$ <span class=\"hljs-built_in\">source</span> ~/.zshrc 生效<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装语法高亮zsh-syntax-highlighting\"><a href=\"#安装语法高亮zsh-syntax-highlighting\" class=\"headerlink\" title=\"安装语法高亮zsh-syntax-highlighting\"></a>安装语法高亮zsh-syntax-highlighting</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> ~/.oh-my-zsh/plugins<br>$ vim ~/.zshrc<br>$ git <span class=\"hljs-built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git<br><span class=\"hljs-comment\">#在最后加入</span><br><span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$&#123;(q-)PWD&#125;</span>/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh<br>$ <span class=\"hljs-built_in\">source</span> ~./zshrc<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装语法历史记录\"><a href=\"#安装语法历史记录\" class=\"headerlink\" title=\"安装语法历史记录\"></a>安装语法历史记录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git <span class=\"hljs-built_in\">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class=\"hljs-variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br>$ vim ~/.zshrc<br><span class=\"hljs-comment\"># 修改</span><br>plugins=(git extract z zsh-autosuggestions)<br>$ <span class=\"hljs-built_in\">source</span> ~/.xshrc<br></code></pre></td></tr></table></figure>\n\n<p>现在终端好看了许多</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":3002,"excerpt":"<p>nanopi是基于ubuntu16.04LTS，自带的bash终端总觉的有点不舒服，有一款终端不错还可以更换主题。oh my zsh。<a href=\"https://ohmyz.sh/\" target=\"_blank\" rel=\"noopener\">https://ohmyz.sh/</a> </p>\n<p>下面我们来反nanopi的终端美化一下。</p>\n<hr>\n<p>首先安装zsh，我们先看一下，我们有没有zsh。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ cat /etc/shells<br>/bin/sh<br>/bin/dash<br>/bin/bash<br>/bin/rbash<br>$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$SHELL</span>  //查看我们当前使用的shell<br>/bin/bash<br></code></pre></td></tr></table></figure>\n\n<p>当前，我们是没有安装zsh的。使用的是默认的bash。</p>","more":"<hr>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><hr>\n<p>先安装zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install zsh<br>Reading package lists... Done<br>Building dependency tree <br>Reading state information... Done<br>The following packages were automatically installed and are no longer required:<br>  aspell aspell-en dictionaries-common emacsen-common libaspell15 libenca0 libfaad2 libjack-jackd2-0 libmodplug1<br>  libmpcdec6 libopus0 libopusfile0 librcc0 librcd0 libresid-builder0c2a libsidplay2v5 libsidutils0 libspeex1<br>  libtag1v5 libtag1v5-vanilla libtagc0 libtext-iconv-perl<br>Use <span class=\"hljs-string\">'sudo apt autoremove'</span> to remove them.<br>The following additional packages will be installed:<br>  zsh-common<br>Suggested packages:<br>  zsh-doc<br>The following NEW packages will be installed:<br>  zsh zsh-common<br>0 upgraded, 2 newly installed, 0 to remove and 250 not upgraded.<br>Need to get 3,724 kB of archives.<br>After this operation, 14.0 MB of additional disk space will be used.<br>Do you want to <span class=\"hljs-built_in\">continue</span>? [Y/n] y<br>Get:1 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh-common all 5.1.1-1ubuntu2.3 [3,182 kB]<br>Get:2 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh arm64 5.1.1-1ubuntu2.3 [542 kB]<br>Fetched 3,724 kB <span class=\"hljs-keyword\">in</span> 5s (648 kB/s)<br>debconf: delaying package configuration, since apt-utils is not installed<br>Selecting previously unselected package zsh-common.<br>(Reading database ... 45962 files and directories currently installed.)<br>Preparing to unpack .../zsh-common_5.1.1-1ubuntu2.3_all.deb ...<br>Unpacking zsh-common (5.1.1-1ubuntu2.3) ...<br>Selecting previously unselected package zsh.<br>Preparing to unpack .../zsh_5.1.1-1ubuntu2.3_arm64.deb ...<br>Unpacking zsh (5.1.1-1ubuntu2.3) ...<br>Setting up zsh-common (5.1.1-1ubuntu2.3) ...<br>Setting up zsh (5.1.1-1ubuntu2.3) ...<br>update-alternatives: using /bin/zsh5 to provide /bin/zsh (zsh) <span class=\"hljs-keyword\">in</span> auto mode<br>update-alternatives: using /bin/zsh5 to provide /bin/rzsh (rzsh) <span class=\"hljs-keyword\">in</span> auto mode<br></code></pre></td></tr></table></figure>\n\n<p>查看一下有没有安装上，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ cat /etc/shells<br>/bin/sh<br>/bin/dash<br>/bin/bash<br>/bin/rbash<br>/bin/zsh<br>/usr/bin/zsh   //已经有zsh了<br></code></pre></td></tr></table></figure>\n\n<p>把zsh修改为默认shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ chsh -s /bin/zsh<br></code></pre></td></tr></table></figure>\n\n<p>安装oh my zsh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)</span>\"</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_ohmyzsh.png\" alt></p>\n<p>这样就安装上了</p>\n<hr>\n<h3 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h3><hr>\n<p>更改主题和加插件，编辑文件==~/.zshrc==</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ vim ~/.zshrc<br>ZSH_THEME=<span class=\"hljs-string\">\"ys\"</span>   //更改主题，我比较喜欢ys<br>$ <span class=\"hljs-built_in\">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/ohmyzsh1.png\" alt></p>\n<p>可以在==~/.oh-my-zsh/themes==查看都有什么主题</p>\n<hr>\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><hr>\n<h4 id=\"安装autojump插件\"><a href=\"#安装autojump插件\" class=\"headerlink\" title=\"安装autojump插件\"></a>安装autojump插件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt-get install autojump<br>$ vim ~/.zshrc<br><span class=\"hljs-comment\">#在最后一行加入</span><br>. /usr/share/autojump/autojump.sh<br>$ <span class=\"hljs-built_in\">source</span> ~/.zshrc   生效<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装自动补齐插件\"><a href=\"#安装自动补齐插件\" class=\"headerlink\" title=\"安装自动补齐插件\"></a>安装自动补齐插件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> ~/.oh-my-zsh/plugins/<br>$ mkdir incr<br>$ <span class=\"hljs-built_in\">cd</span> incr<br>$ wget http://mimosa-pudica.net/src/incr-0.2.zsh<br>$ vim ~/.zshrc<br><span class=\"hljs-comment\">#在最后加入 </span><br><span class=\"hljs-built_in\">source</span> ~/.oh-my-zsh/plugins/incr/incr-0.2.zsh<br>$ <span class=\"hljs-built_in\">source</span> ~/.zshrc 生效<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装语法高亮zsh-syntax-highlighting\"><a href=\"#安装语法高亮zsh-syntax-highlighting\" class=\"headerlink\" title=\"安装语法高亮zsh-syntax-highlighting\"></a>安装语法高亮zsh-syntax-highlighting</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> ~/.oh-my-zsh/plugins<br>$ vim ~/.zshrc<br>$ git <span class=\"hljs-built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git<br><span class=\"hljs-comment\">#在最后加入</span><br><span class=\"hljs-built_in\">source</span> <span class=\"hljs-variable\">$&#123;(q-)PWD&#125;</span>/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh<br>$ <span class=\"hljs-built_in\">source</span> ~./zshrc<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装语法历史记录\"><a href=\"#安装语法历史记录\" class=\"headerlink\" title=\"安装语法历史记录\"></a>安装语法历史记录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git <span class=\"hljs-built_in\">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class=\"hljs-variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br>$ vim ~/.zshrc<br><span class=\"hljs-comment\"># 修改</span><br>plugins=(git extract z zsh-autosuggestions)<br>$ <span class=\"hljs-built_in\">source</span> ~/.xshrc<br></code></pre></td></tr></table></figure>\n\n<p>现在终端好看了许多</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"ubuntu中使用pycharm有些快捷键无法使用","date":"2020-02-27T00:57:49.000Z","catalog":true,"subtitle":null,"_content":"\n问题描述：在使用pycharm过程中，ctrl+c,ctrl+v,ctrl+d等快捷键无法使用。\n\n解决办法：file->setting->Editor下面有一个Vim Emulation选项。\n<!--more-->\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm.png)\n将Handler一列中的vim全部改为IDE，点Apply。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm2.png)\n这样，快捷键就可以正常使用啦。\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","source":"_posts/ubuntu中使用pycharm有些快捷键无法使用.md","raw":"---\ntitle: ubuntu中使用pycharm有些快捷键无法使用\ndate: 2020-02-27 08:57:49\ncatalog: true\nsubtitle:\ntags: \n- ubuntu\n- python\n- pcharm\ncategories:\n- 经验分享\n---\n\n问题描述：在使用pycharm过程中，ctrl+c,ctrl+v,ctrl+d等快捷键无法使用。\n\n解决办法：file->setting->Editor下面有一个Vim Emulation选项。\n<!--more-->\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm.png)\n将Handler一列中的vim全部改为IDE，点Apply。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm2.png)\n这样，快捷键就可以正常使用啦。\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","slug":"ubuntu中使用pycharm有些快捷键无法使用","published":1,"updated":"2020-03-22T00:42:23.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzff000npmjx2xy8368u","content":"<p>问题描述：在使用pycharm过程中，ctrl+c,ctrl+v,ctrl+d等快捷键无法使用。</p>\n<p>解决办法：file-&gt;setting-&gt;Editor下面有一个Vim Emulation选项。</p>\n<a id=\"more\"></a>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm.png\" alt><br>将Handler一列中的vim全部改为IDE，点Apply。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm2.png\" alt><br>这样，快捷键就可以正常使用啦。</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":177,"excerpt":"<p>问题描述：在使用pycharm过程中，ctrl+c,ctrl+v,ctrl+d等快捷键无法使用。</p>\n<p>解决办法：file-&gt;setting-&gt;Editor下面有一个Vim Emulation选项。</p>","more":"<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm.png\" alt><br>将Handler一列中的vim全部改为IDE，点Apply。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm2.png\" alt><br>这样，快捷键就可以正常使用啦。</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"为使用hexo搭建的博客加入评论系统gitalk","date":"2020-02-27T01:23:34.000Z","catalog":true,"subtitle":null,"_content":"使用hexo结合github搭建自己的个人博客网站，非常方便，而且免费，对于个人来说是一个不错的选择。不过有一个缺点是没有评论系统。需要自己额外引入评论插件。\n现在常用的评论插件有三种：\ndisqus：已经被墙了，暂时不考虑。\ngitment：基于github的一个评论系统，但是作者长时间没有维护，需要使用自己的服务器。\ngitalk：也是基于github的一个评论系统，目前可以正常使用。\n主题不同添加gitalk的方法也略有区别，有的主题本身带有gitalk评论，打开相应的开关就可以。我使用的主题是beantech，本身没有gitalk评论系统。\n<!--more-->\n---\n## 1.注册\n\n---\n[Register a new OAuth application](https://github.com/settings/applications/new)\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk1.png)\nApplication name：随便写。\nHomepage URL：网站主页的地址\nApplication description：随便写\nAuthorization callback URL：网站主页地址\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk2.png)\n会生成Client ID与Client Secret。保存好后面会用到。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk3.png)\n\n---\n## 2.配置gitalk\n---\n### 创建md5.min.js文件\n在主题目录source/js中创建md5.min.js文件，内容如下（代码引用自其他文章，链接在文章下方）\n\n```\n! function(n) {\n    \"use strict\";\n    function t(n, t) {\n        var r = (65535 & n) + (65535 & t);\n        return (n >> 16) + (t >> 16) + (r >> 16) << 16 | 65535 & r\n    }\n    function r(n, t) {\n        return n << t | n >>> 32 - t\n    }\n    function e(n, e, o, u, c, f) {\n        return t(r(t(t(e, n), t(u, f)), c), o)\n    }\n    function o(n, t, r, o, u, c, f) {\n        return e(t & r | ~t & o, n, t, u, c, f)\n    }\n    function u(n, t, r, o, u, c, f) {\n        return e(t & o | r & ~o, n, t, u, c, f)\n    }\n    function c(n, t, r, o, u, c, f) {\n        return e(t ^ r ^ o, n, t, u, c, f)\n    }\n    function f(n, t, r, o, u, c, f) {\n        return e(r ^ (t | ~o), n, t, u, c, f)\n    }\n    function i(n, r) {\n        n[r >> 5] |= 128 << r % 32, n[14 + (r + 64 >>> 9 << 4)] = r;\n        var e, i, a, d, h, l = 1732584193,\n            g = -271733879,\n            v = -1732584194,\n            m = 271733878;\n        for (e = 0; e < n.length; e += 16) i = l, a = g, d = v, h = m, g = f(g = f(g = f(g = f(g = c(g = c(g = c(g = c(g = u(g = u(g = u(g = u(g = o(g = o(g = o(g = o(g, v = o(v, m = o(m, l = o(l, g, v, m, n[e], 7, -680876936), g, v, n[e + 1], 12, -389564586), l, g, n[e + 2], 17, 606105819), m, l, n[e + 3], 22, -1044525330), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 4], 7, -176418897), g, v, n[e + 5], 12, 1200080426), l, g, n[e + 6], 17, -1473231341), m, l, n[e + 7], 22, -45705983), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 8], 7, 1770035416), g, v, n[e + 9], 12, -1958414417), l, g, n[e + 10], 17, -42063), m, l, n[e + 11], 22, -1990404162), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 12], 7, 1804603682), g, v, n[e + 13], 12, -40341101), l, g, n[e + 14], 17, -1502002290), m, l, n[e + 15], 22, 1236535329), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 1], 5, -165796510), g, v, n[e + 6], 9, -1069501632), l, g, n[e + 11], 14, 643717713), m, l, n[e], 20, -373897302), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 5], 5, -701558691), g, v, n[e + 10], 9, 38016083), l, g, n[e + 15], 14, -660478335), m, l, n[e + 4], 20, -405537848), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 9], 5, 568446438), g, v, n[e + 14], 9, -1019803690), l, g, n[e + 3], 14, -187363961), m, l, n[e + 8], 20, 1163531501), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 13], 5, -1444681467), g, v, n[e + 2], 9, -51403784), l, g, n[e + 7], 14, 1735328473), m, l, n[e + 12], 20, -1926607734), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 5], 4, -378558), g, v, n[e + 8], 11, -2022574463), l, g, n[e + 11], 16, 1839030562), m, l, n[e + 14], 23, -35309556), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 1], 4, -1530992060), g, v, n[e + 4], 11, 1272893353), l, g, n[e + 7], 16, -155497632), m, l, n[e + 10], 23, -1094730640), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 13], 4, 681279174), g, v, n[e], 11, -358537222), l, g, n[e + 3], 16, -722521979), m, l, n[e + 6], 23, 76029189), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 9], 4, -640364487), g, v, n[e + 12], 11, -421815835), l, g, n[e + 15], 16, 530742520), m, l, n[e + 2], 23, -995338651), v = f(v, m = f(m, l = f(l, g, v, m, n[e], 6, -198630844), g, v, n[e + 7], 10, 1126891415), l, g, n[e + 14], 15, -1416354905), m, l, n[e + 5], 21, -57434055), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 12], 6, 1700485571), g, v, n[e + 3], 10, -1894986606), l, g, n[e + 10], 15, -1051523), m, l, n[e + 1], 21, -2054922799), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 8], 6, 1873313359), g, v, n[e + 15], 10, -30611744), l, g, n[e + 6], 15, -1560198380), m, l, n[e + 13], 21, 1309151649), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 4], 6, -145523070), g, v, n[e + 11], 10, -1120210379), l, g, n[e + 2], 15, 718787259), m, l, n[e + 9], 21, -343485551), l = t(l, i), g = t(g, a), v = t(v, d), m = t(m, h);\n        return [l, g, v, m]\n    }\n\n    function a(n) {\n        var t, r = \"\",\n            e = 32 * n.length;\n        for (t = 0; t < e; t += 8) r += String.fromCharCode(n[t >> 5] >>> t % 32 & 255);\n        return r\n    }\n\n    function d(n) {\n        var t, r = [];\n        for (r[(n.length >> 2) - 1] = void 0, t = 0; t < r.length; t += 1) r[t] = 0;\n        var e = 8 * n.length;\n        for (t = 0; t < e; t += 8) r[t >> 5] |= (255 & n.charCodeAt(t / 8)) << t % 32;\n        return r\n    }\n\n    function h(n) {\n        return a(i(d(n), 8 * n.length))\n    }\n\n    function l(n, t) {\n        var r, e, o = d(n),\n            u = [],\n            c = [];\n        for (u[15] = c[15] = void 0, o.length > 16 && (o = i(o, 8 * n.length)), r = 0; r < 16; r += 1) u[r] = 909522486 ^ o[r], c[r] = 1549556828 ^ o[r];\n        return e = i(u.concat(d(t)), 512 + 8 * t.length), a(i(c.concat(e), 640))\n    }\n\n    function g(n) {\n        var t, r, e = \"\";\n        for (r = 0; r < n.length; r += 1) t = n.charCodeAt(r), e += \"0123456789abcdef\".charAt(t >>> 4 & 15) + \"0123456789abcdef\".charAt(15 & t);\n        return e\n    }\n    function v(n) {\n        return unescape(encodeURIComponent(n))\n    }\n    function m(n) {\n        return h(v(n))\n    }\n    function p(n) {\n        return g(m(n))\n    }\n    function s(n, t) {\n        return l(v(n), v(t))\n    }\n    function C(n, t) {\n        return g(s(n, t))\n    }\n    function A(n, t, r) {\n        return t ? r ? s(t, n) : C(t, n) : r ? m(n) : p(n)\n    }\n    \"function\" == typeof define && define.amd ? define(function() {\n        return A\n    }) : \"object\" == typeof module && module.exports ? module.exports = A : n.md5 = A\n}(this);\n//# sourceMappingURL=md5.min.js.map\n```\n### 在文章后面加入代码\n\n```\n<div id=\"gitalk-container\"></div>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n<script src=\"/js/md5.min.js\"></script>\n<script >\nvar gitalk = new Gitalk({\n  clientID: 'GitHub Application Client ID',\n  clientSecret: 'GitHub Application Client Secret',\n  repo: 'GitHub repo',\n  owner: 'GitHub repo owner',\n  admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],\n  id: md5(location.pathname),      // Ensure uniqueness and length less than 50\n  distractionFreeMode: false  // Facebook-like distraction free mode\n})\ngitalk.render('gitalk-container')\n</script>\n```\nclientID: 前面注册的clientID\nclientSecret： 前面注册的clientSecret\nrepo： 保存评论的仓库名字，可以是XXX.github.io\nowner： 仓库的拥有者，写自己的用户名就可以。\nadmin： 评论管理员，写自己的用户名就可以。\nid： 按我写的不需要修改。一定要使用md5编码，不然会因为文章名字过长报错。\n其他保持默认即可。\n\n### gitalk初始化\n将代码放到文章下方后，需要对gitalk初始化，gitalk不能自动初始化，手动初始化后，会在保存评论的仓库新建一个issue。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk4.png)\n使用自己的github登录。会在仓库新建一个issue。\n\n---\n这样就完成啦，比较简单。但是需要在每篇文章后面都加入代码，而且需要手动初始化。\n可以在主题中加入gitalk，但是因为主题不同加入的方法也不同。\n至于初始化，可以写个脚本自动初始化，正在学习中，后期和大家分享。如果大家有更好的方法，欢迎在评论中交流。\n\n---\n\n\n参考文章：\n[https://blog.csdn.net/am290333566/article/details/83714217](https://blog.csdn.net/am290333566/article/details/83714217)\n[https://github.com/gitalk/gitalk/blob/master/readme-cn.md](https://github.com/gitalk/gitalk/blob/master/readme-cn.md)\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","source":"_posts/为使用hexo搭建的博客加入评论系统gitalk.md","raw":"---\ntitle: 为使用hexo搭建的博客加入评论系统gitalk\ndate: 2020-02-27 09:23:34\ncatalog: true\nsubtitle:\ncategories:\n- 经验分享\ntags:\n- hexo\n- gitalk\n---\n使用hexo结合github搭建自己的个人博客网站，非常方便，而且免费，对于个人来说是一个不错的选择。不过有一个缺点是没有评论系统。需要自己额外引入评论插件。\n现在常用的评论插件有三种：\ndisqus：已经被墙了，暂时不考虑。\ngitment：基于github的一个评论系统，但是作者长时间没有维护，需要使用自己的服务器。\ngitalk：也是基于github的一个评论系统，目前可以正常使用。\n主题不同添加gitalk的方法也略有区别，有的主题本身带有gitalk评论，打开相应的开关就可以。我使用的主题是beantech，本身没有gitalk评论系统。\n<!--more-->\n---\n## 1.注册\n\n---\n[Register a new OAuth application](https://github.com/settings/applications/new)\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk1.png)\nApplication name：随便写。\nHomepage URL：网站主页的地址\nApplication description：随便写\nAuthorization callback URL：网站主页地址\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk2.png)\n会生成Client ID与Client Secret。保存好后面会用到。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk3.png)\n\n---\n## 2.配置gitalk\n---\n### 创建md5.min.js文件\n在主题目录source/js中创建md5.min.js文件，内容如下（代码引用自其他文章，链接在文章下方）\n\n```\n! function(n) {\n    \"use strict\";\n    function t(n, t) {\n        var r = (65535 & n) + (65535 & t);\n        return (n >> 16) + (t >> 16) + (r >> 16) << 16 | 65535 & r\n    }\n    function r(n, t) {\n        return n << t | n >>> 32 - t\n    }\n    function e(n, e, o, u, c, f) {\n        return t(r(t(t(e, n), t(u, f)), c), o)\n    }\n    function o(n, t, r, o, u, c, f) {\n        return e(t & r | ~t & o, n, t, u, c, f)\n    }\n    function u(n, t, r, o, u, c, f) {\n        return e(t & o | r & ~o, n, t, u, c, f)\n    }\n    function c(n, t, r, o, u, c, f) {\n        return e(t ^ r ^ o, n, t, u, c, f)\n    }\n    function f(n, t, r, o, u, c, f) {\n        return e(r ^ (t | ~o), n, t, u, c, f)\n    }\n    function i(n, r) {\n        n[r >> 5] |= 128 << r % 32, n[14 + (r + 64 >>> 9 << 4)] = r;\n        var e, i, a, d, h, l = 1732584193,\n            g = -271733879,\n            v = -1732584194,\n            m = 271733878;\n        for (e = 0; e < n.length; e += 16) i = l, a = g, d = v, h = m, g = f(g = f(g = f(g = f(g = c(g = c(g = c(g = c(g = u(g = u(g = u(g = u(g = o(g = o(g = o(g = o(g, v = o(v, m = o(m, l = o(l, g, v, m, n[e], 7, -680876936), g, v, n[e + 1], 12, -389564586), l, g, n[e + 2], 17, 606105819), m, l, n[e + 3], 22, -1044525330), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 4], 7, -176418897), g, v, n[e + 5], 12, 1200080426), l, g, n[e + 6], 17, -1473231341), m, l, n[e + 7], 22, -45705983), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 8], 7, 1770035416), g, v, n[e + 9], 12, -1958414417), l, g, n[e + 10], 17, -42063), m, l, n[e + 11], 22, -1990404162), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 12], 7, 1804603682), g, v, n[e + 13], 12, -40341101), l, g, n[e + 14], 17, -1502002290), m, l, n[e + 15], 22, 1236535329), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 1], 5, -165796510), g, v, n[e + 6], 9, -1069501632), l, g, n[e + 11], 14, 643717713), m, l, n[e], 20, -373897302), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 5], 5, -701558691), g, v, n[e + 10], 9, 38016083), l, g, n[e + 15], 14, -660478335), m, l, n[e + 4], 20, -405537848), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 9], 5, 568446438), g, v, n[e + 14], 9, -1019803690), l, g, n[e + 3], 14, -187363961), m, l, n[e + 8], 20, 1163531501), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 13], 5, -1444681467), g, v, n[e + 2], 9, -51403784), l, g, n[e + 7], 14, 1735328473), m, l, n[e + 12], 20, -1926607734), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 5], 4, -378558), g, v, n[e + 8], 11, -2022574463), l, g, n[e + 11], 16, 1839030562), m, l, n[e + 14], 23, -35309556), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 1], 4, -1530992060), g, v, n[e + 4], 11, 1272893353), l, g, n[e + 7], 16, -155497632), m, l, n[e + 10], 23, -1094730640), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 13], 4, 681279174), g, v, n[e], 11, -358537222), l, g, n[e + 3], 16, -722521979), m, l, n[e + 6], 23, 76029189), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 9], 4, -640364487), g, v, n[e + 12], 11, -421815835), l, g, n[e + 15], 16, 530742520), m, l, n[e + 2], 23, -995338651), v = f(v, m = f(m, l = f(l, g, v, m, n[e], 6, -198630844), g, v, n[e + 7], 10, 1126891415), l, g, n[e + 14], 15, -1416354905), m, l, n[e + 5], 21, -57434055), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 12], 6, 1700485571), g, v, n[e + 3], 10, -1894986606), l, g, n[e + 10], 15, -1051523), m, l, n[e + 1], 21, -2054922799), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 8], 6, 1873313359), g, v, n[e + 15], 10, -30611744), l, g, n[e + 6], 15, -1560198380), m, l, n[e + 13], 21, 1309151649), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 4], 6, -145523070), g, v, n[e + 11], 10, -1120210379), l, g, n[e + 2], 15, 718787259), m, l, n[e + 9], 21, -343485551), l = t(l, i), g = t(g, a), v = t(v, d), m = t(m, h);\n        return [l, g, v, m]\n    }\n\n    function a(n) {\n        var t, r = \"\",\n            e = 32 * n.length;\n        for (t = 0; t < e; t += 8) r += String.fromCharCode(n[t >> 5] >>> t % 32 & 255);\n        return r\n    }\n\n    function d(n) {\n        var t, r = [];\n        for (r[(n.length >> 2) - 1] = void 0, t = 0; t < r.length; t += 1) r[t] = 0;\n        var e = 8 * n.length;\n        for (t = 0; t < e; t += 8) r[t >> 5] |= (255 & n.charCodeAt(t / 8)) << t % 32;\n        return r\n    }\n\n    function h(n) {\n        return a(i(d(n), 8 * n.length))\n    }\n\n    function l(n, t) {\n        var r, e, o = d(n),\n            u = [],\n            c = [];\n        for (u[15] = c[15] = void 0, o.length > 16 && (o = i(o, 8 * n.length)), r = 0; r < 16; r += 1) u[r] = 909522486 ^ o[r], c[r] = 1549556828 ^ o[r];\n        return e = i(u.concat(d(t)), 512 + 8 * t.length), a(i(c.concat(e), 640))\n    }\n\n    function g(n) {\n        var t, r, e = \"\";\n        for (r = 0; r < n.length; r += 1) t = n.charCodeAt(r), e += \"0123456789abcdef\".charAt(t >>> 4 & 15) + \"0123456789abcdef\".charAt(15 & t);\n        return e\n    }\n    function v(n) {\n        return unescape(encodeURIComponent(n))\n    }\n    function m(n) {\n        return h(v(n))\n    }\n    function p(n) {\n        return g(m(n))\n    }\n    function s(n, t) {\n        return l(v(n), v(t))\n    }\n    function C(n, t) {\n        return g(s(n, t))\n    }\n    function A(n, t, r) {\n        return t ? r ? s(t, n) : C(t, n) : r ? m(n) : p(n)\n    }\n    \"function\" == typeof define && define.amd ? define(function() {\n        return A\n    }) : \"object\" == typeof module && module.exports ? module.exports = A : n.md5 = A\n}(this);\n//# sourceMappingURL=md5.min.js.map\n```\n### 在文章后面加入代码\n\n```\n<div id=\"gitalk-container\"></div>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n<script src=\"/js/md5.min.js\"></script>\n<script >\nvar gitalk = new Gitalk({\n  clientID: 'GitHub Application Client ID',\n  clientSecret: 'GitHub Application Client Secret',\n  repo: 'GitHub repo',\n  owner: 'GitHub repo owner',\n  admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],\n  id: md5(location.pathname),      // Ensure uniqueness and length less than 50\n  distractionFreeMode: false  // Facebook-like distraction free mode\n})\ngitalk.render('gitalk-container')\n</script>\n```\nclientID: 前面注册的clientID\nclientSecret： 前面注册的clientSecret\nrepo： 保存评论的仓库名字，可以是XXX.github.io\nowner： 仓库的拥有者，写自己的用户名就可以。\nadmin： 评论管理员，写自己的用户名就可以。\nid： 按我写的不需要修改。一定要使用md5编码，不然会因为文章名字过长报错。\n其他保持默认即可。\n\n### gitalk初始化\n将代码放到文章下方后，需要对gitalk初始化，gitalk不能自动初始化，手动初始化后，会在保存评论的仓库新建一个issue。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk4.png)\n使用自己的github登录。会在仓库新建一个issue。\n\n---\n这样就完成啦，比较简单。但是需要在每篇文章后面都加入代码，而且需要手动初始化。\n可以在主题中加入gitalk，但是因为主题不同加入的方法也不同。\n至于初始化，可以写个脚本自动初始化，正在学习中，后期和大家分享。如果大家有更好的方法，欢迎在评论中交流。\n\n---\n\n\n参考文章：\n[https://blog.csdn.net/am290333566/article/details/83714217](https://blog.csdn.net/am290333566/article/details/83714217)\n[https://github.com/gitalk/gitalk/blob/master/readme-cn.md](https://github.com/gitalk/gitalk/blob/master/readme-cn.md)\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","slug":"为使用hexo搭建的博客加入评论系统gitalk","published":1,"updated":"2020-03-22T00:44:01.910Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzfx000qpmjxblcz62ls","content":"<p>使用hexo结合github搭建自己的个人博客网站，非常方便，而且免费，对于个人来说是一个不错的选择。不过有一个缺点是没有评论系统。需要自己额外引入评论插件。<br>现在常用的评论插件有三种：<br>disqus：已经被墙了，暂时不考虑。<br>gitment：基于github的一个评论系统，但是作者长时间没有维护，需要使用自己的服务器。<br>gitalk：也是基于github的一个评论系统，目前可以正常使用。<br>主题不同添加gitalk的方法也略有区别，有的主题本身带有gitalk评论，打开相应的开关就可以。我使用的主题是beantech，本身没有gitalk评论系统。</p>\n<a id=\"more\"></a>\n<hr>\n<h2 id=\"1-注册\"><a href=\"#1-注册\" class=\"headerlink\" title=\"1.注册\"></a>1.注册</h2><hr>\n<p><a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener\">Register a new OAuth application</a><br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk1.png\" alt><br>Application name：随便写。<br>Homepage URL：网站主页的地址<br>Application description：随便写<br>Authorization callback URL：网站主页地址<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk2.png\" alt><br>会生成Client ID与Client Secret。保存好后面会用到。<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk3.png\" alt></p>\n<hr>\n<h2 id=\"2-配置gitalk\"><a href=\"#2-配置gitalk\" class=\"headerlink\" title=\"2.配置gitalk\"></a>2.配置gitalk</h2><hr>\n<h3 id=\"创建md5-min-js文件\"><a href=\"#创建md5-min-js文件\" class=\"headerlink\" title=\"创建md5.min.js文件\"></a>创建md5.min.js文件</h3><p>在主题目录source/js中创建md5.min.js文件，内容如下（代码引用自其他文章，链接在文章下方）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">! function(n) &#123;<br>    &quot;use strict&quot;;<br>    function t(n, t) &#123;<br>        var r &#x3D; (65535 &amp; n) + (65535 &amp; t);<br>        return (n &gt;&gt; 16) + (t &gt;&gt; 16) + (r &gt;&gt; 16) &lt;&lt; 16 | 65535 &amp; r<br>    &#125;<br>    function r(n, t) &#123;<br>        return n &lt;&lt; t | n &gt;&gt;&gt; 32 - t<br>    &#125;<br>    function e(n, e, o, u, c, f) &#123;<br>        return t(r(t(t(e, n), t(u, f)), c), o)<br>    &#125;<br>    function o(n, t, r, o, u, c, f) &#123;<br>        return e(t &amp; r | ~t &amp; o, n, t, u, c, f)<br>    &#125;<br>    function u(n, t, r, o, u, c, f) &#123;<br>        return e(t &amp; o | r &amp; ~o, n, t, u, c, f)<br>    &#125;<br>    function c(n, t, r, o, u, c, f) &#123;<br>        return e(t ^ r ^ o, n, t, u, c, f)<br>    &#125;<br>    function f(n, t, r, o, u, c, f) &#123;<br>        return e(r ^ (t | ~o), n, t, u, c, f)<br>    &#125;<br>    function i(n, r) &#123;<br>        n[r &gt;&gt; 5] |&#x3D; 128 &lt;&lt; r % 32, n[14 + (r + 64 &gt;&gt;&gt; 9 &lt;&lt; 4)] &#x3D; r;<br>        var e, i, a, d, h, l &#x3D; 1732584193,<br>            g &#x3D; -271733879,<br>            v &#x3D; -1732584194,<br>            m &#x3D; 271733878;<br>        for (e &#x3D; 0; e &lt; n.length; e +&#x3D; 16) i &#x3D; l, a &#x3D; g, d &#x3D; v, h &#x3D; m, g &#x3D; f(g &#x3D; f(g &#x3D; f(g &#x3D; f(g &#x3D; c(g &#x3D; c(g &#x3D; c(g &#x3D; c(g &#x3D; u(g &#x3D; u(g &#x3D; u(g &#x3D; u(g &#x3D; o(g &#x3D; o(g &#x3D; o(g &#x3D; o(g, v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e], 7, -680876936), g, v, n[e + 1], 12, -389564586), l, g, n[e + 2], 17, 606105819), m, l, n[e + 3], 22, -1044525330), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 4], 7, -176418897), g, v, n[e + 5], 12, 1200080426), l, g, n[e + 6], 17, -1473231341), m, l, n[e + 7], 22, -45705983), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 8], 7, 1770035416), g, v, n[e + 9], 12, -1958414417), l, g, n[e + 10], 17, -42063), m, l, n[e + 11], 22, -1990404162), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 12], 7, 1804603682), g, v, n[e + 13], 12, -40341101), l, g, n[e + 14], 17, -1502002290), m, l, n[e + 15], 22, 1236535329), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 1], 5, -165796510), g, v, n[e + 6], 9, -1069501632), l, g, n[e + 11], 14, 643717713), m, l, n[e], 20, -373897302), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 5], 5, -701558691), g, v, n[e + 10], 9, 38016083), l, g, n[e + 15], 14, -660478335), m, l, n[e + 4], 20, -405537848), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 9], 5, 568446438), g, v, n[e + 14], 9, -1019803690), l, g, n[e + 3], 14, -187363961), m, l, n[e + 8], 20, 1163531501), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 13], 5, -1444681467), g, v, n[e + 2], 9, -51403784), l, g, n[e + 7], 14, 1735328473), m, l, n[e + 12], 20, -1926607734), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 5], 4, -378558), g, v, n[e + 8], 11, -2022574463), l, g, n[e + 11], 16, 1839030562), m, l, n[e + 14], 23, -35309556), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 1], 4, -1530992060), g, v, n[e + 4], 11, 1272893353), l, g, n[e + 7], 16, -155497632), m, l, n[e + 10], 23, -1094730640), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 13], 4, 681279174), g, v, n[e], 11, -358537222), l, g, n[e + 3], 16, -722521979), m, l, n[e + 6], 23, 76029189), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 9], 4, -640364487), g, v, n[e + 12], 11, -421815835), l, g, n[e + 15], 16, 530742520), m, l, n[e + 2], 23, -995338651), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e], 6, -198630844), g, v, n[e + 7], 10, 1126891415), l, g, n[e + 14], 15, -1416354905), m, l, n[e + 5], 21, -57434055), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 12], 6, 1700485571), g, v, n[e + 3], 10, -1894986606), l, g, n[e + 10], 15, -1051523), m, l, n[e + 1], 21, -2054922799), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 8], 6, 1873313359), g, v, n[e + 15], 10, -30611744), l, g, n[e + 6], 15, -1560198380), m, l, n[e + 13], 21, 1309151649), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 4], 6, -145523070), g, v, n[e + 11], 10, -1120210379), l, g, n[e + 2], 15, 718787259), m, l, n[e + 9], 21, -343485551), l &#x3D; t(l, i), g &#x3D; t(g, a), v &#x3D; t(v, d), m &#x3D; t(m, h);<br>        return [l, g, v, m]<br>    &#125;<br><br>    function a(n) &#123;<br>        var t, r &#x3D; &quot;&quot;,<br>            e &#x3D; 32 * n.length;<br>        for (t &#x3D; 0; t &lt; e; t +&#x3D; 8) r +&#x3D; String.fromCharCode(n[t &gt;&gt; 5] &gt;&gt;&gt; t % 32 &amp; 255);<br>        return r<br>    &#125;<br><br>    function d(n) &#123;<br>        var t, r &#x3D; [];<br>        for (r[(n.length &gt;&gt; 2) - 1] &#x3D; void 0, t &#x3D; 0; t &lt; r.length; t +&#x3D; 1) r[t] &#x3D; 0;<br>        var e &#x3D; 8 * n.length;<br>        for (t &#x3D; 0; t &lt; e; t +&#x3D; 8) r[t &gt;&gt; 5] |&#x3D; (255 &amp; n.charCodeAt(t &#x2F; 8)) &lt;&lt; t % 32;<br>        return r<br>    &#125;<br><br>    function h(n) &#123;<br>        return a(i(d(n), 8 * n.length))<br>    &#125;<br><br>    function l(n, t) &#123;<br>        var r, e, o &#x3D; d(n),<br>            u &#x3D; [],<br>            c &#x3D; [];<br>        for (u[15] &#x3D; c[15] &#x3D; void 0, o.length &gt; 16 &amp;&amp; (o &#x3D; i(o, 8 * n.length)), r &#x3D; 0; r &lt; 16; r +&#x3D; 1) u[r] &#x3D; 909522486 ^ o[r], c[r] &#x3D; 1549556828 ^ o[r];<br>        return e &#x3D; i(u.concat(d(t)), 512 + 8 * t.length), a(i(c.concat(e), 640))<br>    &#125;<br><br>    function g(n) &#123;<br>        var t, r, e &#x3D; &quot;&quot;;<br>        for (r &#x3D; 0; r &lt; n.length; r +&#x3D; 1) t &#x3D; n.charCodeAt(r), e +&#x3D; &quot;0123456789abcdef&quot;.charAt(t &gt;&gt;&gt; 4 &amp; 15) + &quot;0123456789abcdef&quot;.charAt(15 &amp; t);<br>        return e<br>    &#125;<br>    function v(n) &#123;<br>        return unescape(encodeURIComponent(n))<br>    &#125;<br>    function m(n) &#123;<br>        return h(v(n))<br>    &#125;<br>    function p(n) &#123;<br>        return g(m(n))<br>    &#125;<br>    function s(n, t) &#123;<br>        return l(v(n), v(t))<br>    &#125;<br>    function C(n, t) &#123;<br>        return g(s(n, t))<br>    &#125;<br>    function A(n, t, r) &#123;<br>        return t ? r ? s(t, n) : C(t, n) : r ? m(n) : p(n)<br>    &#125;<br>    &quot;function&quot; &#x3D;&#x3D; typeof define &amp;&amp; define.amd ? define(function() &#123;<br>        return A<br>    &#125;) : &quot;object&quot; &#x3D;&#x3D; typeof module &amp;&amp; module.exports ? module.exports &#x3D; A : n.md5 &#x3D; A<br>&#125;(this);<br>&#x2F;&#x2F;# sourceMappingURL&#x3D;md5.min.js.map<br></code></pre></td></tr></table></figure>\n<h3 id=\"在文章后面加入代码\"><a href=\"#在文章后面加入代码\" class=\"headerlink\" title=\"在文章后面加入代码\"></a>在文章后面加入代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">&lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;<br>&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;<br>&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;<br>&lt;script src&#x3D;&quot;&#x2F;js&#x2F;md5.min.js&quot;&gt;&lt;&#x2F;script&gt;<br>&lt;script &gt;<br>var gitalk &#x3D; new Gitalk(&#123;<br>  clientID: &#39;GitHub Application Client ID&#39;,<br>  clientSecret: &#39;GitHub Application Client Secret&#39;,<br>  repo: &#39;GitHub repo&#39;,<br>  owner: &#39;GitHub repo owner&#39;,<br>  admin: [&#39;GitHub repo owner and collaborators, only these guys can initialize github issues&#39;],<br>  id: md5(location.pathname),      &#x2F;&#x2F; Ensure uniqueness and length less than 50<br>  distractionFreeMode: false  &#x2F;&#x2F; Facebook-like distraction free mode<br>&#125;)<br>gitalk.render(&#39;gitalk-container&#39;)<br>&lt;&#x2F;script&gt;<br></code></pre></td></tr></table></figure>\n<p>clientID: 前面注册的clientID<br>clientSecret： 前面注册的clientSecret<br>repo： 保存评论的仓库名字，可以是XXX.github.io<br>owner： 仓库的拥有者，写自己的用户名就可以。<br>admin： 评论管理员，写自己的用户名就可以。<br>id： 按我写的不需要修改。一定要使用md5编码，不然会因为文章名字过长报错。<br>其他保持默认即可。</p>\n<h3 id=\"gitalk初始化\"><a href=\"#gitalk初始化\" class=\"headerlink\" title=\"gitalk初始化\"></a>gitalk初始化</h3><p>将代码放到文章下方后，需要对gitalk初始化，gitalk不能自动初始化，手动初始化后，会在保存评论的仓库新建一个issue。<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk4.png\" alt><br>使用自己的github登录。会在仓库新建一个issue。</p>\n<hr>\n<p>这样就完成啦，比较简单。但是需要在每篇文章后面都加入代码，而且需要手动初始化。<br>可以在主题中加入gitalk，但是因为主题不同加入的方法也不同。<br>至于初始化，可以写个脚本自动初始化，正在学习中，后期和大家分享。如果大家有更好的方法，欢迎在评论中交流。</p>\n<hr>\n<p>参考文章：<br><a href=\"https://blog.csdn.net/am290333566/article/details/83714217\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/am290333566/article/details/83714217</a><br><a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\" target=\"_blank\" rel=\"noopener\">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":6994,"excerpt":"<p>使用hexo结合github搭建自己的个人博客网站，非常方便，而且免费，对于个人来说是一个不错的选择。不过有一个缺点是没有评论系统。需要自己额外引入评论插件。<br>现在常用的评论插件有三种：<br>disqus：已经被墙了，暂时不考虑。<br>gitment：基于github的一个评论系统，但是作者长时间没有维护，需要使用自己的服务器。<br>gitalk：也是基于github的一个评论系统，目前可以正常使用。<br>主题不同添加gitalk的方法也略有区别，有的主题本身带有gitalk评论，打开相应的开关就可以。我使用的主题是beantech，本身没有gitalk评论系统。</p>","more":"<hr>\n<h2 id=\"1-注册\"><a href=\"#1-注册\" class=\"headerlink\" title=\"1.注册\"></a>1.注册</h2><hr>\n<p><a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener\">Register a new OAuth application</a><br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk1.png\" alt><br>Application name：随便写。<br>Homepage URL：网站主页的地址<br>Application description：随便写<br>Authorization callback URL：网站主页地址<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk2.png\" alt><br>会生成Client ID与Client Secret。保存好后面会用到。<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk3.png\" alt></p>\n<hr>\n<h2 id=\"2-配置gitalk\"><a href=\"#2-配置gitalk\" class=\"headerlink\" title=\"2.配置gitalk\"></a>2.配置gitalk</h2><hr>\n<h3 id=\"创建md5-min-js文件\"><a href=\"#创建md5-min-js文件\" class=\"headerlink\" title=\"创建md5.min.js文件\"></a>创建md5.min.js文件</h3><p>在主题目录source/js中创建md5.min.js文件，内容如下（代码引用自其他文章，链接在文章下方）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">! function(n) &#123;<br>    &quot;use strict&quot;;<br>    function t(n, t) &#123;<br>        var r &#x3D; (65535 &amp; n) + (65535 &amp; t);<br>        return (n &gt;&gt; 16) + (t &gt;&gt; 16) + (r &gt;&gt; 16) &lt;&lt; 16 | 65535 &amp; r<br>    &#125;<br>    function r(n, t) &#123;<br>        return n &lt;&lt; t | n &gt;&gt;&gt; 32 - t<br>    &#125;<br>    function e(n, e, o, u, c, f) &#123;<br>        return t(r(t(t(e, n), t(u, f)), c), o)<br>    &#125;<br>    function o(n, t, r, o, u, c, f) &#123;<br>        return e(t &amp; r | ~t &amp; o, n, t, u, c, f)<br>    &#125;<br>    function u(n, t, r, o, u, c, f) &#123;<br>        return e(t &amp; o | r &amp; ~o, n, t, u, c, f)<br>    &#125;<br>    function c(n, t, r, o, u, c, f) &#123;<br>        return e(t ^ r ^ o, n, t, u, c, f)<br>    &#125;<br>    function f(n, t, r, o, u, c, f) &#123;<br>        return e(r ^ (t | ~o), n, t, u, c, f)<br>    &#125;<br>    function i(n, r) &#123;<br>        n[r &gt;&gt; 5] |&#x3D; 128 &lt;&lt; r % 32, n[14 + (r + 64 &gt;&gt;&gt; 9 &lt;&lt; 4)] &#x3D; r;<br>        var e, i, a, d, h, l &#x3D; 1732584193,<br>            g &#x3D; -271733879,<br>            v &#x3D; -1732584194,<br>            m &#x3D; 271733878;<br>        for (e &#x3D; 0; e &lt; n.length; e +&#x3D; 16) i &#x3D; l, a &#x3D; g, d &#x3D; v, h &#x3D; m, g &#x3D; f(g &#x3D; f(g &#x3D; f(g &#x3D; f(g &#x3D; c(g &#x3D; c(g &#x3D; c(g &#x3D; c(g &#x3D; u(g &#x3D; u(g &#x3D; u(g &#x3D; u(g &#x3D; o(g &#x3D; o(g &#x3D; o(g &#x3D; o(g, v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e], 7, -680876936), g, v, n[e + 1], 12, -389564586), l, g, n[e + 2], 17, 606105819), m, l, n[e + 3], 22, -1044525330), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 4], 7, -176418897), g, v, n[e + 5], 12, 1200080426), l, g, n[e + 6], 17, -1473231341), m, l, n[e + 7], 22, -45705983), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 8], 7, 1770035416), g, v, n[e + 9], 12, -1958414417), l, g, n[e + 10], 17, -42063), m, l, n[e + 11], 22, -1990404162), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 12], 7, 1804603682), g, v, n[e + 13], 12, -40341101), l, g, n[e + 14], 17, -1502002290), m, l, n[e + 15], 22, 1236535329), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 1], 5, -165796510), g, v, n[e + 6], 9, -1069501632), l, g, n[e + 11], 14, 643717713), m, l, n[e], 20, -373897302), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 5], 5, -701558691), g, v, n[e + 10], 9, 38016083), l, g, n[e + 15], 14, -660478335), m, l, n[e + 4], 20, -405537848), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 9], 5, 568446438), g, v, n[e + 14], 9, -1019803690), l, g, n[e + 3], 14, -187363961), m, l, n[e + 8], 20, 1163531501), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 13], 5, -1444681467), g, v, n[e + 2], 9, -51403784), l, g, n[e + 7], 14, 1735328473), m, l, n[e + 12], 20, -1926607734), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 5], 4, -378558), g, v, n[e + 8], 11, -2022574463), l, g, n[e + 11], 16, 1839030562), m, l, n[e + 14], 23, -35309556), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 1], 4, -1530992060), g, v, n[e + 4], 11, 1272893353), l, g, n[e + 7], 16, -155497632), m, l, n[e + 10], 23, -1094730640), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 13], 4, 681279174), g, v, n[e], 11, -358537222), l, g, n[e + 3], 16, -722521979), m, l, n[e + 6], 23, 76029189), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 9], 4, -640364487), g, v, n[e + 12], 11, -421815835), l, g, n[e + 15], 16, 530742520), m, l, n[e + 2], 23, -995338651), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e], 6, -198630844), g, v, n[e + 7], 10, 1126891415), l, g, n[e + 14], 15, -1416354905), m, l, n[e + 5], 21, -57434055), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 12], 6, 1700485571), g, v, n[e + 3], 10, -1894986606), l, g, n[e + 10], 15, -1051523), m, l, n[e + 1], 21, -2054922799), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 8], 6, 1873313359), g, v, n[e + 15], 10, -30611744), l, g, n[e + 6], 15, -1560198380), m, l, n[e + 13], 21, 1309151649), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 4], 6, -145523070), g, v, n[e + 11], 10, -1120210379), l, g, n[e + 2], 15, 718787259), m, l, n[e + 9], 21, -343485551), l &#x3D; t(l, i), g &#x3D; t(g, a), v &#x3D; t(v, d), m &#x3D; t(m, h);<br>        return [l, g, v, m]<br>    &#125;<br><br>    function a(n) &#123;<br>        var t, r &#x3D; &quot;&quot;,<br>            e &#x3D; 32 * n.length;<br>        for (t &#x3D; 0; t &lt; e; t +&#x3D; 8) r +&#x3D; String.fromCharCode(n[t &gt;&gt; 5] &gt;&gt;&gt; t % 32 &amp; 255);<br>        return r<br>    &#125;<br><br>    function d(n) &#123;<br>        var t, r &#x3D; [];<br>        for (r[(n.length &gt;&gt; 2) - 1] &#x3D; void 0, t &#x3D; 0; t &lt; r.length; t +&#x3D; 1) r[t] &#x3D; 0;<br>        var e &#x3D; 8 * n.length;<br>        for (t &#x3D; 0; t &lt; e; t +&#x3D; 8) r[t &gt;&gt; 5] |&#x3D; (255 &amp; n.charCodeAt(t &#x2F; 8)) &lt;&lt; t % 32;<br>        return r<br>    &#125;<br><br>    function h(n) &#123;<br>        return a(i(d(n), 8 * n.length))<br>    &#125;<br><br>    function l(n, t) &#123;<br>        var r, e, o &#x3D; d(n),<br>            u &#x3D; [],<br>            c &#x3D; [];<br>        for (u[15] &#x3D; c[15] &#x3D; void 0, o.length &gt; 16 &amp;&amp; (o &#x3D; i(o, 8 * n.length)), r &#x3D; 0; r &lt; 16; r +&#x3D; 1) u[r] &#x3D; 909522486 ^ o[r], c[r] &#x3D; 1549556828 ^ o[r];<br>        return e &#x3D; i(u.concat(d(t)), 512 + 8 * t.length), a(i(c.concat(e), 640))<br>    &#125;<br><br>    function g(n) &#123;<br>        var t, r, e &#x3D; &quot;&quot;;<br>        for (r &#x3D; 0; r &lt; n.length; r +&#x3D; 1) t &#x3D; n.charCodeAt(r), e +&#x3D; &quot;0123456789abcdef&quot;.charAt(t &gt;&gt;&gt; 4 &amp; 15) + &quot;0123456789abcdef&quot;.charAt(15 &amp; t);<br>        return e<br>    &#125;<br>    function v(n) &#123;<br>        return unescape(encodeURIComponent(n))<br>    &#125;<br>    function m(n) &#123;<br>        return h(v(n))<br>    &#125;<br>    function p(n) &#123;<br>        return g(m(n))<br>    &#125;<br>    function s(n, t) &#123;<br>        return l(v(n), v(t))<br>    &#125;<br>    function C(n, t) &#123;<br>        return g(s(n, t))<br>    &#125;<br>    function A(n, t, r) &#123;<br>        return t ? r ? s(t, n) : C(t, n) : r ? m(n) : p(n)<br>    &#125;<br>    &quot;function&quot; &#x3D;&#x3D; typeof define &amp;&amp; define.amd ? define(function() &#123;<br>        return A<br>    &#125;) : &quot;object&quot; &#x3D;&#x3D; typeof module &amp;&amp; module.exports ? module.exports &#x3D; A : n.md5 &#x3D; A<br>&#125;(this);<br>&#x2F;&#x2F;# sourceMappingURL&#x3D;md5.min.js.map<br></code></pre></td></tr></table></figure>\n<h3 id=\"在文章后面加入代码\"><a href=\"#在文章后面加入代码\" class=\"headerlink\" title=\"在文章后面加入代码\"></a>在文章后面加入代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">&lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;<br>&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;<br>&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;<br>&lt;script src&#x3D;&quot;&#x2F;js&#x2F;md5.min.js&quot;&gt;&lt;&#x2F;script&gt;<br>&lt;script &gt;<br>var gitalk &#x3D; new Gitalk(&#123;<br>  clientID: &#39;GitHub Application Client ID&#39;,<br>  clientSecret: &#39;GitHub Application Client Secret&#39;,<br>  repo: &#39;GitHub repo&#39;,<br>  owner: &#39;GitHub repo owner&#39;,<br>  admin: [&#39;GitHub repo owner and collaborators, only these guys can initialize github issues&#39;],<br>  id: md5(location.pathname),      &#x2F;&#x2F; Ensure uniqueness and length less than 50<br>  distractionFreeMode: false  &#x2F;&#x2F; Facebook-like distraction free mode<br>&#125;)<br>gitalk.render(&#39;gitalk-container&#39;)<br>&lt;&#x2F;script&gt;<br></code></pre></td></tr></table></figure>\n<p>clientID: 前面注册的clientID<br>clientSecret： 前面注册的clientSecret<br>repo： 保存评论的仓库名字，可以是XXX.github.io<br>owner： 仓库的拥有者，写自己的用户名就可以。<br>admin： 评论管理员，写自己的用户名就可以。<br>id： 按我写的不需要修改。一定要使用md5编码，不然会因为文章名字过长报错。<br>其他保持默认即可。</p>\n<h3 id=\"gitalk初始化\"><a href=\"#gitalk初始化\" class=\"headerlink\" title=\"gitalk初始化\"></a>gitalk初始化</h3><p>将代码放到文章下方后，需要对gitalk初始化，gitalk不能自动初始化，手动初始化后，会在保存评论的仓库新建一个issue。<br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk4.png\" alt><br>使用自己的github登录。会在仓库新建一个issue。</p>\n<hr>\n<p>这样就完成啦，比较简单。但是需要在每篇文章后面都加入代码，而且需要手动初始化。<br>可以在主题中加入gitalk，但是因为主题不同加入的方法也不同。<br>至于初始化，可以写个脚本自动初始化，正在学习中，后期和大家分享。如果大家有更好的方法，欢迎在评论中交流。</p>\n<hr>\n<p>参考文章：<br><a href=\"https://blog.csdn.net/am290333566/article/details/83714217\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/am290333566/article/details/83714217</a><br><a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\" target=\"_blank\" rel=\"noopener\">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"将静态博客托管在nanopi上","catalog":true,"date":"2020-03-01T12:11:50.000Z","subtitle":null,"_content":"\n最近买了一个nanopi，里面运行的是Ubuntu，可以做很多事情，我便想到用来做我博客的服务器。这前我是把我的博客托管在Github上。Github在国内的速度还是比较慢的。而且以前有被墙过。\n\n---\n\n在nanopi上安装nginx\n\n```bash\n$ sudo apt install nginx\n```\n<!--more-->\n编辑nginx的设置文件\n\n```bash\n$ vim /etc/nginx/nginx.conf\n```\n\n在http里面加\n\n```bash\nserver {\n                listen          80 default_server;\n                server_name     ccbirds.cn;//自己的域名\n                root            /home/fa/hexo-blog; //clone下来的位置\n                location / {\n                }\n        }\n\n        server {\n                listen          80;\n                server_name     www.ccbirds.cn;\n                return          301 http://ccbirds.cn$request_uri;\n        }\n```\n\n开启nginx服务\n\n```bash\n$ sudo service nginx start  //启动命令\n$ sudo service nginx stop   //停止命令\n$ sudo service nginx restart  //重启命令\n```\n\n如果报错，根据提示查看报错原因，\n\n```bash\n$ sudo nginx -t  //查看配置文件是否有问题\n$ ps -ef | grep nginx  //显示nginx的进程\n$ sudo kill -quit 14952  //杀死进程\n```\n\n现在使用IP或者域名就可以访问了。\n\n---\n\n可是每次更新博客都要手动clone一下吗？\n\n网上有使用webhooks自动部署的方法，不过本人比较笨，没有弄好，感兴趣的可以试试，成功了记得告诉我一声。\n\n我采用了比较笨的一种方法，每天定时删除hexo-log，定时重新clone一次。\n\n```bash\n$ crontab -e \n//在最后加上两句\n0 0 * * * sudo rm -rf /home/fa/hexo-blog  //每天零点删除hexo-blog\n5 0 * * * sudo git clone https://github.com/ccbirds/ccbirds.github.io.git /home/fa/hexo-blog  //每天零点五分 重新clone\n$ sudo service cron restart  //重启cron\n$ service cron restart\n```\n\n五个* * * * *\n对应的分别是 分 时 天 月 周\n\n不是很完美，先这样吧。\n\n---\n\n遇到的问题：\n\n启动nginx时，报错，80端口已经被占用，看了一下进程，发现是nginx自己占用了80端口。使用nginx -t 看一下问题，是/etc/nginx/sites-enabled/default这个也在使用80端口，把这里的80改成其他端口就没有问题了\n\n---\n\n欢迎大家访问！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n\n","source":"_posts/将静态博客托管在nanopi上.md","raw":"---\ntitle: \"将静态博客托管在nanopi上\"\ncatalog: true\ndate: 2020-03-01 20:11:50\nsubtitle: \n\ntags:\n- nanopi\n- 博客托管\ncategories:\n- nanopi\n---\n\n最近买了一个nanopi，里面运行的是Ubuntu，可以做很多事情，我便想到用来做我博客的服务器。这前我是把我的博客托管在Github上。Github在国内的速度还是比较慢的。而且以前有被墙过。\n\n---\n\n在nanopi上安装nginx\n\n```bash\n$ sudo apt install nginx\n```\n<!--more-->\n编辑nginx的设置文件\n\n```bash\n$ vim /etc/nginx/nginx.conf\n```\n\n在http里面加\n\n```bash\nserver {\n                listen          80 default_server;\n                server_name     ccbirds.cn;//自己的域名\n                root            /home/fa/hexo-blog; //clone下来的位置\n                location / {\n                }\n        }\n\n        server {\n                listen          80;\n                server_name     www.ccbirds.cn;\n                return          301 http://ccbirds.cn$request_uri;\n        }\n```\n\n开启nginx服务\n\n```bash\n$ sudo service nginx start  //启动命令\n$ sudo service nginx stop   //停止命令\n$ sudo service nginx restart  //重启命令\n```\n\n如果报错，根据提示查看报错原因，\n\n```bash\n$ sudo nginx -t  //查看配置文件是否有问题\n$ ps -ef | grep nginx  //显示nginx的进程\n$ sudo kill -quit 14952  //杀死进程\n```\n\n现在使用IP或者域名就可以访问了。\n\n---\n\n可是每次更新博客都要手动clone一下吗？\n\n网上有使用webhooks自动部署的方法，不过本人比较笨，没有弄好，感兴趣的可以试试，成功了记得告诉我一声。\n\n我采用了比较笨的一种方法，每天定时删除hexo-log，定时重新clone一次。\n\n```bash\n$ crontab -e \n//在最后加上两句\n0 0 * * * sudo rm -rf /home/fa/hexo-blog  //每天零点删除hexo-blog\n5 0 * * * sudo git clone https://github.com/ccbirds/ccbirds.github.io.git /home/fa/hexo-blog  //每天零点五分 重新clone\n$ sudo service cron restart  //重启cron\n$ service cron restart\n```\n\n五个* * * * *\n对应的分别是 分 时 天 月 周\n\n不是很完美，先这样吧。\n\n---\n\n遇到的问题：\n\n启动nginx时，报错，80端口已经被占用，看了一下进程，发现是nginx自己占用了80端口。使用nginx -t 看一下问题，是/etc/nginx/sites-enabled/default这个也在使用80端口，把这里的80改成其他端口就没有问题了\n\n---\n\n欢迎大家访问！\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n\n\n","slug":"将静态博客托管在nanopi上","published":1,"updated":"2020-03-22T00:43:04.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzg3000tpmjxc26v0d7f","content":"<p>最近买了一个nanopi，里面运行的是Ubuntu，可以做很多事情，我便想到用来做我博客的服务器。这前我是把我的博客托管在Github上。Github在国内的速度还是比较慢的。而且以前有被墙过。</p>\n<hr>\n<p>在nanopi上安装nginx</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt install nginx<br></code></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>编辑nginx的设置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ vim /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure>\n\n<p>在http里面加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">server &#123;<br>                listen          80 default_server;<br>                server_name     ccbirds.cn;//自己的域名<br>                root            /home/fa/hexo-blog; //<span class=\"hljs-built_in\">clone</span>下来的位置<br>                location / &#123;<br>                &#125;<br>        &#125;<br><br>        server &#123;<br>                listen          80;<br>                server_name     www.ccbirds.cn;<br>                <span class=\"hljs-built_in\">return</span>          301 http://ccbirds.cn<span class=\"hljs-variable\">$request_uri</span>;<br>        &#125;<br></code></pre></td></tr></table></figure>\n\n<p>开启nginx服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo service nginx start  //启动命令<br>$ sudo service nginx stop   //停止命令<br>$ sudo service nginx restart  //重启命令<br></code></pre></td></tr></table></figure>\n\n<p>如果报错，根据提示查看报错原因，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo nginx -t  //查看配置文件是否有问题<br>$ ps -ef | grep nginx  //显示nginx的进程<br>$ sudo <span class=\"hljs-built_in\">kill</span> -quit 14952  //杀死进程<br></code></pre></td></tr></table></figure>\n\n<p>现在使用IP或者域名就可以访问了。</p>\n<hr>\n<p>可是每次更新博客都要手动clone一下吗？</p>\n<p>网上有使用webhooks自动部署的方法，不过本人比较笨，没有弄好，感兴趣的可以试试，成功了记得告诉我一声。</p>\n<p>我采用了比较笨的一种方法，每天定时删除hexo-log，定时重新clone一次。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ crontab -e <br>//在最后加上两句<br>0 0 * * * sudo rm -rf /home/fa/hexo-blog  //每天零点删除hexo-blog<br>5 0 * * * sudo git <span class=\"hljs-built_in\">clone</span> https://github.com/ccbirds/ccbirds.github.io.git /home/fa/hexo-blog  //每天零点五分 重新<span class=\"hljs-built_in\">clone</span><br>$ sudo service cron restart  //重启cron<br>$ service cron restart<br></code></pre></td></tr></table></figure>\n\n<p>五个* * * * *<br>对应的分别是 分 时 天 月 周</p>\n<p>不是很完美，先这样吧。</p>\n<hr>\n<p>遇到的问题：</p>\n<p>启动nginx时，报错，80端口已经被占用，看了一下进程，发现是nginx自己占用了80端口。使用nginx -t 看一下问题，是/etc/nginx/sites-enabled/default这个也在使用80端口，把这里的80改成其他端口就没有问题了</p>\n<hr>\n<p>欢迎大家访问！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":1160,"excerpt":"<p>最近买了一个nanopi，里面运行的是Ubuntu，可以做很多事情，我便想到用来做我博客的服务器。这前我是把我的博客托管在Github上。Github在国内的速度还是比较慢的。而且以前有被墙过。</p>\n<hr>\n<p>在nanopi上安装nginx</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo apt install nginx<br></code></pre></td></tr></table></figure>","more":"<p>编辑nginx的设置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ vim /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure>\n\n<p>在http里面加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">server &#123;<br>                listen          80 default_server;<br>                server_name     ccbirds.cn;//自己的域名<br>                root            /home/fa/hexo-blog; //<span class=\"hljs-built_in\">clone</span>下来的位置<br>                location / &#123;<br>                &#125;<br>        &#125;<br><br>        server &#123;<br>                listen          80;<br>                server_name     www.ccbirds.cn;<br>                <span class=\"hljs-built_in\">return</span>          301 http://ccbirds.cn<span class=\"hljs-variable\">$request_uri</span>;<br>        &#125;<br></code></pre></td></tr></table></figure>\n\n<p>开启nginx服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo service nginx start  //启动命令<br>$ sudo service nginx stop   //停止命令<br>$ sudo service nginx restart  //重启命令<br></code></pre></td></tr></table></figure>\n\n<p>如果报错，根据提示查看报错原因，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ sudo nginx -t  //查看配置文件是否有问题<br>$ ps -ef | grep nginx  //显示nginx的进程<br>$ sudo <span class=\"hljs-built_in\">kill</span> -quit 14952  //杀死进程<br></code></pre></td></tr></table></figure>\n\n<p>现在使用IP或者域名就可以访问了。</p>\n<hr>\n<p>可是每次更新博客都要手动clone一下吗？</p>\n<p>网上有使用webhooks自动部署的方法，不过本人比较笨，没有弄好，感兴趣的可以试试，成功了记得告诉我一声。</p>\n<p>我采用了比较笨的一种方法，每天定时删除hexo-log，定时重新clone一次。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ crontab -e <br>//在最后加上两句<br>0 0 * * * sudo rm -rf /home/fa/hexo-blog  //每天零点删除hexo-blog<br>5 0 * * * sudo git <span class=\"hljs-built_in\">clone</span> https://github.com/ccbirds/ccbirds.github.io.git /home/fa/hexo-blog  //每天零点五分 重新<span class=\"hljs-built_in\">clone</span><br>$ sudo service cron restart  //重启cron<br>$ service cron restart<br></code></pre></td></tr></table></figure>\n\n<p>五个* * * * *<br>对应的分别是 分 时 天 月 周</p>\n<p>不是很完美，先这样吧。</p>\n<hr>\n<p>遇到的问题：</p>\n<p>启动nginx时，报错，80端口已经被占用，看了一下进程，发现是nginx自己占用了80端口。使用nginx -t 看一下问题，是/etc/nginx/sites-enabled/default这个也在使用80端口，把这里的80改成其他端口就没有问题了</p>\n<hr>\n<p>欢迎大家访问！</p>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"快速重装win10系统","date":"2020-03-18T11:35:19.000Z","catalog":true,"subtitle":null,"_content":"\n怎么快速的给自己的电脑重装一个系统？\n\n---\n\n### 1、下载win镜像\n\n---\n\n可以在I Tell You 上下载纯净版win10镜像，[https://msdn.itellyou.cn/](https://msdn.itellyou.cn/) \n\nX64为64位的，X86为32位的，正常个人使电脑选择consumer editions。下面为迅雷的链接，打开迅雷就可以下载了。大家根据自己电脑情况下载相应版本。不要把镜像下载到一会要装系统的分区（桌面也是在C盘哦）！\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win镜像.png)\n\n<!--more-->\n\n---\n\n### 2、制作优盘启动工具\n\n---\n\n下载大白菜优盘启动盘制作工具,下载地址：[http://www.dabaicai.pw/](http://www.dabaicai.pw/) \n\n推荐大家下载UEFI版。下载后安装并启动大白菜，插入优盘。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai1.png)\n\n设备选择自己的优盘，其他默认即可。点开始制作。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai2.png)\n\n会删除优盘里面的文件，重要文件提前备份。稍等几分钟。制作完成后可以尝试模拟启动。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai3.png)4\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai4.png)\n\n优盘启动盘制作就完成了。\n\n---\n\n### 3、进入bios\n\n---\n\n重启电脑进行电脑bios。各品牌电脑进入bios的热键不太一样，大家可以百度一下自己电脑怎么进入bios。我以联想笔记本为例。联想笔记本左边有一个小孔，用针往里按一下，会有按键按下的感觉。开机时，不按电源键，按一下这个小孔就会进入bios。\n\n进入bios，选择BIOS setup,\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios1.jpg)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios2.jpg)\n\n进入后选择Boot，修改Boot Mode为UEFI模式，之后选择Exit，选择退出并保存。\n\n再次进入bios，选择Boot Menu，\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios3.jpg)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios4.jpg)\n\n选择从优盘启动，USB HDD。我的优盘是金士顿的。确定，大白菜优盘启动。\n\n---\n\n### 4、大白菜优盘启动\n\n---\n\n成功进入大白菜。\n\n如果硬盘还没有安装过系统，一定要重新分一下区，使用DIskGenius工具。选择快速分区，分区类型为GUID，一定要创建ESP和MSR分区。点确定开始建立分区 。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/分区1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜1.png)\n\n点浏览，选择刚才下载的win10镜像。可以选择win10的不同版本，至于各版本有什么不同，在此不多赘述，大家可以自己搜索一下。正常家用看电影办公选择家庭的就可以。如果个人有些开发的需要，选择专业的就可以。\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜2.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜3.png)\n\n选择系统将要安装的位置，不要选错了！\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜4.png)\n\n选择全自动安装，其他默认即可。等待一会。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜5.png)\n\n制作完成会提示你重启电脑，重启电脑，此时拔掉优盘。\n\n---\n\n### 5、win10安装设置\n\n---\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装2.png)\n\nwin10开始系统准备，等一会，可能需要一段时间。会重启几次。之后依次根据提示设置。\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装3.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装 4.png)\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装6.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装7.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装8.png)\n\n有账户可以登录一下，没有就点左下的脱机账户。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装70.png)\n\n没有账户就选择有限体验，实际上Microsoft的应用和服务咱们是不用的，有没有就无所谓了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装10.png)\n\n输入用户名。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装11.png)\n\n输入登录密码。输入两次。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装12.png)\n\n设置3个安全问题。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装13.png)\n\n点否即可。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装14.png)\n\n根据自己需要选择。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装15.png)\n\n根据自己需要选择。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装20.png)\n\n到这里，系统就装完了。\n\n\n\n---\n\n\n\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","source":"_posts/快速重装win10系统.md","raw":"---\ntitle: \"快速重装win10系统\"\ndate: 2020-3-18 19:35:19\ncatalog: true\nsubtitle: \ntags:\n- win10\n- 系统重装\ncategories:\n- 经验分享\n---\n\n怎么快速的给自己的电脑重装一个系统？\n\n---\n\n### 1、下载win镜像\n\n---\n\n可以在I Tell You 上下载纯净版win10镜像，[https://msdn.itellyou.cn/](https://msdn.itellyou.cn/) \n\nX64为64位的，X86为32位的，正常个人使电脑选择consumer editions。下面为迅雷的链接，打开迅雷就可以下载了。大家根据自己电脑情况下载相应版本。不要把镜像下载到一会要装系统的分区（桌面也是在C盘哦）！\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win镜像.png)\n\n<!--more-->\n\n---\n\n### 2、制作优盘启动工具\n\n---\n\n下载大白菜优盘启动盘制作工具,下载地址：[http://www.dabaicai.pw/](http://www.dabaicai.pw/) \n\n推荐大家下载UEFI版。下载后安装并启动大白菜，插入优盘。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai1.png)\n\n设备选择自己的优盘，其他默认即可。点开始制作。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai2.png)\n\n会删除优盘里面的文件，重要文件提前备份。稍等几分钟。制作完成后可以尝试模拟启动。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai3.png)4\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai4.png)\n\n优盘启动盘制作就完成了。\n\n---\n\n### 3、进入bios\n\n---\n\n重启电脑进行电脑bios。各品牌电脑进入bios的热键不太一样，大家可以百度一下自己电脑怎么进入bios。我以联想笔记本为例。联想笔记本左边有一个小孔，用针往里按一下，会有按键按下的感觉。开机时，不按电源键，按一下这个小孔就会进入bios。\n\n进入bios，选择BIOS setup,\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios1.jpg)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios2.jpg)\n\n进入后选择Boot，修改Boot Mode为UEFI模式，之后选择Exit，选择退出并保存。\n\n再次进入bios，选择Boot Menu，\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios3.jpg)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios4.jpg)\n\n选择从优盘启动，USB HDD。我的优盘是金士顿的。确定，大白菜优盘启动。\n\n---\n\n### 4、大白菜优盘启动\n\n---\n\n成功进入大白菜。\n\n如果硬盘还没有安装过系统，一定要重新分一下区，使用DIskGenius工具。选择快速分区，分区类型为GUID，一定要创建ESP和MSR分区。点确定开始建立分区 。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/分区1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜1.png)\n\n点浏览，选择刚才下载的win10镜像。可以选择win10的不同版本，至于各版本有什么不同，在此不多赘述，大家可以自己搜索一下。正常家用看电影办公选择家庭的就可以。如果个人有些开发的需要，选择专业的就可以。\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜2.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜3.png)\n\n选择系统将要安装的位置，不要选错了！\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜4.png)\n\n选择全自动安装，其他默认即可。等待一会。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/大白菜5.png)\n\n制作完成会提示你重启电脑，重启电脑，此时拔掉优盘。\n\n---\n\n### 5、win10安装设置\n\n---\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装2.png)\n\nwin10开始系统准备，等一会，可能需要一段时间。会重启几次。之后依次根据提示设置。\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装3.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装 4.png)\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装6.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装7.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装8.png)\n\n有账户可以登录一下，没有就点左下的脱机账户。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装70.png)\n\n没有账户就选择有限体验，实际上Microsoft的应用和服务咱们是不用的，有没有就无所谓了。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装10.png)\n\n输入用户名。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装11.png)\n\n输入登录密码。输入两次。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装12.png)\n\n设置3个安全问题。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装13.png)\n\n点否即可。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装14.png)\n\n根据自己需要选择。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装15.png)\n\n根据自己需要选择。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装20.png)\n\n到这里，系统就装完了。\n\n\n\n---\n\n\n\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n","slug":"快速重装win10系统","published":1,"updated":"2020-03-22T00:43:35.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzg7000wpmjxfn8w3lno","content":"<p>怎么快速的给自己的电脑重装一个系统？</p>\n<hr>\n<h3 id=\"1、下载win镜像\"><a href=\"#1、下载win镜像\" class=\"headerlink\" title=\"1、下载win镜像\"></a>1、下载win镜像</h3><hr>\n<p>可以在I Tell You 上下载纯净版win10镜像，<a href=\"https://msdn.itellyou.cn/\" target=\"_blank\" rel=\"noopener\">https://msdn.itellyou.cn/</a> </p>\n<p>X64为64位的，X86为32位的，正常个人使电脑选择consumer editions。下面为迅雷的链接，打开迅雷就可以下载了。大家根据自己电脑情况下载相应版本。不要把镜像下载到一会要装系统的分区（桌面也是在C盘哦）！</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win%E9%95%9C%E5%83%8F.png\" alt></p>\n<a id=\"more\"></a>\n\n<hr>\n<h3 id=\"2、制作优盘启动工具\"><a href=\"#2、制作优盘启动工具\" class=\"headerlink\" title=\"2、制作优盘启动工具\"></a>2、制作优盘启动工具</h3><hr>\n<p>下载大白菜优盘启动盘制作工具,下载地址：<a href=\"http://www.dabaicai.pw/\" target=\"_blank\" rel=\"noopener\">http://www.dabaicai.pw/</a> </p>\n<p>推荐大家下载UEFI版。下载后安装并启动大白菜，插入优盘。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai1.png\" alt></p>\n<p>设备选择自己的优盘，其他默认即可。点开始制作。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai2.png\" alt></p>\n<p>会删除优盘里面的文件，重要文件提前备份。稍等几分钟。制作完成后可以尝试模拟启动。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai3.png\" alt>4</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai4.png\" alt></p>\n<p>优盘启动盘制作就完成了。</p>\n<hr>\n<h3 id=\"3、进入bios\"><a href=\"#3、进入bios\" class=\"headerlink\" title=\"3、进入bios\"></a>3、进入bios</h3><hr>\n<p>重启电脑进行电脑bios。各品牌电脑进入bios的热键不太一样，大家可以百度一下自己电脑怎么进入bios。我以联想笔记本为例。联想笔记本左边有一个小孔，用针往里按一下，会有按键按下的感觉。开机时，不按电源键，按一下这个小孔就会进入bios。</p>\n<p>进入bios，选择BIOS setup,</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios1.jpg\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios2.jpg\" alt></p>\n<p>进入后选择Boot，修改Boot Mode为UEFI模式，之后选择Exit，选择退出并保存。</p>\n<p>再次进入bios，选择Boot Menu，</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios3.jpg\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios4.jpg\" alt></p>\n<p>选择从优盘启动，USB HDD。我的优盘是金士顿的。确定，大白菜优盘启动。</p>\n<hr>\n<h3 id=\"4、大白菜优盘启动\"><a href=\"#4、大白菜优盘启动\" class=\"headerlink\" title=\"4、大白菜优盘启动\"></a>4、大白菜优盘启动</h3><hr>\n<p>成功进入大白菜。</p>\n<p>如果硬盘还没有安装过系统，一定要重新分一下区，使用DIskGenius工具。选择快速分区，分区类型为GUID，一定要创建ESP和MSR分区。点确定开始建立分区 。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%88%86%E5%8C%BA1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C1.png\" alt></p>\n<p>点浏览，选择刚才下载的win10镜像。可以选择win10的不同版本，至于各版本有什么不同，在此不多赘述，大家可以自己搜索一下。正常家用看电影办公选择家庭的就可以。如果个人有些开发的需要，选择专业的就可以。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C2.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C3.png\" alt></p>\n<p>选择系统将要安装的位置，不要选错了！</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C4.png\" alt></p>\n<p>选择全自动安装，其他默认即可。等待一会。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C5.png\" alt></p>\n<p>制作完成会提示你重启电脑，重启电脑，此时拔掉优盘。</p>\n<hr>\n<h3 id=\"5、win10安装设置\"><a href=\"#5、win10安装设置\" class=\"headerlink\" title=\"5、win10安装设置\"></a>5、win10安装设置</h3><hr>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%851.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%852.png\" alt></p>\n<p>win10开始系统准备，等一会，可能需要一段时间。会重启几次。之后依次根据提示设置。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%853.png\" alt></p>\n<p>![](<a href=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装\" target=\"_blank\" rel=\"noopener\">https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装</a> 4.png)</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%856.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%857.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%858.png\" alt></p>\n<p>有账户可以登录一下，没有就点左下的脱机账户。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8570.png\" alt></p>\n<p>没有账户就选择有限体验，实际上Microsoft的应用和服务咱们是不用的，有没有就无所谓了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8510.png\" alt></p>\n<p>输入用户名。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8511.png\" alt></p>\n<p>输入登录密码。输入两次。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8512.png\" alt></p>\n<p>设置3个安全问题。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8513.png\" alt></p>\n<p>点否即可。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8514.png\" alt></p>\n<p>根据自己需要选择。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8515.png\" alt></p>\n<p>根据自己需要选择。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8520.png\" alt></p>\n<p>到这里，系统就装完了。</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":1143,"excerpt":"<p>怎么快速的给自己的电脑重装一个系统？</p>\n<hr>\n<h3 id=\"1、下载win镜像\"><a href=\"#1、下载win镜像\" class=\"headerlink\" title=\"1、下载win镜像\"></a>1、下载win镜像</h3><hr>\n<p>可以在I Tell You 上下载纯净版win10镜像，<a href=\"https://msdn.itellyou.cn/\" target=\"_blank\" rel=\"noopener\">https://msdn.itellyou.cn/</a> </p>\n<p>X64为64位的，X86为32位的，正常个人使电脑选择consumer editions。下面为迅雷的链接，打开迅雷就可以下载了。大家根据自己电脑情况下载相应版本。不要把镜像下载到一会要装系统的分区（桌面也是在C盘哦）！</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win%E9%95%9C%E5%83%8F.png\" alt></p>","more":"<hr>\n<h3 id=\"2、制作优盘启动工具\"><a href=\"#2、制作优盘启动工具\" class=\"headerlink\" title=\"2、制作优盘启动工具\"></a>2、制作优盘启动工具</h3><hr>\n<p>下载大白菜优盘启动盘制作工具,下载地址：<a href=\"http://www.dabaicai.pw/\" target=\"_blank\" rel=\"noopener\">http://www.dabaicai.pw/</a> </p>\n<p>推荐大家下载UEFI版。下载后安装并启动大白菜，插入优盘。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai1.png\" alt></p>\n<p>设备选择自己的优盘，其他默认即可。点开始制作。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai2.png\" alt></p>\n<p>会删除优盘里面的文件，重要文件提前备份。稍等几分钟。制作完成后可以尝试模拟启动。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai3.png\" alt>4</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai4.png\" alt></p>\n<p>优盘启动盘制作就完成了。</p>\n<hr>\n<h3 id=\"3、进入bios\"><a href=\"#3、进入bios\" class=\"headerlink\" title=\"3、进入bios\"></a>3、进入bios</h3><hr>\n<p>重启电脑进行电脑bios。各品牌电脑进入bios的热键不太一样，大家可以百度一下自己电脑怎么进入bios。我以联想笔记本为例。联想笔记本左边有一个小孔，用针往里按一下，会有按键按下的感觉。开机时，不按电源键，按一下这个小孔就会进入bios。</p>\n<p>进入bios，选择BIOS setup,</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios1.jpg\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios2.jpg\" alt></p>\n<p>进入后选择Boot，修改Boot Mode为UEFI模式，之后选择Exit，选择退出并保存。</p>\n<p>再次进入bios，选择Boot Menu，</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios3.jpg\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios4.jpg\" alt></p>\n<p>选择从优盘启动，USB HDD。我的优盘是金士顿的。确定，大白菜优盘启动。</p>\n<hr>\n<h3 id=\"4、大白菜优盘启动\"><a href=\"#4、大白菜优盘启动\" class=\"headerlink\" title=\"4、大白菜优盘启动\"></a>4、大白菜优盘启动</h3><hr>\n<p>成功进入大白菜。</p>\n<p>如果硬盘还没有安装过系统，一定要重新分一下区，使用DIskGenius工具。选择快速分区，分区类型为GUID，一定要创建ESP和MSR分区。点确定开始建立分区 。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%88%86%E5%8C%BA1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C1.png\" alt></p>\n<p>点浏览，选择刚才下载的win10镜像。可以选择win10的不同版本，至于各版本有什么不同，在此不多赘述，大家可以自己搜索一下。正常家用看电影办公选择家庭的就可以。如果个人有些开发的需要，选择专业的就可以。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C2.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C3.png\" alt></p>\n<p>选择系统将要安装的位置，不要选错了！</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C4.png\" alt></p>\n<p>选择全自动安装，其他默认即可。等待一会。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C5.png\" alt></p>\n<p>制作完成会提示你重启电脑，重启电脑，此时拔掉优盘。</p>\n<hr>\n<h3 id=\"5、win10安装设置\"><a href=\"#5、win10安装设置\" class=\"headerlink\" title=\"5、win10安装设置\"></a>5、win10安装设置</h3><hr>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%851.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%852.png\" alt></p>\n<p>win10开始系统准备，等一会，可能需要一段时间。会重启几次。之后依次根据提示设置。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%853.png\" alt></p>\n<p>![](<a href=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装\" target=\"_blank\" rel=\"noopener\">https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装</a> 4.png)</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%856.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%857.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%858.png\" alt></p>\n<p>有账户可以登录一下，没有就点左下的脱机账户。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8570.png\" alt></p>\n<p>没有账户就选择有限体验，实际上Microsoft的应用和服务咱们是不用的，有没有就无所谓了。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8510.png\" alt></p>\n<p>输入用户名。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8511.png\" alt></p>\n<p>输入登录密码。输入两次。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8512.png\" alt></p>\n<p>设置3个安全问题。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8513.png\" alt></p>\n<p>点否即可。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8514.png\" alt></p>\n<p>根据自己需要选择。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8515.png\" alt></p>\n<p>根据自己需要选择。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8520.png\" alt></p>\n<p>到这里，系统就装完了。</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"手机无线投屏win10","date":"2020-02-27T01:12:15.000Z","catalog":true,"subtitle":null,"_content":"\n手机上屏幕小，看视频特别难受，并且有些软件没与PC版，应该怎么办?下面我来介绍一种方法，将手机屏幕投屏到电脑上。\n\n---\n\n条件：1.装有win10的PC。\n2. 手机具有无线投屏功能（现在大多数手机都有无线投屏功能，只是名字可能有些不同，下面一以荣耀V10手机为例给大家演示）\n<!--more-->\n---\n## 步骤\n---\n### 1.PC端\n---\n#### 使用搜索命令搜索“连接”\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏1.png)\n#### 打开连接应用，\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏2.png)\n#### 记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\n---\n### 2.手机端\n---\n#### 打开设置\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏3.jpg)\n#### 选择设备连接\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏4.jpg)\n#### 选择无线投屏功能\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏5.jpg)\n#### 需要打开WLAN，它会搜索可使用设备。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏6.jpg)\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏7.jpg)\n#### 选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏8.png)\n#### 点右上角按钮，可以全屏。\n---\n大家赶紧去试试吧。\n有问题可以联系我，邮箱：hanbing3566@gmail.com\n\n---\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","source":"_posts/手机无线投屏win10.md","raw":"---\ntitle: 手机无线投屏win10\ndate: 2020-02-27 09:12:15\ncatalog: true\nsubtitle: \ntags:\n- 投屏\ncategories:\n- 经验分享\n---\n\n手机上屏幕小，看视频特别难受，并且有些软件没与PC版，应该怎么办?下面我来介绍一种方法，将手机屏幕投屏到电脑上。\n\n---\n\n条件：1.装有win10的PC。\n2. 手机具有无线投屏功能（现在大多数手机都有无线投屏功能，只是名字可能有些不同，下面一以荣耀V10手机为例给大家演示）\n<!--more-->\n---\n## 步骤\n---\n### 1.PC端\n---\n#### 使用搜索命令搜索“连接”\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏1.png)\n#### 打开连接应用，\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏2.png)\n#### 记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\n---\n### 2.手机端\n---\n#### 打开设置\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏3.jpg)\n#### 选择设备连接\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏4.jpg)\n#### 选择无线投屏功能\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏5.jpg)\n#### 需要打开WLAN，它会搜索可使用设备。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏6.jpg)\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏7.jpg)\n#### 选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/投屏8.png)\n#### 点右上角按钮，可以全屏。\n---\n大家赶紧去试试吧。\n有问题可以联系我，邮箱：hanbing3566@gmail.com\n\n---\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","slug":"手机无线投屏win10","published":1,"updated":"2020-03-22T00:43:47.303Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzgq000ypmjxctfxe5lm","content":"<p>手机上屏幕小，看视频特别难受，并且有些软件没与PC版，应该怎么办?下面我来介绍一种方法，将手机屏幕投屏到电脑上。</p>\n<hr>\n<p>条件：1.装有win10的PC。<br>2. 手机具有无线投屏功能（现在大多数手机都有无线投屏功能，只是名字可能有些不同，下面一以荣耀V10手机为例给大家演示）</p>\n<a id=\"more\"></a>\n<hr>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><hr>\n<h3 id=\"1-PC端\"><a href=\"#1-PC端\" class=\"headerlink\" title=\"1.PC端\"></a>1.PC端</h3><hr>\n<h4 id=\"使用搜索命令搜索“连接”\"><a href=\"#使用搜索命令搜索“连接”\" class=\"headerlink\" title=\"使用搜索命令搜索“连接”\"></a>使用搜索命令搜索“连接”</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F1.png\" alt></p>\n<h4 id=\"打开连接应用，\"><a href=\"#打开连接应用，\" class=\"headerlink\" title=\"打开连接应用，\"></a>打开连接应用，</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F2.png\" alt></p>\n<h4 id=\"记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\"><a href=\"#记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\" class=\"headerlink\" title=\"记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\"></a>记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。</h4><hr>\n<h3 id=\"2-手机端\"><a href=\"#2-手机端\" class=\"headerlink\" title=\"2.手机端\"></a>2.手机端</h3><hr>\n<h4 id=\"打开设置\"><a href=\"#打开设置\" class=\"headerlink\" title=\"打开设置\"></a>打开设置</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F3.jpg\" alt></p>\n<h4 id=\"选择设备连接\"><a href=\"#选择设备连接\" class=\"headerlink\" title=\"选择设备连接\"></a>选择设备连接</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F4.jpg\" alt></p>\n<h4 id=\"选择无线投屏功能\"><a href=\"#选择无线投屏功能\" class=\"headerlink\" title=\"选择无线投屏功能\"></a>选择无线投屏功能</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F5.jpg\" alt></p>\n<h4 id=\"需要打开WLAN，它会搜索可使用设备。\"><a href=\"#需要打开WLAN，它会搜索可使用设备。\" class=\"headerlink\" title=\"需要打开WLAN，它会搜索可使用设备。\"></a>需要打开WLAN，它会搜索可使用设备。</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F6.jpg\" alt><br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F7.jpg\" alt></p>\n<h4 id=\"选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\"><a href=\"#选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\" class=\"headerlink\" title=\"选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\"></a>选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F8.png\" alt></p>\n<h4 id=\"点右上角按钮，可以全屏。\"><a href=\"#点右上角按钮，可以全屏。\" class=\"headerlink\" title=\"点右上角按钮，可以全屏。\"></a>点右上角按钮，可以全屏。</h4><hr>\n<p>大家赶紧去试试吧。<br>有问题可以联系我，邮箱：<a href=\"mailto:hanbing3566@gmail.com\">hanbing3566@gmail.com</a></p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":344,"excerpt":"<p>手机上屏幕小，看视频特别难受，并且有些软件没与PC版，应该怎么办?下面我来介绍一种方法，将手机屏幕投屏到电脑上。</p>\n<hr>\n<p>条件：1.装有win10的PC。<br>2. 手机具有无线投屏功能（现在大多数手机都有无线投屏功能，只是名字可能有些不同，下面一以荣耀V10手机为例给大家演示）</p>","more":"<hr>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><hr>\n<h3 id=\"1-PC端\"><a href=\"#1-PC端\" class=\"headerlink\" title=\"1.PC端\"></a>1.PC端</h3><hr>\n<h4 id=\"使用搜索命令搜索“连接”\"><a href=\"#使用搜索命令搜索“连接”\" class=\"headerlink\" title=\"使用搜索命令搜索“连接”\"></a>使用搜索命令搜索“连接”</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F1.png\" alt></p>\n<h4 id=\"打开连接应用，\"><a href=\"#打开连接应用，\" class=\"headerlink\" title=\"打开连接应用，\"></a>打开连接应用，</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F2.png\" alt></p>\n<h4 id=\"记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\"><a href=\"#记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\" class=\"headerlink\" title=\"记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。\"></a>记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。</h4><hr>\n<h3 id=\"2-手机端\"><a href=\"#2-手机端\" class=\"headerlink\" title=\"2.手机端\"></a>2.手机端</h3><hr>\n<h4 id=\"打开设置\"><a href=\"#打开设置\" class=\"headerlink\" title=\"打开设置\"></a>打开设置</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F3.jpg\" alt></p>\n<h4 id=\"选择设备连接\"><a href=\"#选择设备连接\" class=\"headerlink\" title=\"选择设备连接\"></a>选择设备连接</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F4.jpg\" alt></p>\n<h4 id=\"选择无线投屏功能\"><a href=\"#选择无线投屏功能\" class=\"headerlink\" title=\"选择无线投屏功能\"></a>选择无线投屏功能</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F5.jpg\" alt></p>\n<h4 id=\"需要打开WLAN，它会搜索可使用设备。\"><a href=\"#需要打开WLAN，它会搜索可使用设备。\" class=\"headerlink\" title=\"需要打开WLAN，它会搜索可使用设备。\"></a>需要打开WLAN，它会搜索可使用设备。</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F6.jpg\" alt><br><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F7.jpg\" alt></p>\n<h4 id=\"选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\"><a href=\"#选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\" class=\"headerlink\" title=\"选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。\"></a>选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F8.png\" alt></p>\n<h4 id=\"点右上角按钮，可以全屏。\"><a href=\"#点右上角按钮，可以全屏。\" class=\"headerlink\" title=\"点右上角按钮，可以全屏。\"></a>点右上角按钮，可以全屏。</h4><hr>\n<p>大家赶紧去试试吧。<br>有问题可以联系我，邮箱：<a href=\"mailto:hanbing3566@gmail.com\">hanbing3566@gmail.com</a></p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"},{"title":"论文工具推荐","catalog":true,"date":"2020-03-15T13:17:52.000Z","subtitle":null,"_content":"\n在这里给大家安利几款软件，都是在写论文过程中常用的软件。\n\n由于这些软件我都已经安装过了，所以没有给出详细的安装过程，不过均给出了相关的教程地址。\n\n---\n\n### 首先就是office和wps\n\n---\n<!--more-->\n这俩款软件，不需要多说，大家都在用。至于用哪个，看大家使用习惯。\n\nwps可以从官网上下载安装包，安装. [https://www.wps.cn/](https://www.wps.cn/)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/wps1.png)\n\noffice,如果是个人使用，不用商业用途可以在微信公众号==软件安装管家==上获取最新的破解版本。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/软件安装管家1.png)\n\n点软件目录，里面有很多专业工具。里面有安装教程，我就不再说明了。\n\n#### 仅可用于个人使用\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/软件安装管家2.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/word1.png)\n\n---\n\n### 画框图工具\n\n---\n\n要写论文过程中，框图电路图等，是论文中的必要元素，通常大家可能会使用visio画图，今天我再给大家推荐一款软件==亿图==也是一款画图软件，功能比较强大，个人感觉，亿图比较好用。\n\nvisio：同样在公众号里会有最新版本有visio。此处不再赘述。\n\n亿图：也是一款收费软件，如果大家是个人使用，可以点击链接下载破解版[https://www.lanzous.com/iaakh4b](https://www.lanzous.com/iaakh4b)\n\n压缩包内有详细的安装和破解过程，另外，亿可以导出多种格式，非常方便。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/亿图1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/亿图2.png)\n\n---\n\n### 图表\n\n---\n\n框图和电路图画好了，在数据结果部分可能需要画图表，图表可以使用excel来画，不过想让图表美观一点，可能有点费力了。最常用的是MATLAB来画图和渲染，matlab的下载和安装，同样在微信公众号软件安管家上可以找到。\n\n![盗一张图](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/matlab1.png)\n\n---\n\n### 公式\n\n---\n\n写论文时难免会需要输入一些公式，尤其是理工科。常用的公式编辑器为mathtype。\n\n[https://www.mathtype.cn/](https://www.mathtype.cn/) 大家可以在官网下载安装使用\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathtype1.png)\n\n再给大家安利一款公式软件，它不是用来写公式的而是用来识别公式，截图需要识别的公式，它会自己识别公式，可以转为latex语言，也可以直接放入word中。下载地址[https://mathpix.com/](https://mathpix.com/) 选择相应的版本下载安装即可。需要注册登录才能下载，是free的。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix2.png)\n\n---\n\n### 参考文献\n\n---\n\n参考文献的引用，如果按格式一个一个输入，很慢的。给大家推荐一个网址，可以批量引用参考文献---百度学术[http://xueshu.baidu.com/](http://xueshu.baidu.com/) \n\n输入参考文献名称或者关键字，点批量引用。点右下角的图标。选择引用格式一键复制即可。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/百度学术2.png)\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/百度学术1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/百度学术3.png)\n\n这是一些常用的论文工具，如有没有提及或者表述不对之处，希望大家帮我指出来\n\n---\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","source":"_posts/论文写作小工具推荐.md","raw":"---\ntitle: \"论文工具推荐\"\ncatalog: true\ndate: 2020-3-15 21:17:52\nsubtitle: \n\ntags:\n- 工具\n- 写论文\ncategories:\n- 经验分享\n---\n\n在这里给大家安利几款软件，都是在写论文过程中常用的软件。\n\n由于这些软件我都已经安装过了，所以没有给出详细的安装过程，不过均给出了相关的教程地址。\n\n---\n\n### 首先就是office和wps\n\n---\n<!--more-->\n这俩款软件，不需要多说，大家都在用。至于用哪个，看大家使用习惯。\n\nwps可以从官网上下载安装包，安装. [https://www.wps.cn/](https://www.wps.cn/)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/wps1.png)\n\noffice,如果是个人使用，不用商业用途可以在微信公众号==软件安装管家==上获取最新的破解版本。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/软件安装管家1.png)\n\n点软件目录，里面有很多专业工具。里面有安装教程，我就不再说明了。\n\n#### 仅可用于个人使用\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/软件安装管家2.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/word1.png)\n\n---\n\n### 画框图工具\n\n---\n\n要写论文过程中，框图电路图等，是论文中的必要元素，通常大家可能会使用visio画图，今天我再给大家推荐一款软件==亿图==也是一款画图软件，功能比较强大，个人感觉，亿图比较好用。\n\nvisio：同样在公众号里会有最新版本有visio。此处不再赘述。\n\n亿图：也是一款收费软件，如果大家是个人使用，可以点击链接下载破解版[https://www.lanzous.com/iaakh4b](https://www.lanzous.com/iaakh4b)\n\n压缩包内有详细的安装和破解过程，另外，亿可以导出多种格式，非常方便。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/亿图1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/亿图2.png)\n\n---\n\n### 图表\n\n---\n\n框图和电路图画好了，在数据结果部分可能需要画图表，图表可以使用excel来画，不过想让图表美观一点，可能有点费力了。最常用的是MATLAB来画图和渲染，matlab的下载和安装，同样在微信公众号软件安管家上可以找到。\n\n![盗一张图](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/matlab1.png)\n\n---\n\n### 公式\n\n---\n\n写论文时难免会需要输入一些公式，尤其是理工科。常用的公式编辑器为mathtype。\n\n[https://www.mathtype.cn/](https://www.mathtype.cn/) 大家可以在官网下载安装使用\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathtype1.png)\n\n再给大家安利一款公式软件，它不是用来写公式的而是用来识别公式，截图需要识别的公式，它会自己识别公式，可以转为latex语言，也可以直接放入word中。下载地址[https://mathpix.com/](https://mathpix.com/) 选择相应的版本下载安装即可。需要注册登录才能下载，是free的。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix2.png)\n\n---\n\n### 参考文献\n\n---\n\n参考文献的引用，如果按格式一个一个输入，很慢的。给大家推荐一个网址，可以批量引用参考文献---百度学术[http://xueshu.baidu.com/](http://xueshu.baidu.com/) \n\n输入参考文献名称或者关键字，点批量引用。点右下角的图标。选择引用格式一键复制即可。\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/百度学术2.png)\n\n\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/百度学术1.png)\n\n![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/百度学术3.png)\n\n这是一些常用的论文工具，如有没有提及或者表述不对之处，希望大家帮我指出来\n\n---\n\n\n博客网站  ：\n[ccbirds.cn](http://ccbirds.cn)   \n[ccbirds.github.io](https://ccbirds.github.io/)\n\n\n\n","slug":"论文写作小工具推荐","published":1,"updated":"2020-03-22T00:43:35.595Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck849yzgu0011pmjx2wik6ylo","content":"<p>在这里给大家安利几款软件，都是在写论文过程中常用的软件。</p>\n<p>由于这些软件我都已经安装过了，所以没有给出详细的安装过程，不过均给出了相关的教程地址。</p>\n<hr>\n<h3 id=\"首先就是office和wps\"><a href=\"#首先就是office和wps\" class=\"headerlink\" title=\"首先就是office和wps\"></a>首先就是office和wps</h3><hr>\n<a id=\"more\"></a>\n<p>这俩款软件，不需要多说，大家都在用。至于用哪个，看大家使用习惯。</p>\n<p>wps可以从官网上下载安装包，安装. <a href=\"https://www.wps.cn/\" target=\"_blank\" rel=\"noopener\">https://www.wps.cn/</a></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/wps1.png\" alt></p>\n<p>office,如果是个人使用，不用商业用途可以在微信公众号==软件安装管家==上获取最新的破解版本。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%AE%A1%E5%AE%B61.png\" alt></p>\n<p>点软件目录，里面有很多专业工具。里面有安装教程，我就不再说明了。</p>\n<h4 id=\"仅可用于个人使用\"><a href=\"#仅可用于个人使用\" class=\"headerlink\" title=\"仅可用于个人使用\"></a>仅可用于个人使用</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%AE%A1%E5%AE%B62.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/word1.png\" alt></p>\n<hr>\n<h3 id=\"画框图工具\"><a href=\"#画框图工具\" class=\"headerlink\" title=\"画框图工具\"></a>画框图工具</h3><hr>\n<p>要写论文过程中，框图电路图等，是论文中的必要元素，通常大家可能会使用visio画图，今天我再给大家推荐一款软件==亿图==也是一款画图软件，功能比较强大，个人感觉，亿图比较好用。</p>\n<p>visio：同样在公众号里会有最新版本有visio。此处不再赘述。</p>\n<p>亿图：也是一款收费软件，如果大家是个人使用，可以点击链接下载破解版<a href=\"https://www.lanzous.com/iaakh4b\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/iaakh4b</a></p>\n<p>压缩包内有详细的安装和破解过程，另外，亿可以导出多种格式，非常方便。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E4%BA%BF%E5%9B%BE1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E4%BA%BF%E5%9B%BE2.png\" alt></p>\n<hr>\n<h3 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h3><hr>\n<p>框图和电路图画好了，在数据结果部分可能需要画图表，图表可以使用excel来画，不过想让图表美观一点，可能有点费力了。最常用的是MATLAB来画图和渲染，matlab的下载和安装，同样在微信公众号软件安管家上可以找到。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/matlab1.png\" alt=\"盗一张图\"></p>\n<hr>\n<h3 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h3><hr>\n<p>写论文时难免会需要输入一些公式，尤其是理工科。常用的公式编辑器为mathtype。</p>\n<p><a href=\"https://www.mathtype.cn/\" target=\"_blank\" rel=\"noopener\">https://www.mathtype.cn/</a> 大家可以在官网下载安装使用</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathtype1.png\" alt></p>\n<p>再给大家安利一款公式软件，它不是用来写公式的而是用来识别公式，截图需要识别的公式，它会自己识别公式，可以转为latex语言，也可以直接放入word中。下载地址<a href=\"https://mathpix.com/\" target=\"_blank\" rel=\"noopener\">https://mathpix.com/</a> 选择相应的版本下载安装即可。需要注册登录才能下载，是free的。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix2.png\" alt></p>\n<hr>\n<h3 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h3><hr>\n<p>参考文献的引用，如果按格式一个一个输入，很慢的。给大家推荐一个网址，可以批量引用参考文献—百度学术<a href=\"http://xueshu.baidu.com/\" target=\"_blank\" rel=\"noopener\">http://xueshu.baidu.com/</a> </p>\n<p>输入参考文献名称或者关键字，点批量引用。点右下角的图标。选择引用格式一键复制即可。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF2.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF3.png\" alt></p>\n<p>这是一些常用的论文工具，如有没有提及或者表述不对之处，希望大家帮我指出来</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>\n","site":{"data":{}},"length":976,"excerpt":"<p>在这里给大家安利几款软件，都是在写论文过程中常用的软件。</p>\n<p>由于这些软件我都已经安装过了，所以没有给出详细的安装过程，不过均给出了相关的教程地址。</p>\n<hr>\n<h3 id=\"首先就是office和wps\"><a href=\"#首先就是office和wps\" class=\"headerlink\" title=\"首先就是office和wps\"></a>首先就是office和wps</h3><hr>","more":"<p>这俩款软件，不需要多说，大家都在用。至于用哪个，看大家使用习惯。</p>\n<p>wps可以从官网上下载安装包，安装. <a href=\"https://www.wps.cn/\" target=\"_blank\" rel=\"noopener\">https://www.wps.cn/</a></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/wps1.png\" alt></p>\n<p>office,如果是个人使用，不用商业用途可以在微信公众号==软件安装管家==上获取最新的破解版本。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%AE%A1%E5%AE%B61.png\" alt></p>\n<p>点软件目录，里面有很多专业工具。里面有安装教程，我就不再说明了。</p>\n<h4 id=\"仅可用于个人使用\"><a href=\"#仅可用于个人使用\" class=\"headerlink\" title=\"仅可用于个人使用\"></a>仅可用于个人使用</h4><p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%AE%A1%E5%AE%B62.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/word1.png\" alt></p>\n<hr>\n<h3 id=\"画框图工具\"><a href=\"#画框图工具\" class=\"headerlink\" title=\"画框图工具\"></a>画框图工具</h3><hr>\n<p>要写论文过程中，框图电路图等，是论文中的必要元素，通常大家可能会使用visio画图，今天我再给大家推荐一款软件==亿图==也是一款画图软件，功能比较强大，个人感觉，亿图比较好用。</p>\n<p>visio：同样在公众号里会有最新版本有visio。此处不再赘述。</p>\n<p>亿图：也是一款收费软件，如果大家是个人使用，可以点击链接下载破解版<a href=\"https://www.lanzous.com/iaakh4b\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/iaakh4b</a></p>\n<p>压缩包内有详细的安装和破解过程，另外，亿可以导出多种格式，非常方便。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E4%BA%BF%E5%9B%BE1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E4%BA%BF%E5%9B%BE2.png\" alt></p>\n<hr>\n<h3 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h3><hr>\n<p>框图和电路图画好了，在数据结果部分可能需要画图表，图表可以使用excel来画，不过想让图表美观一点，可能有点费力了。最常用的是MATLAB来画图和渲染，matlab的下载和安装，同样在微信公众号软件安管家上可以找到。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/matlab1.png\" alt=\"盗一张图\"></p>\n<hr>\n<h3 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h3><hr>\n<p>写论文时难免会需要输入一些公式，尤其是理工科。常用的公式编辑器为mathtype。</p>\n<p><a href=\"https://www.mathtype.cn/\" target=\"_blank\" rel=\"noopener\">https://www.mathtype.cn/</a> 大家可以在官网下载安装使用</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathtype1.png\" alt></p>\n<p>再给大家安利一款公式软件，它不是用来写公式的而是用来识别公式，截图需要识别的公式，它会自己识别公式，可以转为latex语言，也可以直接放入word中。下载地址<a href=\"https://mathpix.com/\" target=\"_blank\" rel=\"noopener\">https://mathpix.com/</a> 选择相应的版本下载安装即可。需要注册登录才能下载，是free的。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix2.png\" alt></p>\n<hr>\n<h3 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h3><hr>\n<p>参考文献的引用，如果按格式一个一个输入，很慢的。给大家推荐一个网址，可以批量引用参考文献—百度学术<a href=\"http://xueshu.baidu.com/\" target=\"_blank\" rel=\"noopener\">http://xueshu.baidu.com/</a> </p>\n<p>输入参考文献名称或者关键字，点批量引用。点右下角的图标。选择引用格式一键复制即可。</p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF2.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF1.png\" alt></p>\n<p><img src=\"https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF3.png\" alt></p>\n<p>这是一些常用的论文工具，如有没有提及或者表述不对之处，希望大家帮我指出来</p>\n<hr>\n<p>博客网站  ：<br><a href=\"http://ccbirds.cn\">ccbirds.cn</a><br><a href=\"https://ccbirds.github.io/\" target=\"_blank\" rel=\"noopener\">ccbirds.github.io</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck849yzce0005pmjx9lmialr3","category_id":"ck849yzdk0008pmjx1vh3gvjd","_id":"ck849yzf8000hpmjxddh6em5i"},{"post_id":"ck849yzem000epmjx0eog3kjx","category_id":"ck849yzel000dpmjx5omg9m8g","_id":"ck849yzfl000opmjx4hpuhyiz"},{"post_id":"ck849yzd60007pmjxa1we5p4i","category_id":"ck849yzel000dpmjx5omg9m8g","_id":"ck849yzg2000rpmjx0xdrei9z"},{"post_id":"ck849yzf7000gpmjxej055wfh","category_id":"ck849yzdk0008pmjx1vh3gvjd","_id":"ck849yzg5000upmjxeoswdgmk"},{"post_id":"ck849yzfb000kpmjxes7s7l7s","category_id":"ck849yzel000dpmjx5omg9m8g","_id":"ck849yzgi000xpmjxd85l2eex"},{"post_id":"ck849yzdl0009pmjxd1ga4j2t","category_id":"ck849yzel000dpmjx5omg9m8g","_id":"ck849yzgr000zpmjx6b131mnj"},{"post_id":"ck849yzff000npmjx2xy8368u","category_id":"ck849yzdk0008pmjx1vh3gvjd","_id":"ck849yzgw0012pmjx3com3lp7"},{"post_id":"ck849yzfx000qpmjxblcz62ls","category_id":"ck849yzdk0008pmjx1vh3gvjd","_id":"ck849yzgx0013pmjx036xe7t6"},{"post_id":"ck849yzeg000apmjxcfd474ed","category_id":"ck849yzel000dpmjx5omg9m8g","_id":"ck849yzgy0015pmjx6l077xca"},{"post_id":"ck849yzg3000tpmjxc26v0d7f","category_id":"ck849yzel000dpmjx5omg9m8g","_id":"ck849yzgz0016pmjxddoj8c4k"},{"post_id":"ck849yzg7000wpmjxfn8w3lno","category_id":"ck849yzdk0008pmjx1vh3gvjd","_id":"ck849yzh80018pmjx3ymkaz7o"},{"post_id":"ck849yzek000cpmjxbr205n9p","category_id":"ck849yzel000dpmjx5omg9m8g","_id":"ck849yzh80019pmjxebw688cl"},{"post_id":"ck849yzgq000ypmjxctfxe5lm","category_id":"ck849yzdk0008pmjx1vh3gvjd","_id":"ck849yzha001bpmjx4s33hk06"},{"post_id":"ck849yzgu0011pmjx2wik6ylo","category_id":"ck849yzdk0008pmjx1vh3gvjd","_id":"ck849yzhe001dpmjx1f6vfz5c"}],"PostTag":[{"post_id":"ck849yzc70004pmjxh6oraz6e","tag_id":"ck849yzcl0006pmjx7exx0c16","_id":"ck849yzf8000ipmjxfn2x4bgh"},{"post_id":"ck849yzc70004pmjxh6oraz6e","tag_id":"ck849yzei000bpmjx8ug557ov","_id":"ck849yzfd000lpmjx4kcb6rx9"},{"post_id":"ck849yzce0005pmjx9lmialr3","tag_id":"ck849yzeo000fpmjxelk9cdgn","_id":"ck849yzhe001cpmjx428vbyn9"},{"post_id":"ck849yzce0005pmjx9lmialr3","tag_id":"ck849yzfe000mpmjxc60lfvq0","_id":"ck849yzhf001epmjxd6e1h5fz"},{"post_id":"ck849yzce0005pmjx9lmialr3","tag_id":"ck849yzg3000spmjxem865uvw","_id":"ck849yzhg001gpmjxfbu2ftfq"},{"post_id":"ck849yzce0005pmjx9lmialr3","tag_id":"ck849yzgr0010pmjxajn53h0z","_id":"ck849yzhh001hpmjx8pstf4fo"},{"post_id":"ck849yzce0005pmjx9lmialr3","tag_id":"ck849yzgx0014pmjx3g6x42cp","_id":"ck849yzi1001jpmjx6unk1fi2"},{"post_id":"ck849yzce0005pmjx9lmialr3","tag_id":"ck849yzh70017pmjxh90u7yf6","_id":"ck849yzi3001kpmjx09z65enl"},{"post_id":"ck849yzd60007pmjxa1we5p4i","tag_id":"ck849yzh9001apmjxhp872lsq","_id":"ck849yzi7001mpmjx0nckdd41"},{"post_id":"ck849yzd60007pmjxa1we5p4i","tag_id":"ck849yzhf001fpmjxekn96par","_id":"ck849yzi8001npmjx0z119h3p"},{"post_id":"ck849yzd60007pmjxa1we5p4i","tag_id":"ck849yzhh001ipmjx3yhd991i","_id":"ck849yzi9001ppmjx2neqhugd"},{"post_id":"ck849yzdl0009pmjxd1ga4j2t","tag_id":"ck849yzh9001apmjxhp872lsq","_id":"ck849yzim001spmjxax96c9kh"},{"post_id":"ck849yzdl0009pmjxd1ga4j2t","tag_id":"ck849yzi8001opmjxegemgpep","_id":"ck849yzim001tpmjx5og836ew"},{"post_id":"ck849yzdl0009pmjxd1ga4j2t","tag_id":"ck849yzih001qpmjxa89c7ygs","_id":"ck849yzin001vpmjxffgs37by"},{"post_id":"ck849yzeg000apmjxcfd474ed","tag_id":"ck849yzh9001apmjxhp872lsq","_id":"ck849yzir001ypmjx2klfap6w"},{"post_id":"ck849yzeg000apmjxcfd474ed","tag_id":"ck849yzhf001fpmjxekn96par","_id":"ck849yzis001zpmjx76qvbalo"},{"post_id":"ck849yzeg000apmjxcfd474ed","tag_id":"ck849yzin001wpmjxchi4ctg6","_id":"ck849yzis0021pmjx6s70hb1s"},{"post_id":"ck849yzek000cpmjxbr205n9p","tag_id":"ck849yzh9001apmjxhp872lsq","_id":"ck849yziu0024pmjxepge0y95"},{"post_id":"ck849yzek000cpmjxbr205n9p","tag_id":"ck849yzis0020pmjx494pg7tr","_id":"ck849yziu0025pmjx1ydi22xp"},{"post_id":"ck849yzek000cpmjxbr205n9p","tag_id":"ck849yzit0022pmjxeqj22kh6","_id":"ck849yzj60027pmjx5mxigr2t"},{"post_id":"ck849yzem000epmjx0eog3kjx","tag_id":"ck849yzit0023pmjxcs5v9dxm","_id":"ck849yzj80029pmjxfr2u4kyb"},{"post_id":"ck849yzem000epmjx0eog3kjx","tag_id":"ck849yzh9001apmjxhp872lsq","_id":"ck849yzj9002apmjxhbdjadpg"},{"post_id":"ck849yzf7000gpmjxej055wfh","tag_id":"ck849yzhf001fpmjxekn96par","_id":"ck849yzji002epmjxcj3p0wcq"},{"post_id":"ck849yzf7000gpmjxej055wfh","tag_id":"ck849yzj9002bpmjx58m4ftz5","_id":"ck849yzji002fpmjx04cv48l6"},{"post_id":"ck849yzf7000gpmjxej055wfh","tag_id":"ck849yzjg002cpmjx13xy1hpe","_id":"ck849yzjj002hpmjx8i3v14zn"},{"post_id":"ck849yzfb000kpmjxes7s7l7s","tag_id":"ck849yzh9001apmjxhp872lsq","_id":"ck849yzjj002jpmjx6nhqb05m"},{"post_id":"ck849yzfb000kpmjxes7s7l7s","tag_id":"ck849yzji002gpmjx9z8i1iaj","_id":"ck849yzjj002kpmjx8aqo1jo5"},{"post_id":"ck849yzff000npmjx2xy8368u","tag_id":"ck849yzhf001fpmjxekn96par","_id":"ck849yzka002opmjx5mie3m6h"},{"post_id":"ck849yzff000npmjx2xy8368u","tag_id":"ck849yzi8001opmjxegemgpep","_id":"ck849yzka002ppmjx6xjvbqin"},{"post_id":"ck849yzff000npmjx2xy8368u","tag_id":"ck849yzjv002mpmjxa2i79ykw","_id":"ck849yzkb002rpmjx24tp8t9q"},{"post_id":"ck849yzfx000qpmjxblcz62ls","tag_id":"ck849yzjx002npmjx7rnwf3ir","_id":"ck849yzkd002tpmjxdchobg1c"},{"post_id":"ck849yzfx000qpmjxblcz62ls","tag_id":"ck849yzka002qpmjx6c0e1dah","_id":"ck849yzkd002upmjxadlcah80"},{"post_id":"ck849yzg3000tpmjxc26v0d7f","tag_id":"ck849yzh9001apmjxhp872lsq","_id":"ck849yzke002xpmjx7jmg6f6p"},{"post_id":"ck849yzg3000tpmjxc26v0d7f","tag_id":"ck849yzkd002vpmjx7l0d6ijg","_id":"ck849yzke002ypmjxejyg4eo8"},{"post_id":"ck849yzg7000wpmjxfn8w3lno","tag_id":"ck849yzke002wpmjx4rmi79my","_id":"ck849yzkf0031pmjx9tw6e9md"},{"post_id":"ck849yzg7000wpmjxfn8w3lno","tag_id":"ck849yzke002zpmjxfgkfft88","_id":"ck849yzkf0032pmjx0x2he4tn"},{"post_id":"ck849yzgq000ypmjxctfxe5lm","tag_id":"ck849yzkf0030pmjx7vts9uji","_id":"ck849yzkf0034pmjxf6m879v2"},{"post_id":"ck849yzgu0011pmjx2wik6ylo","tag_id":"ck849yzkf0033pmjx2seaas68","_id":"ck849yzkg0036pmjx6sr3enqt"},{"post_id":"ck849yzgu0011pmjx2wik6ylo","tag_id":"ck849yzkg0035pmjxgv3aeisj","_id":"ck849yzkg0037pmjx9f91egxz"}],"Tag":[{"name":"Hexo","_id":"ck849yzcl0006pmjx7exx0c16"},{"name":"Blog","_id":"ck849yzei000bpmjx8ug557ov"},{"name":"图床","_id":"ck849yzeo000fpmjxelk9cdgn"},{"name":"typroa","_id":"ck849yzfe000mpmjxc60lfvq0"},{"name":"picgo","_id":"ck849yzg3000spmjxem865uvw"},{"name":"github 图床","_id":"ck849yzgr0010pmjxajn53h0z"},{"name":"坚果云","_id":"ck849yzgx0014pmjx3g6x42cp"},{"name":"云笔记","_id":"ck849yzh70017pmjxh90u7yf6"},{"name":"nanopi","_id":"ck849yzh9001apmjxhp872lsq"},{"name":"ubuntu","_id":"ck849yzhf001fpmjxekn96par"},{"name":"SSH","_id":"ck849yzhh001ipmjx3yhd991i"},{"name":"python","_id":"ck849yzi8001opmjxegemgpep"},{"name":"oled","_id":"ck849yzih001qpmjxa89c7ygs"},{"name":"音乐闹钟","_id":"ck849yzin001wpmjxchi4ctg6"},{"name":"H5 cpu","_id":"ck849yzis0020pmjx494pg7tr"},{"name":"压力测试","_id":"ck849yzit0022pmjxeqj22kh6"},{"name":"unixbench","_id":"ck849yzit0023pmjxcs5v9dxm"},{"name":"git","_id":"ck849yzj9002bpmjx58m4ftz5"},{"name":"github","_id":"ck849yzjg002cpmjx13xy1hpe"},{"name":"oh my zsh","_id":"ck849yzji002gpmjx9z8i1iaj"},{"name":"pcharm","_id":"ck849yzjv002mpmjxa2i79ykw"},{"name":"hexo","_id":"ck849yzjx002npmjx7rnwf3ir"},{"name":"gitalk","_id":"ck849yzka002qpmjx6c0e1dah"},{"name":"博客托管","_id":"ck849yzkd002vpmjx7l0d6ijg"},{"name":"win10","_id":"ck849yzke002wpmjx4rmi79my"},{"name":"系统重装","_id":"ck849yzke002zpmjxfgkfft88"},{"name":"投屏","_id":"ck849yzkf0030pmjx7vts9uji"},{"name":"工具","_id":"ck849yzkf0033pmjx2seaas68"},{"name":"写论文","_id":"ck849yzkg0035pmjxgv3aeisj"}]}}